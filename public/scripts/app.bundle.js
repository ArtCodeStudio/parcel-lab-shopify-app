/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 4525:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";

// UNUSED EXPORTS: Main

// NAMESPACE OBJECT: ../../riba/packages/shopify-easdk/src/components/index.ts
var components_namespaceObject = {};
__webpack_require__.r(components_namespaceObject);
__webpack_require__.d(components_namespaceObject, {
  "BarComponent": () => BarComponent
});

// NAMESPACE OBJECT: ../../riba/packages/shopify-easdk/src/services/index.ts
var services_namespaceObject = {};
__webpack_require__.r(services_namespaceObject);
__webpack_require__.d(services_namespaceObject, {
  "BarWrapperService": () => BarWrapperService,
  "EASDKWrapperService": () => EASDKWrapperService,
  "ModalWrapperService": () => ModalWrapperService,
  "UserWrapperService": () => UserWrapperService,
  "WrapperService": () => WrapperService
});

// NAMESPACE OBJECT: ../../riba/packages/jquery/src/binders/index.ts
var binders_namespaceObject = {};
__webpack_require__.r(binders_namespaceObject);
__webpack_require__.d(binders_namespaceObject, {
  "onEventBinder": () => onEventBinder
});

// NAMESPACE OBJECT: ./ts/components/index.ts
var ts_components_namespaceObject = {};
__webpack_require__.r(ts_components_namespaceObject);
__webpack_require__.d(ts_components_namespaceObject, {
  "AccountConnectsComponent": () => AccountConnectsComponent,
  "ParcelLabListTrackingComponent": () => ParcelLabListTrackingComponent,
  "ParcelLabSettingsComponent": () => ParcelLabSettingsComponent,
  "PlansComponent": () => PlansComponent,
  "SidebarComponent": () => SidebarComponent,
  "SidebarMaskComponent": () => SidebarMaskComponent,
  "SidebarTogglerComponent": () => SidebarTogglerComponent,
  "SocketEventCardComponent": () => SocketEventCardComponent,
  "TdaI18nSwitcherComponent": () => TdaI18nSwitcherComponent,
  "WebhookExplorerComponent": () => WebhookExplorerComponent
});

// NAMESPACE OBJECT: ./ts/binders/index.ts
var ts_binders_namespaceObject = {};
__webpack_require__.r(ts_binders_namespaceObject);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./ts/locales/orders/webhooks/description.en.html
var description_en = __webpack_require__(2195);
var description_en_default = /*#__PURE__*/__webpack_require__.n(description_en);

// EXTERNAL MODULE: ./ts/locales/orders/webhooks/description.de.html
var description_de = __webpack_require__(1920);
var description_de_default = /*#__PURE__*/__webpack_require__.n(description_de);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/jquery-npm-3.5.1-965b25dbd8-1.zip/node_modules/jquery/dist/jquery.js
var jquery = __webpack_require__(3216);
var jquery_default = /*#__PURE__*/__webpack_require__.n(jquery);

// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./ts/locales/components/webhook-explorer/placeholder-card-content.en.html
var placeholder_card_content_en = __webpack_require__(8028);
var placeholder_card_content_en_default = /*#__PURE__*/__webpack_require__.n(placeholder_card_content_en);

// EXTERNAL MODULE: ./ts/locales/components/webhook-explorer/placeholder-card-content.de.html
var placeholder_card_content_de = __webpack_require__(7441);
var placeholder_card_content_de_default = /*#__PURE__*/__webpack_require__.n(placeholder_card_content_de);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(7857);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/$$virtual/debug-virtual-96c2470d0d/0/cache/debug-npm-4.3.0-b4bda317a1-1.zip/node_modules/debug/src/browser.js
var browser = __webpack_require__(9659);
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ../../riba/packages/router/src/index.ts
var router_src = __webpack_require__(3289);
// EXTERNAL MODULE: ../../riba/packages/i18n/src/index.ts
var i18n_src = __webpack_require__(7344);
// EXTERNAL MODULE: ../../riba/packages/bs4/src/index.ts + 68 modules
var bs4_src = __webpack_require__(5668);
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/interfaces/shopify-easdk.ts
/**
 * type definitions for Shopify's Embedded App SDK
 * @see https://help.shopify.com/api/sdks/embedded-app-sdk
 */
var ShopifyApp = window.ShopifyApp;
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/interfaces/index.ts

// EXTERNAL MODULE: ../../riba/packages/shopify-easdk/src/components/bar/bar.component.pug
var bar_component = __webpack_require__(3128);
var bar_component_default = /*#__PURE__*/__webpack_require__.n(bar_component);

// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/components/bar/bar.component.ts











function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var BarComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(BarComponent, _Component);

  var _super = _createSuper(BarComponent);

  createClass_default()(BarComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["buttons", "title", "icon", "pagination", "breadcrumb", "loading", "show-fallback-bar"];
    }
  }]);

  function BarComponent(element) {
    var _this;

    classCallCheck_default()(this, BarComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "bar", new BarWrapperService());

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      showFallbackBar: false
    });

    _this.init(BarComponent.observedAttributes);

    _this.listenForConfigChanges();

    return _this;
  }

  createClass_default()(BarComponent, [{
    key: "listenForConfigChanges",
    value: function listenForConfigChanges() {
      var _this2 = this;

      this.bar.event.on("bar:setShowFallbackBar", function (showFallbackBar) {
        _this2.scope.showFallbackBar = showFallbackBar;
      });
      this.bar.event.on("bar:initialize", function (fallback, config) {
        if (_this2.scope.buttons !== config.buttons) {
          _this2.scope.buttons = config.buttons;
        }

        if (_this2.scope.breadcrumb !== config.breadcrumb) {
          _this2.scope.breadcrumb = config.breadcrumb;
        }

        if (_this2.scope.title !== config.title) {
          _this2.scope.title = config.title;
        }

        if (_this2.scope.icon !== config.icon) {
          _this2.scope.icon = config.icon;
        }

        if (_this2.scope.pagination !== config.pagination) {
          _this2.scope.pagination = config.pagination;
        }

        console.debug("bar:initialize", fallback, config);
      });
      this.bar.event.on("bar:setTitle", function (fallback, title) {
        if (_this2.scope.title !== title) {
          _this2.scope.title = title;
        }

        console.debug("bar:setTitle", fallback, title);
      });
      this.bar.event.on("bar:loading", function (fallback, loading) {
        if (_this2.scope.loading !== loading.on) {
          _this2.scope.loading = loading.on;
        }

        console.debug("bar:loading", fallback, loading);
      });
      this.bar.event.on("bar:setPagination", function (fallback, pagination) {
        if (_this2.scope.pagination !== pagination) {
          _this2.scope.pagination = pagination;
        }

        console.debug("bar:setPagination", fallback, pagination);
      });
      this.bar.event.on("bar:setBreadcrumb", function (fallback, breadcrumb) {
        if (_this2.scope.breadcrumb !== breadcrumb) {
          _this2.scope.breadcrumb = breadcrumb;
        }

        console.debug("bar:setBreadcrumb", fallback, breadcrumb);
      });
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(BarComponent.prototype), "beforeBind", this).call(this);

              case 2:
                this.scope.buttons = this.bar.buttons;
                this.scope.breadcrumb = this.bar.breadcrumb;
                this.scope.title = this.bar.title;
                this.scope.icon = this.bar.icon;
                this.scope.pagination = this.bar.pagination;
                this.scope.showFallbackBar = this.bar.showFallbackBar;
                console.debug("beforeBind");

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(BarComponent.prototype), "afterBind", this).call(this);

              case 2:
                console.debug("afterBind", this.scope);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(BarComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(BarComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);

      if (attributeName === "buttons") {
        this.bar.initialize(this.scope);
      }

      if (attributeName === "title") {
        this.bar.setTitle(this.scope.title);
      }

      if (attributeName === "title" && this.scope.icon) {
        this.bar.setIcon(this.scope.icon);
      }

      if (attributeName === "pagination") {
        this.bar.setPagination(this.scope.pagination);
      }

      if (attributeName === "breadcrumb") {
        this.bar.setBreadcrumb(this.scope.breadcrumb);
      }

      if (attributeName === "loading") {
        if (this.scope.loading) {
          this.bar.loadingOn();
        } else {
          this.bar.loadingOff();
        }
      }

      if (attributeName === "show-fallback-bar") {
        this.bar.setShowFallbackBar(this.scope.showFallbackBar);
      }
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        console.debug("Do not template, because element has child nodes");
        return template;
      } else {
        template = bar_component_default()(this.scope);
        console.debug("Use template", template);
        return template;
      }
    }
  }]);

  return BarComponent;
}(src.Component);

defineProperty_default()(BarComponent, "tagName", "rv-shopify-easdk-bar");
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/components/index.ts

// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/wrapper.service.ts





var WrapperService = /*#__PURE__*/function () {
  createClass_default()(WrapperService, null, [{
    key: "inIframe",
    value: function inIframe() {
      try {
        return window.self !== window.top;
      } catch (e) {
        return true;
      }
    }
  }]);

  function WrapperService(shopifyApp) {
    classCallCheck_default()(this, WrapperService);

    defineProperty_default()(this, "event", new src.EventDispatcher("shopify-easdk"));

    defineProperty_default()(this, "shopifyApp", void 0);

    if (!shopifyApp && !ShopifyApp) {
      throw new Error(WrapperService.ERRORS.EASDK_NOT_FOUND);
    }

    this.shopifyApp = shopifyApp || ShopifyApp;
  }

  createClass_default()(WrapperService, [{
    key: "useFallback",
    value: function useFallback(force) {
      return !WrapperService.inIframe() || force;
    }
  }]);

  return WrapperService;
}();

defineProperty_default()(WrapperService, "ERRORS", {
  EASDK_NOT_FOUND: "Shopify's EASDK is required!\n    Add <script src=\"https://cdn.shopify.com/s/assets/external/app.js\"></script> to your html head.\n    See https://help.shopify.com/en/api/embedded-apps/embedded-app-sdk for more informations."
});
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/shopify-easdk-bar.service.ts








function shopify_easdk_bar_service_createSuper(Derived) { var hasNativeReflectConstruct = shopify_easdk_bar_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function shopify_easdk_bar_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var BarWrapperService = /*#__PURE__*/function (_WrapperService) {
  inherits_default()(BarWrapperService, _WrapperService);

  var _super = shopify_easdk_bar_service_createSuper(BarWrapperService);

  /**
   * Singleton instace
   */

  /**
   * Holds the setted buttons (setted by initialize BarWrapper['method']) to access for the fallback mode
   */

  /**
   * Holds the setted breadcrumbs config to access for the fallback mode
   */

  /**
   * Holds the setted title string to access for the fallback mode
   */

  /**
   * Holds the icon url to access for the fallback mode.
   */

  /**
   *  Holds the pagination config to access for the fallback mode.
   */

  /**
   * Holds the loading status to subscribe for the fallback mode.
   * Inspired by https://medium.com/beautiful-angular/show-loader-on-every-request-in-angular-2-9a0fca86afef
   *
   * @type {LoadingStateWrapper>}
   * @memberof BarWrapperService
   */

  /**
   * With this BehaviorSubject you can force the visablity of the fallback bar
   *
   * @type {boolean>}
   * @memberof BarWrapperService
   */
  function BarWrapperService(shopifyApp) {
    var _this;

    classCallCheck_default()(this, BarWrapperService);

    _this = _super.call(this, shopifyApp);

    defineProperty_default()(assertThisInitialized_default()(_this), "buttons", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "breadcrumb", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "title", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "icon", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "pagination", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "loading", {
      on: false
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "showFallbackBar", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "route", new src.EventDispatcher("main"));

    if (BarWrapperService.instance) {
      return possibleConstructorReturn_default()(_this, BarWrapperService.instance);
    }

    BarWrapperService.instance = assertThisInitialized_default()(_this);
    return _this;
  }
  /**
   * Accepts an object that defines how the top bar and buttons will look and behave.
   * This should almost always be called in the ready() method.
   * Default behavior if initialize is never called will result in some pretty safe defaults,
   * except that the loading spinner will never stop spinning.
   */


  createClass_default()(BarWrapperService, [{
    key: "initialize",
    value: function initialize(config) {
      this.buttons = config.buttons;
      this.breadcrumb = config.breadcrumb;
      this.title = config.title;
      this.icon = config.icon;
      this.pagination = config.pagination;
      this.event.trigger("bar:initialize", this.useFallback(false), {
        buttons: this.buttons,
        breadcrumb: this.breadcrumb,
        title: this.title,
        icon: this.icon,
        pagination: this.pagination
      });
      return this.shopifyApp.Bar.initialize(config);
    }
    /**
     * Force the visablity of the fallback bar which is normally only used outside the iframe
     *
     * @param {boolean} [forceFallback] Force the visablity of the fallback bar which is normally only used outside the iframe
     * @memberof BarWrapperService
     */

  }, {
    key: "setShowFallbackBar",
    value: function setShowFallbackBar(forceFallback) {
      var showFallbackBar = this.useFallback(forceFallback);

      if (this.showFallbackBar !== showFallbackBar) {
        this.showFallbackBar = showFallbackBar;
        this.event.trigger("bar:setShowFallbackBar", this.showFallbackBar);
      }
    }
    /**
     * Restarts the loading bar. It is a best practice to call it when moving between pages or firing off AJAX requests.
     * Fallback mode inspired by https://medium.com/beautiful-angular/show-loader-on-every-request-in-angular-2-9a0fca86afef
     * @param {boolean} [forceFallback] Force the fallback mode which is used if you are not in the shopify iframe
     * @param {('determinate' | 'indeterminate' | 'buffer' | 'query')} [mode='determinate'] The progress-bar supports four modes.
     * @param {('primary' | 'accent' | 'warn')} [color] The color of a progress-bar can be changed by using the color property.
     * @returns {void}
     * @memberof BarWrapperService
     */

  }, {
    key: "loadingOn",
    value: function loadingOn() {
      var forceFallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.loading.on !== true) {
        var fallback = this.useFallback(forceFallback);
        this.loading = {
          on: true
        };
        console.debug("loadingOn", fallback, this.loading);
        this.event.trigger("bar:loading", fallback, this.loading);
        this.event.trigger("bar:loadingOn", fallback, this.loading);
        return this.shopifyApp.Bar.loadingOn();
      }
    }
    /**
     * Stops the loading spinner. Should probably be called on every page in shopifyApp.ready().
     * Fallback mode inspired by https://medium.com/beautiful-angular/show-loader-on-every-request-in-angular-2-9a0fca86afef
     */

  }, {
    key: "loadingOff",
    value: function loadingOff() {
      if (this.loading.on !== false) {
        this.loading = {
          on: false
        };
        var fallback = this.useFallback(false);
        console.debug("loadingOff", fallback);
        this.event.trigger("bar:loading", fallback, this.loading);
        this.event.trigger("bar:loadingOff", fallback, this.loading);
        return this.shopifyApp.Bar.loadingOff();
      }
    }
    /**
     * Listen for route events to set the loading spinner automatically.
     * This is a custom method and not part of the officially Shopify EASDK!
     *
     * @param forceFallback
     * @memberof BarWrapperService
     */

  }, {
    key: "autoLoading",
    value: function autoLoading() {
      var _this2 = this;

      var forceFallback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this.route.on("newPageReady", function () // viewId: string,
      // currentStatus: State,
      // prevStatus: State,
      // container: HTMLElement,
      // newPageRawHTML: string,
      // dataset: any,
      // isFirstPageLoad: boolean
      {
        _this2.loadingOff();
      });
      this.route.on("initStateChange", function ()
      /*viewId: string, currentStatus: State, prevStatus: State*/
      {
        _this2.loadingOn(forceFallback);
      });
    }
    /**
     * Manually set the title string in the top bar. See shopifyApp.Bar.initialize().
     */

  }, {
    key: "setTitle",
    value: function setTitle() {
      var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

      if (this.title !== title) {
        this.title = title; // for the fallback

        this.event.trigger("bar:setTitle", this.useFallback(false), this.title);
        return this.shopifyApp.Bar.setTitle(title);
      }
    }
    /**
     * Automatically set the title on route change, needs the title property in rbia route dataset
     */

  }, {
    key: "autoTitle",
    value: function autoTitle(formatter) {
      var _this3 = this;

      this.route.on("newPageReady", function (viewId, currentStatus, prevStatus, container, newPageRawHTML, dataset) // isFirstPageLoad: boolean
      {
        if (formatter) {
          formatter(dataset.title).then(function (title) {
            _this3.setTitle(title);
          })["catch"](function (error) {
            console.error(error);
          });
        } else {
          _this3.setTitle(dataset.title);
        }
      });
    }
    /**
     * Manually set the icon of the top bar from a URL. See shopifyApp.Bar.initialize().
     * @param icon
     */

  }, {
    key: "setIcon",
    value: function setIcon(icon) {
      if (this.icon !== icon) {
        this.icon = icon;
        this.event.trigger("bar:setIcon", this.useFallback(false), this.icon);
        return this.shopifyApp.Bar.setIcon(this.icon);
      }
    }
    /**
     * Automatically set the icon on route change, needs the icon property in rbia route dataset
     */

  }, {
    key: "autoIcon",
    value: function autoIcon()
    /*forceFallback = false*/
    {
      var _this4 = this;

      this.route.on("newPageReady", function (viewId, currentStatus, prevStatus, container, newPageRawHTML, dataset) // isFirstPageLoad: boolean
      {
        _this4.setTitle(dataset.icon);
      });
    }
    /**
     * Manually set the pagination arrows, or pass undefined to remove them entirely. See ShopifyApp.Bar.initialize().
     */

  }, {
    key: "setPagination",
    value: function setPagination(config) {
      if (this.pagination !== config) {
        this.pagination = config;
        this.event.trigger("bar:setPagination", this.useFallback(false), this.pagination);
        this.shopifyApp.Bar.setPagination(config);
      }
    }
    /**
     * Manually set the breadcrumb in the top bar for an extra level of navigation.
     * Pass a button object, or pass undefined to remove it entirely. See shopifyApp.Bar.initialize().
     * @param config
     * @memberof BarWrapperService
     */

  }, {
    key: "setBreadcrumb",
    value: function setBreadcrumb(config) {
      if (this.breadcrumb !== config) {
        this.breadcrumb = config;
        this.event.trigger("bar:setBreadcrumb", this.useFallback(false), this.breadcrumb);
        return this.shopifyApp.Bar.setBreadcrumb(config);
      }
    }
  }]);

  return BarWrapperService;
}(WrapperService);

defineProperty_default()(BarWrapperService, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/shopify-easdk-modal.service.ts








function shopify_easdk_modal_service_createSuper(Derived) { var hasNativeReflectConstruct = shopify_easdk_modal_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function shopify_easdk_modal_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var ModalWrapperService = /*#__PURE__*/function (_WrapperService) {
  inherits_default()(ModalWrapperService, _WrapperService);

  var _super = shopify_easdk_modal_service_createSuper(ModalWrapperService);

  // Singleton instace
  // TODO
  function ModalWrapperService(shopifyApp) {
    var _this;

    classCallCheck_default()(this, ModalWrapperService);

    _this = _super.call(this, shopifyApp);

    defineProperty_default()(assertThisInitialized_default()(_this), "dialog", void 0);

    if (ModalWrapperService.instance) {
      return possibleConstructorReturn_default()(_this, ModalWrapperService.instance);
    }

    ModalWrapperService.instance = assertThisInitialized_default()(_this);
    return _this;
  }
  /**
   * Opens a modal dialog in the Shopify admin that in turn loads an iframe inside of it with the passed in URL.
   * It accepts a src attribute to be loaded, a title for the top of the bar,
   * and a configuration of primary and secondary buttons identical to Bar.initialize().
   * It also accepts a callback function that is called when the modal is closed.
   *
   * To learn how to communicate from the modal iframe to the app iframe, read Modal & App Communication.
   *
   * @see https://help.shopify.com/api/sdks/shopify-apps/embedded-app-sdk/features#modal-and-application-communication
   * @param {ModalInit} init
   * @param {(result, data) => void} fn
   * @memberof Modal
   */


  createClass_default()(ModalWrapperService, [{
    key: "open",
    value: function open(init, fn) {
      var _this2 = this;

      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var fallback = this.useFallback(forceFallback);
      this.event.trigger("open", fallback, init);
      this.shopifyApp.Modal.open(init, function (confirmed, data) {
        // modal closed
        _this2.event.trigger("closed", fallback, confirmed, data);

        if (typeof fn === "function") {
          fn(confirmed, data);
        }
      });
    }
    /**
     * Opens a Javascript style alert() in the admin.
     * When the modal is closed the optional callback is called and a modal close message is sent.
     * For this Wrapper you can get a Observable to get the close result by calling the afterClosed function you get as the return value.
     *
     * @param options
     * @param fn not used in this wrapper, use afterClosed you get as return value instead!
     * @memberof ModalWrapperService
     */

  }, {
    key: "alert",
    value: function alert(options, fn) {
      var _this3 = this;

      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var fallback = this.useFallback(forceFallback);
      console.debug("alert", options);
      this.event.trigger("alert", fallback, options);
      this.shopifyApp.Modal.alert(options, function (confirmed) {
        // modal closed
        _this3.event.trigger("closed", fallback, confirmed);

        if (typeof fn === "function") {
          fn(confirmed);
        }
      });
    }
    /**
     * Opens a Javascript style confirm() in the admin.
     * When the modal is closed the optional callback is called and a modal close message is sent.
     * The callback has the status of the closure passed in.
     *
     * @param options
     * @param fn `result` of callback is true if the user has accepted
     * @memberof Modal
     */

  }, {
    key: "confirm",
    value: function confirm(options, fn) {
      var _this4 = this;

      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var fallback = this.useFallback(forceFallback);
      console.debug("alert", fallback, options);
      this.event.trigger("alert", fallback, options);
      this.shopifyApp.Modal.confirm(options, function (confirmed) {
        // modal closed
        _this4.event.trigger("closed", fallback, confirmed);

        if (typeof fn === "function") {
          fn(confirmed);
        }
      });
    }
    /**
     * Opens a Javascript style input() dialog in the admin.
     * When the modal is closed the optional callback is called and a modal close message is sent.
     * The callback has the status of the closure and the contents of the input box passed in.
     *
     * @param {ModalInputOptions} options
     * @param {(result, data) => void} fn
     * @memberof Modal
     */

  }, {
    key: "input",
    value: function input(options, fn) {
      var _this5 = this;

      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var fallback = this.useFallback(forceFallback);
      console.debug("alert", fallback, options);
      this.event.trigger("alert", fallback, options);
      this.shopifyApp.Modal.input(options, function (confirmed, data) {
        // modal closed
        _this5.event.trigger("input", fallback, confirmed, data);

        if (typeof fn === "function") {
          fn(confirmed, data);
        }
      });
    }
    /**
     * Closes the currently open modal window and manually sets the result and data payload.
     * Result expects a true or false and data can contain the message payload, or nothing.
     *
     * @param {boolean} result
     * @param {string} data
     * @memberof Modal
     */

  }, {
    key: "close",
    value: function close(result, data) {
      return this.shopifyApp.Modal.close(result, data);
    }
    /**
     * Sets the height of the currently open modal window up to a maximum height of 700px and a minimum of 100px.
     * The height is applied to the body (excluding the header and footer) of the rendered modal.
     *
     * @param {number} height
     * @memberof Modal
     */

  }, {
    key: "setHeight",
    value: function setHeight(height) {
      return this.shopifyApp.Modal.setHeight(height);
    }
    /**
     * Opens a modal dialog containing a list of the products or collections available in the store,
     * with a search field for filtering results.
     * The modal can be used for selecting one or more products/collections, using the resource picker's options.
     *
     * The callback passed into the resource picker is invoked when the dialog is closed or a button is pressed.
     * The callback is passed a success flag (boolean) which will be true if products are selected.
     * The second parameter is a data object (JSON) which contains the selected products (if any)
     * and any errors that may have surfaced.
     *
     * @param {ProductPickerOptions} options
     * @param {(success: boolean, data: {products: [any], errors: [String]}) => void} fn
     * @memberof Modal
     */

  }, {
    key: "productPicker",
    value: function productPicker(options, fn) {
      return this.shopifyApp.Modal.productPicker(options, fn);
    }
    /**
     * The collection picker has the same interface as the product picker.
     *
     * @param {ProductPickerOptions} options
     * @param {ProductPickerCallback} fn
     * @memberof Modal
     */

  }, {
    key: "collectionPicker",
    value: function collectionPicker(options, fn) {
      return this.shopifyApp.Modal.collectionPicker(options, fn);
    }
  }]);

  return ModalWrapperService;
}(WrapperService);

defineProperty_default()(ModalWrapperService, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/shopify-easdk-user.service.ts








function shopify_easdk_user_service_createSuper(Derived) { var hasNativeReflectConstruct = shopify_easdk_user_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function shopify_easdk_user_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var UserWrapperService = /*#__PURE__*/function (_WrapperService) {
  inherits_default()(UserWrapperService, _WrapperService);

  var _super = shopify_easdk_user_service_createSuper(UserWrapperService);

  // Singleton instace
  function UserWrapperService(shopifyApp) {
    var _this;

    classCallCheck_default()(this, UserWrapperService);

    _this = _super.call(this, shopifyApp);

    if (UserWrapperService.instance) {
      return possibleConstructorReturn_default()(_this, UserWrapperService.instance);
    }

    UserWrapperService.instance = assertThisInitialized_default()(_this);
    return _this;
  }

  createClass_default()(UserWrapperService, [{
    key: "current",
    get: function get() {
      if (this.shopifyApp.User) {
        return this.shopifyApp.User.current;
      } else {
        // this.shopifyApp.User is undefined if we are not in iframe
        return undefined; // TODO
      }
    }
  }]);

  return UserWrapperService;
}(WrapperService);

defineProperty_default()(UserWrapperService, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/shopify-easdk.service.ts








function shopify_easdk_service_createSuper(Derived) { var hasNativeReflectConstruct = shopify_easdk_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function shopify_easdk_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

// rxjs
// import { Promise, Subscription, BehaviorSubject, Subject } from 'rxjs';

/* tslint:disable:member-ordering variable-name */




 // import { AlertComponent } from './alert/alert.component';
// import { ConfirmComponent } from './confirm/confirm.component';
// import { OpenComponent } from './open/open.component';

var EASDKWrapperService = /*#__PURE__*/function (_WrapperService) {
  inherits_default()(EASDKWrapperService, _WrapperService);

  var _super = shopify_easdk_service_createSuper(EASDKWrapperService);

  function EASDKWrapperService(shopifyApp) {
    var _this;

    classCallCheck_default()(this, EASDKWrapperService);

    _this = _super.call(this, shopifyApp);

    defineProperty_default()(assertThisInitialized_default()(_this), "event", new src.EventDispatcher("shopify-easdk"));

    defineProperty_default()(assertThisInitialized_default()(_this), "config", {
      shopOrigin: "",
      apiKey: ""
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "message", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "Bar", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "Modal", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "User", void 0);

    _this.Bar = new BarWrapperService(_this.shopifyApp);
    _this.Modal = new ModalWrapperService(_this.shopifyApp);
    _this.User = new UserWrapperService(_this.shopifyApp);

    if (EASDKWrapperService.instance) {
      return possibleConstructorReturn_default()(_this, EASDKWrapperService.instance);
    }

    _this.listenForMessage();

    EASDKWrapperService.instance = assertThisInitialized_default()(_this);
    return _this;
  }
  /**
   * Receive EASDK messages and listen for them
   * Subscribe `message$' to get the messages!
   * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
   */


  createClass_default()(EASDKWrapperService, [{
    key: "listenForMessage",
    value: function listenForMessage() {
      var _this2 = this;

      window.addEventListener("message", function (event) {
        var data = {};
        var message = "";

        try {
          var _data = JSON.parse(event.data);

          data = _data.data;
          message = _data.message;
        } catch (error) {
          console.debug("Error on parse message data", error);
        }

        _this2.message = {
          message: message,
          data: data
        };
        console.debug("Receive message:", event, message, data);
      }, false);
      this.event.on("bar:loading", function (fallback, loading) {
        console.debug("bar:loading", fallback, loading);
      });
      this.event.on("bar:loadingOn", function (fallback, loading) {
        console.debug("bar:loadingOn", fallback, loading);
      });
      this.event.on("bar:loadingOff", function (fallback, loading) {
        console.debug("bar:loadingOff", fallback, loading);
      });
      this.event.on("bar:setTitle", function (fallback, title) {
        console.debug("bar:setTitle", fallback, title);
      });
      this.event.on("bar:setIcon", function (fallback, icon) {
        console.debug("bar:setIcon", fallback, icon);
      });
      this.event.on("bar:setPagination", function (fallback, config) {
        console.debug("bar:setPagination", fallback, config);
      });
      this.event.on("bar:setBreadcrumb", function (fallback, config) {
        console.debug("bar:setBreadcrumb", fallback, config);
      });
    }
    /**
     * Should be called immediately after the script file has loaded,
     * as early as possible on the page (not in a jQuery.ready() or something).
     * It will initialize data values, add postMessage listeners,
     * check that the app is embedded in an iframe, and setup our initializers.
     */

  }, {
    key: "init",
    value: function init(config) {
      this.config = config;
      this.shopifyApp.init(config);
      return;
    }
    /**
     * Works similarly to jQuery's ready() function.
     * It can be called many times on a page, it accepts functions,
     * and when the Admin and the app are loaded it will call the functions in order.
     *
     * ```
     * shopifyApp.ready(function(){
     *   alert("Ready");
     * });
     * ```
     */

  }, {
    key: "ready",
    value: function ready(cb) {
      return this.shopifyApp.ready(cb);
    }
    /**
     * Used to rewrite the current URL. This is called automatically and probably doesn't need to be explicitly called at all.
     *
     * @param {string} path The path to rewrite in the current URL outsite of the iframe
     * @returns {void}
     * @memberof EASDKWrapperService
     */

  }, {
    key: "pushState",
    value: function pushState(path) {
      return this.shopifyApp.pushState(path);
    }
    /**
     * Displays a message in the Shopify admin chrome styled as a notice. Use only for successful or neutral messages.
     * `shopifyApp.flashNotice("Unicorn was created successfully.");`
     *
     * @param message The message to show
     * @param forceFallback Force the fallback mode which is used if you are not in the shopify iframe
     * @memberof EASDKWrapperService
     */

  }, {
    key: "flashNotice",
    value: function flashNotice(message) {
      var forceFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.event.trigger("flashNotice", message, forceFallback);
      return this.shopifyApp.flashNotice(message);
    }
    /**
     * Displays a message in the Shopify admin chrome styled as an error. Use only for errors or failures.
     *
     * `shopifyApp.flashError("Unicorn could not be created.");`
     *
     * @param {string} message The message to show
     * @param {boolean} [forceFallback] Force the fallback mode which is used if you are not in the shopify iframe
     * @param {string} [action] Label for the optional action button, only available in fallback mode
     * @param {() => Promise<void>} [onAction] Promise which fires when the action button is clicked
     * @returns {void}
     * @memberof EASDKWrapperService
     */

  }, {
    key: "flashError",
    value: function flashError(message) {
      var forceFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      this.event.trigger("flashError", message, forceFallback);
      return this.shopifyApp.flashError(message);
    }
    /**
     * Dispatches away from the app and into another section in the Shopify admin.
     * The path should be prefixed with a slash, but should not include the /admin part.
     * Example: /customers/120999015 or /settings/domains.
     *
     * @param {string} path The path to redirect the user
     * @returns {void}
     * @memberof EASDKWrapperService
     */

  }, {
    key: "redirect",
    value: function redirect(path) {
      var forceFallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      console.debug("redirect", path);

      if (this.useFallback(forceFallback)) {
        var config = this.config;

        if (!config.shopOrigin || config.shopOrigin.length <= 0) {
          console.error("You need to call the init function first!");
          return;
        }

        var href = config.shopOrigin + "/admin" + path;
        console.debug("redirect in fallbackmode to", href);
        window.location.href = href;
      } else {
        return this.shopifyApp.redirect(path);
      }
    }
  }]);

  return EASDKWrapperService;
}(WrapperService);

defineProperty_default()(EASDKWrapperService, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/services/index.ts





// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/shopify-easdk.module.ts
 // import * as formatters from './formatters;
// import * as binders from './binders';


var shopifyEasdkModule = {
  formatters: {},
  binders: {},
  services: services_namespaceObject,
  components: components_namespaceObject
};

// CONCATENATED MODULE: ../../riba/packages/shopify-easdk/src/index.ts

 // export * from './formatters';
// export * from './binders';

 // export * from './types';


// CONCATENATED MODULE: ../../riba/packages/jquery/src/vendors/jquery.module.ts

window.$ = (jquery_default());
window.jQuery = (jquery_default());

// CONCATENATED MODULE: ../../riba/packages/jquery/src/vendors/index.ts

// CONCATENATED MODULE: ../../riba/packages/jquery/src/binders/on-event.binder.ts


/**
 * Binds an event handler on the element.
 */

var onEventBinder = {
  name: "on-*",
  "function": true,
  priority: 1000,
  bind: function bind(el) {
    if (!this.customData) {
      this.customData = {
        handler: null
      };
    }
  },
  unbind: function unbind(el) {
    if (this.customData.handler) {
      if (this.args === null) {
        throw new Error("args is null");
      }

      var eventName = this.args[0];
      jquery_default()(el).off(eventName, this.customData.handler);
    }
  },
  routine: function routine(el, value) {
    var _this = this;

    if (this.args === null) {
      throw new Error("args is null");
    }

    var eventName = this.args[0];

    if (this.customData.handler) {
      jquery_default()(el).off(eventName, this.customData.handler);
    }

    this.customData.handler = this.eventHandler(value, el);

    try {
      jquery_default()(el).on(eventName, function (event) {
        var extraParameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        event.data = (0,type/* extend */.l7)(false, event.data || {}, extraParameters);
        return _this.customData.handler(event);
      });
    } catch (error) {
      console.warn(error);
      jquery_default()(el).on(eventName, function (event, extraParameters) {
        event.data = (0,type/* extend */.l7)(false, event.data || {}, extraParameters);
        return _this.customData.handler(event);
      });
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/jquery/src/binders/index.ts

// CONCATENATED MODULE: ../../riba/packages/jquery/src/jquery.module.ts
 // import * as formatters from './formatters';
// import * as services from './services';
// import * as components from './components';

var jqueryModule = {
  formatters: {},
  binders: binders_namespaceObject,
  services: {},
  components: {}
};

// CONCATENATED MODULE: ../../riba/packages/jquery/src/index.ts



// EXTERNAL MODULE: ./ts/components/account-connects/account-connects.component.pug
var account_connects_component = __webpack_require__(8463);
var account_connects_component_default = /*#__PURE__*/__webpack_require__.n(account_connects_component);

// CONCATENATED MODULE: ./ts/services/auth.service.ts








var AuthService = /*#__PURE__*/function () {
  function AuthService() {
    classCallCheck_default()(this, AuthService);

    defineProperty_default()(this, "debug", browser_default()('services:AuthService'));

    if (AuthService.instance) {
      return AuthService.instance;
    }

    AuthService.instance = this;
  }

  createClass_default()(AuthService, [{
    key: "connect",
    // protected shopifyApp = new shopifyEasdkModule.services.EASDKWrapperService();
    value: function connect(type, myshopifyDomain) {
      this.debug('connect');
      var connectUrl = "/".concat(type, "/auth?shop=").concat(myshopifyDomain);

      if (EASDKWrapperService.inIframe()) {
        var win = window.open(connectUrl + '&iniframe=true');

        if (win) {
          var timer = setInterval(function () {
            if (win.closed) {
              clearInterval(timer);
              location.reload();
            }
          }, 100);
        }
      } else {
        window.location.href = connectUrl;
      }
    }
  }, {
    key: "shopifyConnectIframe",
    value: function () {
      var _shopifyConnectIframe = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(myshopifyDomain) {
        var _this = this;

        var connectUrl;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                connectUrl = "/shopify/auth/iframe?shop=".concat(myshopifyDomain);
                console.debug('connectUrl', connectUrl);
                return _context.abrupt("return", src.HttpService.getJSON(connectUrl).then(function (result) {
                  _this.debug('shopifyConnectIframe', result.authUrl);

                  return result;
                }));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function shopifyConnectIframe(_x) {
        return _shopifyConnectIframe.apply(this, arguments);
      }

      return shopifyConnectIframe;
    }()
  }, {
    key: "disconnect",
    value: function () {
      var _disconnect = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(type, profile) {
        var _this2 = this;

        var id, disconnectUrl;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('disconnect TODO');
                id = profile.shopifyID;
                disconnectUrl = "/".concat(type, "/auth/disconnect/").concat(id);
                return _context2.abrupt("return", src.HttpService.getJSON(disconnectUrl).then(function (result) {
                  _this2.debug('disconnected', result);

                  return result;
                }));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function disconnect(_x2, _x3) {
        return _disconnect.apply(this, arguments);
      }

      return disconnect;
    }()
    /**
     * Get user account of type
     * @param type
     */

  }, {
    key: "connected",
    value: function () {
      var _connected = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(type) {
        var _this3 = this;

        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", src.HttpService.getJSON("/".concat(type, "/auth/connected/current")).then(function (account) {
                  _this3.debug('isConnected', account);

                  return account;
                }));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function connected(_x4) {
        return _connected.apply(this, arguments);
      }

      return connected;
    }()
    /**
     * Check if the current user is logged in
     */

  }, {
    key: "loggedIn",
    value: function () {
      var _loggedIn = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var _this4 = this;

        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                return _context4.abrupt("return", src.HttpService.getJSON("/shopify/auth/loggedIn").then(function (loggedIn) {
                  _this4.debug('loggedIn', loggedIn);

                  return loggedIn;
                }));

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function loggedIn() {
        return _loggedIn.apply(this, arguments);
      }

      return loggedIn;
    }()
  }, {
    key: "logout",
    value: function logout() {
      this.debug('logout');
      var logoutUrl = "/shopify/auth/logout";
      window.location.href = logoutUrl;
    }
  }]);

  return AuthService;
}();

defineProperty_default()(AuthService, "instance", void 0);
// CONCATENATED MODULE: ./ts/components/account-connects/account-connects.component.ts











function account_connects_component_createSuper(Derived) { var hasNativeReflectConstruct = account_connects_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function account_connects_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }








var AccountConnectsComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(AccountConnectsComponent, _Component);

  var _super = account_connects_component_createSuper(AccountConnectsComponent);

  createClass_default()(AccountConnectsComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ['type'];
    }
  }]);

  function AccountConnectsComponent(element) {
    var _this;

    classCallCheck_default()(this, AccountConnectsComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "$el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + AccountConnectsComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "authService", new AuthService());

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      myshopify_domain: window.shop || undefined,
      account: undefined,
      isConnected: false,
      type: undefined,
      avatarUrl: undefined,
      locales: {
        title: 'components.accountConnects.{type}.title',
        info: 'components.accountConnects.{type}.info',
        notConnected: 'components.accountConnects.{type}.notConnected'
      },
      connect: _this.connect,
      disconnect: _this.disconnect,
      logout: _this.logout,
      inIframe: EASDKWrapperService.inIframe()
    });

    _this.$el = jquery_default()(_this.el);

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(AccountConnectsComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(AccountConnectsComponent.prototype), "connectedCallback", this).call(this);

      this.init(AccountConnectsComponent.observedAttributes);
    }
  }, {
    key: "connect",
    value: function connect() {
      this.debug('connect');

      if (!this.scope.type) {
        throw new Error('Type attribute is required on this component');
      }

      return this.authService.connect(this.scope.type, this.scope.myshopify_domain);
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      var _this2 = this;

      if (!this.scope.type) {
        throw new Error('Type attribute is required on this component');
      }

      if (!this.scope.account) {
        throw new Error("You can't disconnect an account that does not exist");
      }

      this.authService.disconnect(this.scope.type, this.scope.account).then(function (result) {
        if (result.success) {
          _this2.scope.isConnected = false;
          _this2.scope.account = undefined;
          _this2.scope.avatarUrl = undefined;
        }
      });
    }
    /**
     * Logout from app
     */

  }, {
    key: "logout",
    value: function logout() {
      this.debug('logout');
      return this.authService.logout();
    }
  }, {
    key: "getAvatarUrl",
    value: function () {
      var _getAvatarUrl = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(this.scope.type === 'shopify')) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", '/icons/shopify.svg');

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getAvatarUrl() {
        return _getAvatarUrl.apply(this, arguments);
      }

      return getAvatarUrl;
    }()
  }, {
    key: "isConnected",
    value: function () {
      var _isConnected = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this.scope.type) {
                  _context2.next = 2;
                  break;
                }

                throw new Error('Type attribute is required on this component');

              case 2:
                return _context2.abrupt("return", this.authService.connected(this.scope.type));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function isConnected() {
        return _isConnected.apply(this, arguments);
      }

      return isConnected;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {
        var _this3 = this;

        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this.debug('beforeBind');
                this.scope.locales.title = this.scope.locales.title.replace('{type}', this.scope.type);
                this.scope.locales.info = this.scope.locales.info.replace('{type}', this.scope.type);
                this.scope.locales.notConnected = this.scope.locales.notConnected.replace('{type}', this.scope.type);
                return _context5.abrupt("return", this.isConnected().then(function (account) {
                  if (account) {
                    _this3.scope.isConnected = true;
                    _this3.scope.account = account;
                  }

                  _this3.debug('account', account);

                  return account;
                }).then( /*#__PURE__*/asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
                  return regenerator_default().wrap(function _callee3$(_context3) {
                    while (1) {
                      switch (_context3.prev = _context3.next) {
                        case 0:
                          if (!_this3.scope.isConnected) {
                            _context3.next = 2;
                            break;
                          }

                          return _context3.abrupt("return", _this3.getAvatarUrl());

                        case 2:
                          return _context3.abrupt("return", null);

                        case 3:
                        case "end":
                          return _context3.stop();
                      }
                    }
                  }, _callee3);
                }))).then( /*#__PURE__*/function () {
                  var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4(avatar) {
                    return regenerator_default().wrap(function _callee4$(_context4) {
                      while (1) {
                        switch (_context4.prev = _context4.next) {
                          case 0:
                            _this3.scope.avatarUrl = avatar ? avatar : undefined;
                            return _context4.abrupt("return", _this3.scope.avatarUrl);

                          case 2:
                          case "end":
                            return _context4.stop();
                        }
                      }
                    }, _callee4);
                  }));

                  return function (_x) {
                    return _ref2.apply(this, arguments);
                  };
                }())["catch"](function (error) {
                  console.error(error.responseJSON ? error.responseJSON : error);
                  /**
                   * If Access token has expired
                   * @see https://developers.facebook.com/docs/graph-api/using-graph-api/error-handling/
                   */

                  if (_this3.scope.type === 'facebook' && error.responseJSON && error.responseJSON.code === 190) {
                    // TODO this.scope.needReconnect and delete account on server
                    _this3.scope.isConnected = false;
                    _this3.scope.account = undefined;
                  }
                }));

              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6() {
        return regenerator_default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this.debug('afterBind', this.scope);

              case 1:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ['type'];
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(AccountConnectsComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = account_connects_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return AccountConnectsComponent;
}(src.Component);

defineProperty_default()(AccountConnectsComponent, "tagName", 'rv-account-connects');
// EXTERNAL MODULE: ./.yarn/cache/socket.io-client-npm-2.3.1-b2fb6fb9f9-1.zip/node_modules/socket.io-client/lib/index.js
var lib = __webpack_require__(5672);
var lib_default = /*#__PURE__*/__webpack_require__.n(lib);

// EXTERNAL MODULE: ./.yarn/cache/events-npm-3.2.0-342ccffd74-1.zip/node_modules/events/events.js
var events = __webpack_require__(7531);
// CONCATENATED MODULE: ./ts/services/webhooks.service.ts










function webhooks_service_createSuper(Derived) { var hasNativeReflectConstruct = webhooks_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function webhooks_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var WebhooksService = /*#__PURE__*/function (_EventEmitter) {
  inherits_default()(WebhooksService, _EventEmitter);

  var _super = webhooks_service_createSuper(WebhooksService);

  function WebhooksService(host) {
    var _this;

    classCallCheck_default()(this, WebhooksService);

    _this = _super.call(this);

    defineProperty_default()(assertThisInitialized_default()(_this), "socket", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('services:WebhooksService'));

    defineProperty_default()(assertThisInitialized_default()(_this), "host", void 0);

    _this.host = host;

    _this.debug('constructor');

    _this.debug('host: ' + host); // this.on = this.socket.on;
    // this.once = this.socket.once;


    if (WebhooksService.instance) {
      return possibleConstructorReturn_default()(_this, WebhooksService.instance);
    }

    _this.init();

    WebhooksService.instance = assertThisInitialized_default()(_this);
    return _this;
  }

  createClass_default()(WebhooksService, [{
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _this2 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.debug('init');
                this.socket = lib_default()("/socket.io/shopify/api/webhooks", {
                  secure: true,
                  transports: ['polling']
                });
                this.socket.on('connect', function () {
                  _this2.debug('connect');

                  _this2.emit('connect');
                });
                this.socket.on('exception', function (data) {
                  console.error('exception', data);

                  _this2.emit('exception', data);
                });
                this.socket.on('disconnect', function () {
                  _this2.debug('disconnect');

                  _this2.emit('disconnect');
                });
                this.socket.on('carts/create', function (data) {
                  _this2.debug('carts/create', data);

                  _this2.emit('webhook:carts/create', data);
                });
                this.socket.on('carts/update', function (data) {
                  _this2.debug('carts/update', data);

                  _this2.emit('webhook:carts/update', data);
                });
                this.socket.on('checkouts/create', function (data) {
                  _this2.debug('checkouts/create', data);

                  _this2.emit('webhook:checkouts/create', data);
                });
                this.socket.on('checkouts/update', function (data) {
                  _this2.debug('checkouts/update', data);

                  _this2.emit('webhook:checkouts/update', data);
                });
                this.socket.on('checkouts/delete', function (data) {
                  _this2.debug('checkouts/delete', data);

                  _this2.emit('webhook:checkouts/delete', data);
                });
                this.socket.on('collections/create', function (data) {
                  _this2.debug('collections/create', data);

                  _this2.emit('webhook:collections/create', data);
                });
                this.socket.on('collections/update', function (data) {
                  _this2.debug('collections/update', data);

                  _this2.emit('webhook:collections/update', data);
                });
                this.socket.on('collections/delete', function (data) {
                  _this2.debug('collections/delete', data);

                  _this2.emit('webhook:collections/delete', data);
                });
                this.socket.on('collection_listings/add', function (data) {
                  _this2.debug('collection_listings/add', data);

                  _this2.emit('webhook:collection_listings/add', data);
                });
                this.socket.on('collection_listings/remove', function (data) {
                  _this2.debug('collection_listings/remove', data);

                  _this2.emit('webhook:collection_listings/remove', data);
                });
                this.socket.on('collection_listings/update', function (data) {
                  _this2.debug('collection_listings/update', data);

                  _this2.emit('webhook:collection_listings/update', data);
                });
                this.socket.on('customers/create', function (data) {
                  _this2.debug('customers/create', data);

                  _this2.emit('webhook:customers/create', data);
                });
                this.socket.on('customers/disable', function (data) {
                  _this2.debug('customers/disable', data);

                  _this2.emit('webhook:customers/disable', data);
                });
                this.socket.on('customers/enable', function (data) {
                  _this2.debug('customers/enable', data);

                  _this2.emit('webhook:customers/enable', data);
                });
                this.socket.on('customers/update', function (data) {
                  _this2.debug('customers/update', data);

                  _this2.emit('webhook:customers/update', data);
                });
                this.socket.on('customers/delete', function (data) {
                  _this2.debug('customers/delete', data);

                  _this2.emit('webhook:customers/delete', data);
                });
                this.socket.on('customer_groups/create', function (data) {
                  _this2.debug('customer_groups/create', data);

                  _this2.emit('webhook:customer_groups/create', data);
                });
                this.socket.on('customer_groups/update', function (data) {
                  _this2.debug('customer_groups/update', data);

                  _this2.emit('webhook:customer_groups/update', data);
                });
                this.socket.on('customer_groups/delete', function (data) {
                  _this2.debug('customer_groups/delete', data);

                  _this2.emit('webhook:customer_groups/delete', data);
                });
                this.socket.on('draft_orders/create', function (data) {
                  _this2.debug('draft_orders/create', data);

                  _this2.emit('webhook:draft_orders/create', data);
                });
                this.socket.on('draft_orders/update', function (data) {
                  _this2.debug('draft_orders/update', data);

                  _this2.emit('webhook:draft_orders/update', data);
                });
                this.socket.on('fulfillments/create', function (data) {
                  _this2.debug('fulfillments/create', data);

                  _this2.emit('webhook:fulfillments/create', data);
                });
                this.socket.on('fulfillments/update', function (data) {
                  _this2.debug('fulfillments/update', data);

                  _this2.emit('webhook:fulfillments/update', data);
                });
                this.socket.on('fulfillment_events/create', function (data) {
                  _this2.debug('fulfillment_events/create', data);

                  _this2.emit('webhook:fulfillment_events/create', data);
                });
                this.socket.on('fulfillment_events/delete', function (data) {
                  _this2.debug('fulfillment_events/delete', data);

                  _this2.emit('webhook:fulfillment_events/delete', data);
                });
                this.socket.on('inventory_items/create', function (data) {
                  _this2.debug('inventory_items/create', data);

                  _this2.emit('webhook:inventory_items/create', data);
                });
                this.socket.on('inventory_items/update', function (data) {
                  _this2.debug('inventory_items/update', data);

                  _this2.emit('webhook:inventory_items/update', data);
                });
                this.socket.on('inventory_items/delete', function (data) {
                  _this2.debug('inventory_items/delete', data);

                  _this2.emit('webhook:inventory_items/delete', data);
                });
                this.socket.on('inventory_levels/connect', function (data) {
                  _this2.debug('inventory_levels/connect', data);

                  _this2.emit('webhook:inventory_levels/connect', data);
                });
                this.socket.on('inventory_levels/update', function (data) {
                  _this2.debug('inventory_levels/update', data);

                  _this2.emit('webhook:inventory_levels/update', data);
                });
                this.socket.on('inventory_levels/disconnect', function (data) {
                  _this2.debug('inventory_levels/disconnect', data);

                  _this2.emit('webhook:inventory_levels/disconnect', data);
                });
                this.socket.on('locations/create', function (data) {
                  _this2.debug('locations/create', data);

                  _this2.emit('webhook:locations/create', data);
                });
                this.socket.on('locations/update', function (data) {
                  _this2.debug('locations/update', data);

                  _this2.emit('webhook:locations/update', data);
                });
                this.socket.on('locations/delete', function (data) {
                  _this2.debug('locations/delete', data);

                  _this2.emit('webhook:locations/delete', data);
                });
                this.socket.on('orders/cancelled', function (data) {
                  _this2.debug('orders/cancelled', data);

                  _this2.emit('webhook:orders/cancelled', data);
                });
                this.socket.on('orders/create', function (data) {
                  _this2.debug('orders/create', data);

                  _this2.emit('webhook:orders/create', data);
                });
                this.socket.on('orders/fulfilled', function (data) {
                  _this2.debug('orders/fulfilled', data);

                  _this2.emit('webhook:orders/fulfilled', data);
                });
                this.socket.on('orders/paid', function (data) {
                  _this2.debug('orders/paid', data);

                  _this2.emit('webhook:orders/paid', data);
                });
                this.socket.on('orders/partially_fulfilled', function (data) {
                  _this2.debug('orders/partially_fulfilled', data);

                  _this2.emit('webhook:orders/partially_fulfilled', data);
                });
                this.socket.on('orders/updated', function (data) {
                  _this2.debug('orders/updated', data);

                  _this2.emit('webhook:orders/updated', data);
                });
                this.socket.on('orders/delete', function (data) {
                  _this2.debug('orders/delete', data);

                  _this2.emit('webhook:orders/delete', data);
                });
                this.socket.on('order_transactions/create', function (data) {
                  _this2.debug('order_transactions/create', data);

                  _this2.emit('webhook:order_transactions/create', data);
                });
                this.socket.on('products/create', function (data) {
                  _this2.debug('products/create', data);

                  _this2.emit('webhook:products/create', data);
                });
                this.socket.on('products/update', function (data) {
                  _this2.debug('products/update', data);

                  _this2.emit('webhook:products/update', data);
                });
                this.socket.on('products/delete', function (data) {
                  _this2.debug('products/delete', data);

                  _this2.emit('webhook:products/delete', data);
                });
                this.socket.on('product_listings/add', function (data) {
                  _this2.debug('product_listings/add', data);

                  _this2.emit('webhook:product_listings/add', data);
                });
                this.socket.on('product_listings/remove', function (data) {
                  _this2.debug('product_listings/remove', data);

                  _this2.emit('webhook:product_listings/remove', data);
                });
                this.socket.on('product_listings/update', function (data) {
                  _this2.debug('product_listings/update', data);

                  _this2.emit('webhook:product_listings/update', data);
                });
                this.socket.on('refunds/create', function (data) {
                  _this2.debug('refunds/create', data);

                  _this2.emit('webhook:refunds/create', data);
                });
                this.socket.on('app/uninstalled', function (data) {
                  _this2.debug('app/uninstalled', data);

                  _this2.emit('webhook:app/uninstalled', data);
                });
                this.socket.on('shop/update', function (data) {
                  _this2.debug('shop/update', data);

                  _this2.emit('webhook:shop/update', data);
                });
                this.socket.on('themes/create', function (data) {
                  _this2.debug('themes/create', data);

                  _this2.emit('webhook:themes/create', data);
                });
                this.socket.on('themes/publish', function (data) {
                  _this2.debug('themes/publish', data);

                  _this2.emit('webhook:themes/publish', data);
                });
                this.socket.on('themes/update', function (data) {
                  _this2.debug('themes/update', data);

                  _this2.emit('webhook:themes/update', data);
                });
                this.socket.on('themes/delete', function (data) {
                  _this2.debug('themes/delete', data);

                  _this2.emit('webhook:themes/delete', data);
                });

              case 60:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init() {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }]);

  return WebhooksService;
}(events.EventEmitter);

defineProperty_default()(WebhooksService, "instance", void 0);
// EXTERNAL MODULE: ./ts/components/webhook-explorer/webhook-explorer.component.pug
var webhook_explorer_component = __webpack_require__(1239);
var webhook_explorer_component_default = /*#__PURE__*/__webpack_require__.n(webhook_explorer_component);

// CONCATENATED MODULE: ./ts/components/webhook-explorer/webhook-explorer.component.ts











function webhook_explorer_component_createSuper(Derived) { var hasNativeReflectConstruct = webhook_explorer_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function webhook_explorer_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var WebhookExplorerComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(WebhookExplorerComponent, _Component);

  var _super = webhook_explorer_component_createSuper(WebhookExplorerComponent);

  createClass_default()(WebhookExplorerComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ['environment'];
    }
  }]);

  function WebhookExplorerComponent(element) {
    var _this;

    classCallCheck_default()(this, WebhookExplorerComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "webhooksService", new WebhooksService(window.host));

    defineProperty_default()(assertThisInitialized_default()(_this), "localesService", i18n_src.LocalesStaticService.getInstance('main'));

    defineProperty_default()(assertThisInitialized_default()(_this), "cardContainer", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      langcode: 'en',
      environment: 'production'
    });

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(WebhookExplorerComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(WebhookExplorerComponent.prototype), "connectedCallback", this).call(this);

      this.init(WebhookExplorerComponent.observedAttributes);
    }
  }, {
    key: "initLocales",
    value: function initLocales() {
      var _this2 = this;

      // set avaible langcodes
      this.scope.langcode = this.localesService.getLangcode();
      this.localesService.event.on('changed', function (changedLangcode)
      /*, initial: boolean*/
      {
        // Activate localcode and disable the other
        _this2.scope.langcode = changedLangcode;
      });
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.scope.environment === 'production') {
                  this.initLocales();
                }

                this.debug('beforeBind');

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('afterBind', this.scope);

                if (this.scope.environment === 'production') {
                  this.cardContainer = this.el.querySelector('.card-container') || undefined;
                  this.watchSocketEvents();
                }

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "prependNewSocketCard",
    value: function prependNewSocketCard(eventName, data, role) {
      this.debug('prependNewSocketCard', eventName, data);

      for (var key in data) {
        if (typeof data[key] === 'string') {
          data[key] = data[key].replace(/&quot;/g, '"');
        }
      }

      var newCard = document.createElement('rv-webhook-card');
      newCard.classList.add('col-auto');
      newCard.setAttribute('event', eventName);
      newCard.setAttribute('data', JSON.stringify(data).replace(/'/g, "&#39;"));
      newCard.setAttribute('role', role || '');
      this.debug('newCard', newCard);

      if (this.cardContainer) {
        this.cardContainer.prepend(newCard);
        this.debug('cardContainer', this.cardContainer);
        this.build();
      }
    }
  }, {
    key: "watchSocketEvents",
    value: function watchSocketEvents() {
      var _this3 = this;

      this.webhooksService.on("webhook:carts/create", function (data) {
        _this3.prependNewSocketCard('webhook:carts/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:carts/update", function (data) {
        _this3.prependNewSocketCard('carts/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:checkouts/create", function (data) {
        _this3.prependNewSocketCard('checkouts/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:checkouts/update", function (data) {
        _this3.prependNewSocketCard('checkouts/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:checkouts/delete", function (data) {
        _this3.prependNewSocketCard('checkouts/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collections/create", function (data) {
        _this3.prependNewSocketCard('collections/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collections/update", function (data) {
        _this3.prependNewSocketCard('collections/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collections/delete", function (data) {
        _this3.prependNewSocketCard('collections/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collection_listings/add", function (data) {
        _this3.prependNewSocketCard('collection_listings/add', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collection_listings/remove", function (data) {
        _this3.prependNewSocketCard('collection_listings/remove', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:collection_listings/update", function (data) {
        _this3.prependNewSocketCard('collection_listings/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customers/create", function (data) {
        _this3.prependNewSocketCard('customers/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customers/disable", function (data) {
        _this3.prependNewSocketCard('customers/disable', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customers/enable", function (data) {
        _this3.prependNewSocketCard('customers/enable', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customers/update", function (data) {
        _this3.prependNewSocketCard('customers/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customers/delete", function (data) {
        _this3.prependNewSocketCard('customers/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customer_groups/create", function (data) {
        _this3.prependNewSocketCard('customer_groups/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customer_groups/update", function (data) {
        _this3.prependNewSocketCard('customer_groups/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:customer_groups/delete", function (data) {
        _this3.prependNewSocketCard('customer_groups/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:draft_orders/create", function (data) {
        _this3.prependNewSocketCard('draft_orders/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:draft_orders/update", function (data) {
        _this3.prependNewSocketCard('draft_orders/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:fulfillments/create", function (data) {
        _this3.prependNewSocketCard('fulfillments/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:fulfillments/update", function (data) {
        _this3.prependNewSocketCard('fulfillments/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:fulfillment_events/create", function (data) {
        _this3.prependNewSocketCard('fulfillment_events/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:fulfillment_events/delete", function (data) {
        _this3.prependNewSocketCard('fulfillment_events/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_items/create", function (data) {
        _this3.prependNewSocketCard('inventory_items/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_items/update", function (data) {
        _this3.prependNewSocketCard('inventory_items/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_items/delete", function (data) {
        _this3.prependNewSocketCard('inventory_items/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_levels/connect", function (data) {
        _this3.prependNewSocketCard('inventory_levels/connect', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_levels/update", function (data) {
        _this3.prependNewSocketCard('inventory_levels/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:inventory_levels/disconnect", function (data) {
        _this3.prependNewSocketCard('inventory_levels/disconnect', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:locations/create", function (data) {
        _this3.prependNewSocketCard('locations/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:locations/update", function (data) {
        _this3.prependNewSocketCard('locations/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:locations/delete", function (data) {
        _this3.prependNewSocketCard('locations/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/cancelled", function (data) {
        _this3.prependNewSocketCard('orders/cancelled', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/create", function (data) {
        _this3.prependNewSocketCard('orders/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/fulfilled", function (data) {
        _this3.prependNewSocketCard('orders/fulfilled', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/paid", function (data) {
        _this3.prependNewSocketCard('orders/paid', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/partially_fulfilled", function (data) {
        _this3.prependNewSocketCard('orders/partially_fulfilled', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/updated", function (data) {
        _this3.prependNewSocketCard('orders/updated', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:orders/delete", function (data) {
        _this3.prependNewSocketCard('orders/delete', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:order_transactions/create", function (data) {
        _this3.prependNewSocketCard('order_transactions/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on('products/create', function (product) {
        _this3.debug('products/create', product);

        var role; // Unpublised products can only be recived in the app backend

        if (product.published_at === null) {
          role = 'shopify-staff-member';
        }

        _this3.prependNewSocketCard('products/create', product, role);
      });
      this.webhooksService.on('products/update', function (product) {
        _this3.debug('products/update', product);

        var role; // Unpublised products can only be recived in the app backend

        if (product.published_at === null) {
          role = 'shopify-staff-member';
        }

        _this3.prependNewSocketCard('products/update', product, role);
      });
      this.webhooksService.on('products/delete', function (data) {
        _this3.debug('products/delete', data);

        _this3.prependNewSocketCard('products/delete', data);
      });
      this.webhooksService.on("webhook:product_listings/add", function (data) {
        _this3.prependNewSocketCard('product_listings/add', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:product_listings/remove", function (data) {
        _this3.prependNewSocketCard('product_listings/remove', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:product_listings/update", function (data) {
        _this3.prependNewSocketCard('product_listings/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:refunds/create", function (data) {
        _this3.prependNewSocketCard('refunds/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:app/uninstalled", function (data) {
        _this3.prependNewSocketCard('app/uninstalled', data);
      });
      this.webhooksService.on("webhook:shop/update", function (data) {
        _this3.prependNewSocketCard('shop/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:themes/create", function (data) {
        _this3.prependNewSocketCard('themes/create', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:themes/publish", function (data) {
        _this3.prependNewSocketCard('themes/publish', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:themes/update", function (data) {
        _this3.prependNewSocketCard('themes/update', data, 'shopify-staff-member');
      });
      this.webhooksService.on("webhook:themes/delete", function (data) {
        _this3.prependNewSocketCard('themes/delete', data, 'shopify-staff-member');
      });
    }
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(WebhookExplorerComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(WebhookExplorerComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if (this.el.hasChildNodes()) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = webhook_explorer_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return WebhookExplorerComponent;
}(src.Component);

defineProperty_default()(WebhookExplorerComponent, "tagName", 'webhook-explorer');
// EXTERNAL MODULE: ./ts/components/webhook-explorer/webhook-card/webhook-card.component.pug
var webhook_card_component = __webpack_require__(2406);
var webhook_card_component_default = /*#__PURE__*/__webpack_require__.n(webhook_card_component);

// CONCATENATED MODULE: ./ts/components/webhook-explorer/webhook-card/webhook-card.component.ts











function webhook_card_component_createSuper(Derived) { var hasNativeReflectConstruct = webhook_card_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function webhook_card_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var SocketEventCardComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(SocketEventCardComponent, _Component);

  var _super = webhook_card_component_createSuper(SocketEventCardComponent);

  createClass_default()(SocketEventCardComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ['event', 'data', 'role'];
    }
  }]);

  function SocketEventCardComponent(element) {
    var _this;

    classCallCheck_default()(this, SocketEventCardComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + SocketEventCardComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      close: _this.close,
      event: undefined,
      data: undefined,
      role: undefined
    });

    return _this;
  }

  createClass_default()(SocketEventCardComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(SocketEventCardComponent.prototype), "connectedCallback", this).call(this);

      this.init(SocketEventCardComponent.observedAttributes);
    }
  }, {
    key: "close",
    value: function close() {
      this.debug('close');
      this.remove();
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.debug('beforeBind');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('afterBind', this.scope);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ['event'];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(SocketEventCardComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(SocketEventCardComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if (this.el.hasChildNodes()) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = webhook_card_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return SocketEventCardComponent;
}(src.Component);

defineProperty_default()(SocketEventCardComponent, "tagName", 'rv-webhook-card');
// EXTERNAL MODULE: ./ts/components/plans/plans.component.pug
var plans_component = __webpack_require__(5922);
var plans_component_default = /*#__PURE__*/__webpack_require__.n(plans_component);

// CONCATENATED MODULE: ./ts/components/plans/plans.component.ts











function plans_component_createSuper(Derived) { var hasNativeReflectConstruct = plans_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function plans_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var PlansComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(PlansComponent, _Component);

  var _super = plans_component_createSuper(PlansComponent);

  createClass_default()(PlansComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function PlansComponent(element) {
    var _this;

    classCallCheck_default()(this, PlansComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + PlansComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      plans: [],
      active: undefined,
      hasActive: false,
      activate: _this.activate
    });

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(PlansComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      var _this2 = this;

      get_default()(getPrototypeOf_default()(PlansComponent.prototype), "connectedCallback", this).call(this);

      this.loadAvailableCharges().then(function () {
        return _this2.loadActiveCharge();
      }).then(function () {
        return _this2.init(PlansComponent.observedAttributes);
      })["catch"](function (error) {
        _this2.debug('error', error);
      });
    }
    /**
     * Create and acivate the charge
     * @param plan
     */

  }, {
    key: "activate",
    value: function activate(plan) {
      this.debug('activate');
      var activateUrl = "/shopify/charge/create/".concat(plan.name);
      window.location.href = activateUrl;
    }
  }, {
    key: "loadActiveCharge",
    value: function () {
      var _loadActiveCharge = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _this3 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", src.HttpService.getJSON("/shopify/charge/active").then(function (activeCharge) {
                  _this3.debug('activeCharge', activeCharge);

                  _this3.scope.active = activeCharge ? activeCharge : undefined;

                  if (_this3.scope.active) {
                    _this3.scope.hasActive = true;
                  }

                  return _this3.scope.active;
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function loadActiveCharge() {
        return _loadActiveCharge.apply(this, arguments);
      }

      return loadActiveCharge;
    }()
  }, {
    key: "loadAvailableCharges",
    value: function () {
      var _loadAvailableCharges = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var _this4 = this;

        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", src.HttpService.getJSON("/shopify/charge/available").then(function (availableCharges) {
                  _this4.debug('available charges', availableCharges);

                  _this4.scope.plans = availableCharges;
                  return _this4.scope.plans;
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function loadAvailableCharges() {
        return _loadAvailableCharges.apply(this, arguments);
      }

      return loadAvailableCharges;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this.debug('beforeBind');

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.debug('afterBind', this.scope);

              case 1:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(PlansComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if (this.el.hasChildNodes()) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = plans_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return PlansComponent;
}(src.Component);

defineProperty_default()(PlansComponent, "tagName", 'rv-plans');
// EXTERNAL MODULE: ./ts/components/sidebar/sidebar.component.pug
var sidebar_component = __webpack_require__(5703);
var sidebar_component_default = /*#__PURE__*/__webpack_require__.n(sidebar_component);

// CONCATENATED MODULE: ./ts/components/sidebar/sidebar.component.ts











function sidebar_component_createSuper(Derived) { var hasNativeReflectConstruct = sidebar_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function sidebar_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }








var SidebarComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(SidebarComponent, _Component);

  var _super = sidebar_component_createSuper(SidebarComponent);

  createClass_default()(SidebarComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ['environment'];
    }
  }]);

  function SidebarComponent(element) {
    var _this;

    classCallCheck_default()(this, SidebarComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "event", new src.EventDispatcher('sidebar'));

    defineProperty_default()(assertThisInitialized_default()(_this), "router", new src.EventDispatcher('main'));

    defineProperty_default()(assertThisInitialized_default()(_this), "shopifyApp", new EASDKWrapperService());

    defineProperty_default()(assertThisInitialized_default()(_this), "localesService", i18n_src.LocalesStaticService.getInstance('main'));

    defineProperty_default()(assertThisInitialized_default()(_this), "$el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + SidebarComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      environment: 'production',
      visable: false,
      reload: _this.reload
    });

    _this.$el = jquery_default()(_this.el);

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(SidebarComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarComponent.prototype), "connectedCallback", this).call(this);

      this.init(SidebarComponent.observedAttributes);
      this.event.on('hide', this.hide.bind(this, false));
      this.event.on('show', this.show.bind(this, false));
      this.event.on('toggle', this.toggle.bind(this, false));
      this.event.on('state', this.state.bind(this));
      window.addEventListener('resize', this.onResize.bind(this, false), false);
      this.router.on('newPageReady', this.onRoute.bind(this));
      this.onResize(true);
      this.localesService.event.on('changed', this.onResize.bind(this, false));
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.scope.visable || force) {
        this.scope.visable = false;
        this.el.style.display = 'none';
        setTimeout(function () {
          _this2.event.trigger('afterHide', {
            width: _this2.el.clientWidth,
            height: _this2.el.clientHeight,
            visable: _this2.scope.visable
          });
        }, 0);
      }
    }
  }, {
    key: "show",
    value: function show() {
      var _this3 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (!this.scope.visable || force) {
        this.scope.visable = true;
        this.el.style.display = 'flex';
        setTimeout(function () {
          if (_this3.el.clientWidth > 0) {
            _this3.event.trigger('afterShow', {
              width: _this3.el.clientWidth,
              height: _this3.el.clientHeight,
              visable: _this3.scope.visable
            });
          }
        }, 0);
      }
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.scope.visable) {
        return this.hide();
      }

      return this.show();
    }
  }, {
    key: "state",
    value: function state() {
      if (this.scope.visable && this.el.clientWidth > 0 || !this.scope.visable) {
        // WORKAROUND
        this.event.trigger('onState', {
          width: this.el.clientWidth,
          height: this.el.clientHeight,
          visable: this.scope.visable
        });
      }
    }
    /**
     * For debugging
     */

  }, {
    key: "reload",
    value: function reload() {
      this.shopifyApp.Bar.loadingOn();
      location.reload();
    }
  }, {
    key: "onResize",
    value: function onResize() {
      var _this4 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var vp = (0,dom/* getViewportDimensions */.cc)();
      this.debug('onResize', vp.w);

      if (vp.w < 1200) {
        this.hide(force);
      } else {
        this.show(force); // on force the hide or show event is fired and we do not fire the state event byself

        if (!force) {
          setTimeout(function () {
            _this4.state();
          }, 0);
        }
      }
    }
  }, {
    key: "onRoute",
    value: function onRoute() {
      var _this5 = this;

      setTimeout(function () {
        var vp = (0,dom/* getViewportDimensions */.cc)();

        _this5.debug('onResize', vp.w);

        if (vp.w < 1200) {
          _this5.hide();
        } else {
          _this5.state();
        }
      }, 0);
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.debug('beforeBind');

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('afterBind', this.scope);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarComponent.prototype), "disconnectedCallback", this).call(this);

      window.removeEventListener('resize', this.onResize.bind(this, false));
      this.localesService.event.off('changed', this.onResize.bind(this, false));
      this.router.off('newPageReady', this.onRoute.bind(this));
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if (this.el.hasChildNodes()) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = sidebar_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return SidebarComponent;
}(src.Component);

defineProperty_default()(SidebarComponent, "tagName", 'rv-sidebar');
// CONCATENATED MODULE: ./ts/components/sidebar-mask/sidebar-mask.component.ts











function sidebar_mask_component_createSuper(Derived) { var hasNativeReflectConstruct = sidebar_mask_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function sidebar_mask_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var SidebarMaskComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(SidebarMaskComponent, _Component);

  var _super = sidebar_mask_component_createSuper(SidebarMaskComponent);

  createClass_default()(SidebarMaskComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function SidebarMaskComponent(element) {
    var _this;

    classCallCheck_default()(this, SidebarMaskComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "event", new src.EventDispatcher('sidebar'));

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + SidebarMaskComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      show: false
    });

    _this.debug('constructor', _this.el.constructor, assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(SidebarMaskComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarMaskComponent.prototype), "connectedCallback", this).call(this);

      this.init(SidebarMaskComponent.observedAttributes);
      this.event.on('afterShow', this.onState.bind(this));
      this.event.on('afterHide', this.onState.bind(this));
      this.event.on('onState', this.onState.bind(this));
    }
  }, {
    key: "onState",
    value: function onState(state) {
      this.debug('onState', state);
      var vp = (0,dom/* getViewportDimensions */.cc)();
      this.debug('onResize', vp.w);

      if (vp.w < 1200) {
        this.scope.show = state.visable;
      } else {
        this.scope.show = false;
      }

      if (this.scope.show) {
        this.el.style.display = 'block';
      } else {
        this.el.style.display = 'none';
      }
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.debug('beforeBind', this.bound));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.debug('afterBind', this.bound, this.scope));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(SidebarMaskComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarMaskComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return SidebarMaskComponent;
}(src.Component);

defineProperty_default()(SidebarMaskComponent, "tagName", 'rv-sidebar-mask');
// EXTERNAL MODULE: ./ts/components/sidebar-toggler/sidebar-toggler.component.pug
var sidebar_toggler_component = __webpack_require__(2989);
var sidebar_toggler_component_default = /*#__PURE__*/__webpack_require__.n(sidebar_toggler_component);

// CONCATENATED MODULE: ./ts/components/sidebar-toggler/sidebar-toggler.component.ts











function sidebar_toggler_component_createSuper(Derived) { var hasNativeReflectConstruct = sidebar_toggler_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function sidebar_toggler_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var SidebarTogglerComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(SidebarTogglerComponent, _Component);

  var _super = sidebar_toggler_component_createSuper(SidebarTogglerComponent);

  createClass_default()(SidebarTogglerComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function SidebarTogglerComponent(element) {
    var _this;

    classCallCheck_default()(this, SidebarTogglerComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "event", new src.EventDispatcher('sidebar'));

    defineProperty_default()(assertThisInitialized_default()(_this), "$el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + SidebarTogglerComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      sidebarVisable: false,
      hide: _this.hide,
      show: _this.show,
      toggle: _this.toggle
    });

    _this.$el = jquery_default()(_this.el);

    _this.debug('constructor', _this.el.constructor, assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(SidebarTogglerComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarTogglerComponent.prototype), "connectedCallback", this).call(this);

      this.init(SidebarTogglerComponent.observedAttributes);
      this.event.on('afterShow', this.afterShow.bind(this));
      this.event.on('afterHide', this.afterHide.bind(this));
      this.event.on('onState', this.onState.bind(this));
      this.demandState();
    }
  }, {
    key: "hide",
    value: function hide() {
      this.event.trigger('hide');
    }
  }, {
    key: "show",
    value: function show() {
      this.event.trigger('show');
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.event.trigger('toggle');
    }
  }, {
    key: "demandState",
    value: function demandState() {
      this.event.trigger('state');
    }
  }, {
    key: "afterHide",
    value: function afterHide(state) {
      this.debug('afterHide', state);
      this.scope.sidebarVisable = state.visable;
      this.el.style.right = state.width.toString();
    }
  }, {
    key: "afterShow",
    value: function afterShow(state) {
      this.debug('afterShow', state);
      this.scope.sidebarVisable = state.visable;
      this.el.style.right = state.width.toString();
    }
  }, {
    key: "onState",
    value: function onState(state) {
      this.debug('onState', state);
      this.scope.sidebarVisable = state.visable;
      this.el.style.right = state.width.toString();
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.debug('beforeBind', this.bound));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.debug('afterBind', this.bound, this.scope));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(SidebarTogglerComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(SidebarTogglerComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if (this.el.hasChildNodes()) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = sidebar_toggler_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return SidebarTogglerComponent;
}(src.Component);

defineProperty_default()(SidebarTogglerComponent, "tagName", 'rv-sidebar-toggler');
// CONCATENATED MODULE: ./ts/components/switcher/switcher.component.ts











function switcher_component_createSuper(Derived) { var hasNativeReflectConstruct = switcher_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function switcher_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var TdaI18nSwitcherComponent = /*#__PURE__*/function (_AI18nSwitcherCompone) {
  inherits_default()(TdaI18nSwitcherComponent, _AI18nSwitcherCompone);

  var _super = switcher_component_createSuper(TdaI18nSwitcherComponent);

  createClass_default()(TdaI18nSwitcherComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    } // protected $el: JQuery<HTMLElement>;

  }]);

  function TdaI18nSwitcherComponent(element) {
    var _this;

    classCallCheck_default()(this, TdaI18nSwitcherComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "localesService", i18n_src.LocalesStaticService.getInstance('main'));

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + TdaI18nSwitcherComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      langcodes: [],
      "switch": _this["switch"],
      toggle: _this.toggle,
      ready: false
    });

    return _this;
  }

  createClass_default()(TdaI18nSwitcherComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(TdaI18nSwitcherComponent.prototype), "connectedCallback", this).call(this);

      this.init(TdaI18nSwitcherComponent.observedAttributes);
    }
    /**
     * Switch to language by langcode
     * @param langcode
     * @param event
     */

  }, {
    key: "switch",
    value: function _switch(langcode, event) {
      return get_default()(getPrototypeOf_default()(TdaI18nSwitcherComponent.prototype), "switch", this).call(this, langcode, event);
    }
    /**
     * Toggle language, makes only sense if you have only two languages
     * @param langcode
     * @param event
     */

  }, {
    key: "toggle",
    value: function toggle(event) {
      return get_default()(getPrototypeOf_default()(TdaI18nSwitcherComponent.prototype), "toggle", this).call(this, event);
    }
  }, {
    key: "setLangcode",
    value: function setLangcode(langcode) {
      this.debug('setLangcode', langcode);
      return get_default()(getPrototypeOf_default()(TdaI18nSwitcherComponent.prototype), "setLangcode", this).call(this, langcode);
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.debug('beforeBind', this.scope);

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('afterBind', this.scope);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(TdaI18nSwitcherComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return TdaI18nSwitcherComponent;
}(i18n_src/* AI18nSwitcherComponent */.V);

defineProperty_default()(TdaI18nSwitcherComponent, "tagName", 'rv-i18n-switcher');
// EXTERNAL MODULE: ./ts/components/parcel-lab-settings/parcel-lab-settings.component.pug
var parcel_lab_settings_component = __webpack_require__(6315);
var parcel_lab_settings_component_default = /*#__PURE__*/__webpack_require__.n(parcel_lab_settings_component);

// CONCATENATED MODULE: ./ts/services/parcel-lab.service.ts







var ParcelLabService = /*#__PURE__*/function () {
  function ParcelLabService() {
    classCallCheck_default()(this, ParcelLabService);

    defineProperty_default()(this, "debug", browser_default()('services:ParcelLabService'));
  }

  createClass_default()(ParcelLabService, [{
    key: "getSettings",
    value: function () {
      var _getSettings = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var settings;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return src.HttpService.getJSON("/parcel-lab/settings");

              case 2:
                settings = _context.sent;
                this.debug('settings', settings);
                return _context.abrupt("return", settings);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getSettings() {
        return _getSettings.apply(this, arguments);
      }

      return getSettings;
    }()
  }, {
    key: "setSettings",
    value: function () {
      var _setSettings = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(settings) {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", src.HttpService.post("/parcel-lab/settings", {
                  settings: settings
                }, 'json'));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function setSettings(_x) {
        return _setSettings.apply(this, arguments);
      }

      return setSettings;
    }()
  }, {
    key: "listTrackings",
    value: function () {
      var _listTrackings = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(search, page, size) {
        var query, queryStr, url, list;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                query = {};
                if (search) query.search = search;
                if (page) query.page = page;
                if (size) query.size = size;
                queryStr = new URLSearchParams(query).toString();
                url = '/parcel-lab/tracking/list' + (queryStr && queryStr.length > 0 ? '?' + queryStr : '');
                _context3.next = 8;
                return src.HttpService.getJSON(url);

              case 8:
                list = _context3.sent;
                this.debug('list', list);
                return _context3.abrupt("return", list);

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function listTrackings(_x2, _x3, _x4) {
        return _listTrackings.apply(this, arguments);
      }

      return listTrackings;
    }()
  }]);

  return ParcelLabService;
}();
// CONCATENATED MODULE: ./ts/components/parcel-lab-settings/parcel-lab-settings.component.ts











function parcel_lab_settings_component_createSuper(Derived) { var hasNativeReflectConstruct = parcel_lab_settings_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function parcel_lab_settings_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }








var ParcelLabSettingsComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(ParcelLabSettingsComponent, _Component);

  var _super = parcel_lab_settings_component_createSuper(ParcelLabSettingsComponent);

  createClass_default()(ParcelLabSettingsComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function ParcelLabSettingsComponent(element) {
    var _this;

    classCallCheck_default()(this, ParcelLabSettingsComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "parcelLab", new ParcelLabService());

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + ParcelLabSettingsComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "easdk", new EASDKWrapperService());

    defineProperty_default()(assertThisInitialized_default()(_this), "localesService", i18n_src.LocalesStaticService.getInstance('main'));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      locales: {
        error: ''
      },
      settings: {
        user: 0,
        token: '',
        prefer_checkout_shipping_method: false
      },
      showPasswort: false,
      passwortInputType: 'password',
      // Methods
      save: _this.save,
      togglePassword: _this.togglePassword
    });

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(ParcelLabSettingsComponent, [{
    key: "get",
    value: function () {
      var _get2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var settings;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return this.parcelLab.getSettings();

              case 3:
                settings = _context.sent;
                this.debug('get settings', settings);
                return _context.abrupt("return", settings);

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](0);
                console.error(_context.t0);
                return _context.abrupt("return", null);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 8]]);
      }));

      function get() {
        return _get2.apply(this, arguments);
      }

      return get;
    }()
  }, {
    key: "save",
    value: function () {
      var _save = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var result, successfullySavedMessage, notSuccessfullySavedMessage;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.debug('save settings', this.scope.settings);

                if (this.scope.settings) {
                  _context2.next = 4;
                  break;
                }

                this.scope.locales.error = 'components.parcelLabSettings.errors.generalSave';
                throw new Error('No settings found to save!');

              case 4:
                _context2.prev = 4;
                _context2.next = 7;
                return this.parcelLab.setSettings(this.scope.settings);

              case 7:
                result = _context2.sent;
                this.resetErrors();
                _context2.next = 11;
                return this.localesService.getByCurrentLang(['components', 'parcelLabSettings', 'successfullySavedMessage']);

              case 11:
                successfullySavedMessage = _context2.sent;
                this.easdk.flashNotice(successfullySavedMessage);
                return _context2.abrupt("return", result);

              case 16:
                _context2.prev = 16;
                _context2.t0 = _context2["catch"](4);
                console.error(_context2.t0);
                this.scope.locales.error = 'components.parcelLabSettings.errors.generalSave';
                _context2.next = 22;
                return this.localesService.getByCurrentLang(['components', 'parcelLabSettings', 'notSuccessfullySavedMessage']);

              case 22:
                notSuccessfullySavedMessage = _context2.sent;
                this.easdk.flashError(notSuccessfullySavedMessage);

              case 24:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[4, 16]]);
      }));

      function save() {
        return _save.apply(this, arguments);
      }

      return save;
    }()
  }, {
    key: "togglePassword",
    value: function togglePassword() {
      this.scope.showPasswort = !this.scope.showPasswort;

      if (this.scope.showPasswort) {
        this.scope.passwortInputType = 'text';
      } else {
        this.scope.passwortInputType = 'password';
      }
    }
  }, {
    key: "resetErrors",
    value: function resetErrors() {
      this.scope.locales.error = '';
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "connectedCallback", this).call(this);

      return this.init(ParcelLabSettingsComponent.observedAttributes);
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(observedAttributes) {
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                return _context3.abrupt("return", get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "init", this).call(this, observedAttributes).then(function (view) {
                  return view;
                }));

              case 1:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var settings;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "beforeBind", this).call(this);

              case 2:
                this.debug('beforeBind', this.scope);
                _context4.next = 5;
                return this.get();

              case 5:
                settings = _context4.sent;
                this.scope.settings = settings || this.scope.settings;
                this.debug('setted settings', this.scope.settings);

              case 8:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {
        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "afterBind", this).call(this);

              case 2:
                this.debug('afterBind', this.scope);

              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      return get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      return get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      return get_default()(getPrototypeOf_default()(ParcelLabSettingsComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = parcel_lab_settings_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return ParcelLabSettingsComponent;
}(src.Component);

defineProperty_default()(ParcelLabSettingsComponent, "tagName", 'parcel-lab-settings');
// EXTERNAL MODULE: ./ts/components/parcel-lab-list-tracking/parcel-lab-list-tracking.component.pug
var parcel_lab_list_tracking_component = __webpack_require__(2618);
var parcel_lab_list_tracking_component_default = /*#__PURE__*/__webpack_require__.n(parcel_lab_list_tracking_component);

// CONCATENATED MODULE: ./ts/components/parcel-lab-list-tracking/parcel-lab-list-tracking.component.ts











function parcel_lab_list_tracking_component_createSuper(Derived) { var hasNativeReflectConstruct = parcel_lab_list_tracking_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function parcel_lab_list_tracking_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






var ParcelLabListTrackingComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(ParcelLabListTrackingComponent, _Component);

  var _super = parcel_lab_list_tracking_component_createSuper(ParcelLabListTrackingComponent);

  createClass_default()(ParcelLabListTrackingComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function ParcelLabListTrackingComponent(element) {
    var _this;

    classCallCheck_default()(this, ParcelLabListTrackingComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "parcelLab", new ParcelLabService());

    defineProperty_default()(assertThisInitialized_default()(_this), "debug", browser_default()('component:' + ParcelLabListTrackingComponent.tagName));

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      list: []
    });

    _this.debug('constructor', assertThisInitialized_default()(_this));

    return _this;
  }

  createClass_default()(ParcelLabListTrackingComponent, [{
    key: "list",
    value: function () {
      var _list = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _list2;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return this.parcelLab.listTrackings();

              case 3:
                _list2 = _context.sent;
                this.debug('list', _list2);
                return _context.abrupt("return", _list2);

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](0);
                console.error(_context.t0);
                return _context.abrupt("return", null);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 8]]);
      }));

      function list() {
        return _list.apply(this, arguments);
      }

      return list;
    }()
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(ParcelLabListTrackingComponent.prototype), "connectedCallback", this).call(this);

      return this.init(ParcelLabListTrackingComponent.observedAttributes);
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var list;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(ParcelLabListTrackingComponent.prototype), "beforeBind", this).call(this);

              case 2:
                this.debug('beforeBind', this.scope);
                _context2.next = 5;
                return this.list();

              case 5:
                list = _context2.sent;

                if (list && list.results) {
                  this.scope.list = list.results;
                }

                this.debug('setted list', this.scope.list);

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "template",
    value: function template() {
      var template = null; // Only set the component template if there no childs already

      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        this.debug('Do not template, because element has child nodes');
        return template;
      } else {
        template = parcel_lab_list_tracking_component_default()(this.scope);
        this.debug('Use template', template);
        return template;
      }
    }
  }]);

  return ParcelLabListTrackingComponent;
}(src.Component);

defineProperty_default()(ParcelLabListTrackingComponent, "tagName", 'parcel-lab-list-tracking');
// CONCATENATED MODULE: ./ts/components/index.ts
// export { ComponentSkeletonComponent } from './component-skeleton/component-skeleton.component';









 // example
// CONCATENATED MODULE: ./ts/binders/index.ts

// CONCATENATED MODULE: ./ts/locales/en.ts


/* harmony default export */ const en = ({
  components: {
    parcelLabSettings: {
      title: 'ParcelLab',
      info: 'Enter your Parcel Lab data here to enable this app to send orders to Parcel Lab.',
      saveLabel: 'Save',
      showPasswordLabel: 'Show',
      hidePasswordLabel: 'Hide',
      tokenHelp: "We'll never share your token with anyone else.",
      preferCheckoutShippingMethodLabel: 'Try to identify the courier from the shipping method',
      preferCheckoutShippingMethodInfo: 'If active, the app tries to identify the courier by the title of the shipping method selected by the customer during the ordering process. We recommend to leave this option disabled and to activate it only if there are problems with the courier sent to ParcelLab',
      successfullySavedMessage: 'ParcelLab settings successfully saved',
      notSuccessfullySavedMessage: 'ParcelLab settings could not be saved',
      errors: {
        generalSave: 'Settings could not be saved, please check your input.'
      }
    },
    accountConnects: {
      shopify: {
        title: 'Shopify account',
        info: 'The Shopify account where you installed this app or have been granted access.',
        notConnected: 'This app has not yet been connected with Shopify. Enter your Shopify domain below to connect this app with Shopify.'
      },
      connect: 'Connect now',
      disconnect: 'Disconnect',
      logout: 'Logout'
    },
    plans: {
      title: 'App plan',
      info: 'Your plan for this app.',
      plan: 'Plan',
      activated_on: 'Activated on',
      price: 'Price',
      price_html: '{{price}} USD / month',
      trial: {
        ends_on: 'Trial ends on {{date}}',
        ended_on: 'Trial ended on {{date}}',
        days: 'Testing period',
        days_html: '{{days}} days'
      },
      activate: 'Activate',
      name: {
        customers: 'Customers tariff',
        "default": 'Standard tariff'
      }
    },
    apiExplorer: {
      input: {
        placeholder: 'Rest API URL for testing'
      },
      send: 'Send',
      edit: 'Edit',
      freestyle: {
        short_desc: 'Try the API itself by enter the URL yourself.'
      },
      roles: {
        'shopify-staff-member': {
          label: 'Backend only',
          info: 'For security reasons, this API can only be used in the backend and not in the theme.'
        }
      },
      query: {
        title: 'Activate optional query parameters'
      },
      shopify: {
        themes: {
          all: {
            short_desc: 'Retrieves a list of themes.'
          },
          theme_id: {
            short_desc: 'Retrieves a single theme.'
          },
          active: {
            short_desc: 'Retrieves the single active theme.'
          },
          assets: {
            list: {
              short_desc: 'Retrieve a list of all assets for a theme'
            },
            assets_filename: {
              short_desc: 'Retrieves a single theme asset file for a theme by its filename.'
            },
            templates_filename: {
              short_desc: 'Retrieves a single theme template file for a theme by its filename.'
            },
            snippets_filename: {
              short_desc: 'Retrieves a single theme snippets file for a theme by its filename.'
            },
            config_filename: {
              short_desc: 'Retrieves a single theme config file for a theme by its filename.'
            },
            layout_filename: {
              short_desc: 'Retrieves a single theme layout file for a theme by its filename.'
            },
            locales_filename: {
              short_desc: 'Retrieves a single theme locales file for a theme by its filename.'
            },
            sections_filename: {
              short_desc: 'Retrieves a single theme sections file for a theme by its filename.'
            },
            key: {
              short_desc: 'Retrieves a single theme file for a theme by its key.'
            }
          },
          locales: {
            all: {
              short_desc: 'Retrieve all language translations for a theme.'
            },
            list: {
              short_desc: 'Retrieve a list of locale asset files for a theme.'
            },
            json: {
              short_desc: 'Retrieves a single locale asset file for a theme by its filename.'
            },
            liquid: {
              short_desc: 'Retrieves a single section locale object for a theme by its liquid filename.'
            },
            property_path: {
              short_desc: 'Retrieves a locale subset or translation for a theme by its property path.'
            }
          }
        },
        products: {
          short_desc: 'Retrieves a list of products.',
          count: {
            short_desc: 'Retrieves a count of products.'
          },
          product_id: {
            short_desc: 'Retrieves a single product.'
          }
        }
      }
    },
    webhookExplorer: {
      placeholderCard: {
        content_html: (placeholder_card_content_en_default())
      },
      simulate: {
        label: 'Simulate',
        info: 'Creates a dummy product and removes it again to trigger the appropriate webhooks.'
      }
    },
    socketEventCard: {
      roles: {
        'shopify-staff-member': {
          label: 'Backend only',
          info: 'For security reasons, this webhook can only be received in the backend and not in the theme.'
        }
      }
    }
  },
  titles: {
    overview: 'Overview',
    settings: 'Settings',
    orders: 'Orders',
    'webhooks-api': 'Webhook Websocket API'
  },
  overview: {
    settings_desc: 'General settings and account connections',
    orders_desc: 'Show you the transferred orders'
  },
  orders: {
    webhooks: {
      title: 'Show current received order webhooks',
      description_html: (description_en_default())
    }
  }
});
// CONCATENATED MODULE: ./ts/locales/de.ts


/* harmony default export */ const de = ({
  components: {
    parcelLabSettings: {
      title: 'ParcelLab',
      info: 'Hinterlege hier deine Parcel Lab Daten um es dieser App zu ermöglichen Bestellungen an Parcel Lab zu senden.',
      saveLabel: 'Speichern',
      showPasswordLabel: 'Anzeigen',
      hidePasswordLabel: 'Verstecken',
      tokenHelp: 'Wir werden deinen Token niemals an andere weitergeben.',
      preferCheckoutShippingMethodLabel: 'Leite den Kuriers aus der Versandmethode her',
      preferCheckoutShippingMethodInfo: 'Wenn aktiv, versucht die App den Kurier anhand des Titels der Versandmethode (die der Kunde im Bestellvorgang ausgewählt hat) herzuleiten. Wir empfehlen diese Option deaktiviert zu lassen und nur zu aktivieren wenn es Probleme mit dem an ParcelLab übergebenen Kurier gibt.',
      successfullySavedMessage: 'ParcelLab Einstellungen erfolgreich gespeichert',
      notSuccessfullySavedMessage: 'ParcelLab Einstellungen konnten nicht gespeichert werden',
      errors: {
        generalSave: 'Einstellungen konnten nicht gespeichert werden, bitte überprüfe deine Eingabe.'
      }
    },
    accountConnects: {
      shopify: {
        title: 'Shopify-Konto',
        info: 'Das Shopify-Konto, in dem Sie diese App installiert haben oder Zugriff gewährt bekommen haben.',
        notConnected: 'Diese App wurde noch nicht mit Shopify verbunden. Geben Sie unten ihre Shopify-Domain ein um diese App mit Shopify zu verbinden.'
      },
      connect: 'Jetzt verbinden',
      disconnect: 'Trennen',
      logout: 'Abmelden'
    },
    plans: {
      title: 'App-Tarif',
      info: 'Ihr Tarif für diese App.',
      plan: 'Tarif',
      activated_on: 'Aktivert am',
      price: 'Preis',
      price_html: '{{price}} USD / Monat',
      trial: {
        ends_on: 'Testversion endet am {{date}}',
        ended_on: 'Testversion endete am {{date}}',
        days: 'Testzeitraum',
        days_html: '{{days}} Tage'
      },
      activate: 'Aktivieren',
      name: {
        customers: 'Kundentarif',
        "default": 'Standardtarif'
      }
    },
    apiExplorer: {
      input: {
        placeholder: 'Rest-API URL zum Testen'
      },
      send: 'Senden',
      edit: 'Bearbeiten',
      freestyle: {
        short_desc: 'Probiere die API selber aus indem du die die URL selber eingibst.'
      },
      roles: {
        'shopify-staff-member': {
          label: 'Nur Backend',
          info: 'Diese API kann aus Sicherheitsgründen nur im Backend und nicht im Theme verwendet werden.'
        }
      },
      query: {
        title: 'Aktiviere optionale Query-Parameter'
      },
      shopify: {
        themes: {
          all: {
            short_desc: 'Ruft eine Liste aller Themes ab.'
          },
          theme_id: {
            short_desc: 'Ruft ein einzelnes Theme ab.'
          },
          active: {
            short_desc: 'Ruft das einzelne aktive Theme ab.'
          },
          assets: {
            list: {
              short_desc: 'Ruft eine Liste aller Assets eines Themes ab.'
            },
            assets_filename: {
              short_desc: 'Ruft eine einzelne Asset-Datei eines Themes anhand seines Dateinamens ab.'
            },
            templates_filename: {
              short_desc: 'Ruft eine einzelne Template-Datei eines Themes anhand seines Dateinamens ab.'
            },
            snippets_filename: {
              short_desc: 'Ruft eine einzelne Snippet-Datei eines Themes anhand seines Dateinamens ab.'
            },
            config_filename: {
              short_desc: 'Ruft eine einzelne Config-Datei eines Themes anhand seines Dateinamens ab.'
            },
            layout_filename: {
              short_desc: 'Ruft eine einzelne Layout-Datei eines Themes anhand seines Dateinamens ab.'
            },
            locales_filename: {
              short_desc: 'Ruft eine einzelne Locales-Datei eines Themes anhand seines Dateinamens ab.'
            },
            sections_filename: {
              short_desc: 'Ruft eine einzelne Sections-Datei eines Themes anhand seines Dateinamens ab.'
            },
            key: {
              short_desc: 'Ruft ein einzelnes Assets eines Themes anhand seines Keys ab.'
            }
          },
          locales: {
            all: {
              short_desc: 'Ruft alle Übersetzungen eines Themes ab.'
            },
            list: {
              short_desc: 'Ruft eine Liste von Asset-Sprachdateien ab.'
            },
            json: {
              short_desc: 'Ruft eine einzelne Asset-Sprachdatei eines Themes anhand seines Dateinamens ab.'
            },
            liquid: {
              short_desc: 'Ruft ein einzelnes Snippet Sprachobject eines Themes anhand des Liquid-Dateinamens ab.'
            },
            property_path: {
              short_desc: 'Ruft eine Untermenge oder eine Übersetzung eines Themes anhand des Json-Pfad ab.'
            }
          }
        },
        products: {
          short_desc: 'Ruft eine Liste von Produkten ab.',
          count: {
            short_desc: 'Ruft eine Anzahl von Produkten ab.'
          },
          product_id: {
            short_desc: 'Ruft ein einzelnes Produkt ab.'
          }
        }
      }
    },
    webhookExplorer: {
      placeholderCard: {
        content_html: (placeholder_card_content_de_default())
      },
      simulate: {
        label: 'Simuliere',
        info: 'Erzeugt ein Dummy-Produkt und entfernt es wieder um die entsprechenden Webhooks auszulösen.'
      }
    },
    socketEventCard: {
      roles: {
        'shopify-staff-member': {
          label: 'Nur Backend',
          info: 'Dieser Webhook kann aus Sicherheitsbedenken nur im Backend und nicht im Theme empfangen werden.'
        }
      }
    }
  },
  titles: {
    overview: 'Übersicht',
    settings: 'Einstellungen',
    orders: 'Bestellungen',
    'webhooks-api': 'Webhook Websocket-API'
  },
  overview: {
    settings_desc: 'Generelle Einstellungen und Konto-Anbindungen',
    orders_desc: 'Zeige dir die übertragenen Bestellungen an'
  },
  orders: {
    webhooks: {
      title: 'Zeige gerade empfange Order-Webhooks',
      description_html: (description_de_default())
    }
  }
});
// CONCATENATED MODULE: ./ts/locales/index.ts


/* harmony default export */ const locales = ({
  en: en,
  de: de
});
// CONCATENATED MODULE: ./ts/main.ts



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



 // Extensions / Modules




 // Own






var handleize = function handleize(str) {
  return str.toLowerCase().trim().replace(/[^\w\s]/gi, '').replace(/ /g, '-');
};

var Main = function Main() {
  var _this = this;

  classCallCheck_default()(this, Main);

  defineProperty_default()(this, "debug", browser_default()('app:main'));

  defineProperty_default()(this, "riba", new src.Riba());

  defineProperty_default()(this, "model", {});

  defineProperty_default()(this, "dispatcher", new src.EventDispatcher());

  defineProperty_default()(this, "authService", new AuthService());

  defineProperty_default()(this, "shopifyApp", new EASDKWrapperService(ShopifyApp));

  defineProperty_default()(this, "localesService", new i18n_src.LocalesStaticService(locales, undefined, false));

  this.debug('init the main application');
  this.shopifyApp.Bar.initialize({
    title: 'The Developer App'
  });
  this.shopifyApp.Bar.autoIcon();
  this.shopifyApp.Bar.autoLoading();
  this.shopifyApp.Bar.autoTitle(function (title) {
    return _this.localesService.getByCurrentLang(['titles', handleize(title)]);
  });
  this.authService.loggedIn().then(function (loggedIn) {
    if (loggedIn) {
      _this.debug('ok');
    } else {
      // not logged in
      console.warn('Not logged in', loggedIn);

      if (EASDKWrapperService.inIframe()) {
        return _this.authService.shopifyConnectIframe(window.shop).then(function (result) {
          console.warn('Redirect to auth url', result);
          return _this.shopifyApp.redirect(result.authUrl);
        })["catch"](function (error) {
          console.error(error);
          return error;
        });
      }

      if (window.shop && window.shop.length) {
        window.location.href = '/shopify/auth?shop=' + window.shop;
      } else {
        window.location.href = '/'; // login / install input
      }
    }
  })["catch"](function (e) {
    console.error(e);
  }); // Regist custom components

  this.riba.module.regist({
    components: ts_components_namespaceObject,
    binders: _objectSpread({}, ts_binders_namespaceObject)
  }); // Regist modules

  console.debug('regist coreModule');
  this.riba.module.regist(src.coreModule);
  console.debug('regist routerModule', router_src.routerModule);
  this.riba.module.regist(router_src.routerModule);
  console.debug('regist i18nModule');
  this.riba.module.regist((0,i18n_src.i18nModule)(this.localesService));
  console.debug('regist shopifyEasdkModule');
  this.riba.module.regist(shopifyEasdkModule);
  console.debug('regist bs4Module');
  this.riba.module.regist(bs4_src/* bs4Module */.$); // this.dispatcher.on('newPageReady', (viewId: string, currentStatus: IState, prevStatus: IState, $container: JQuery<HTMLElement>, newPageRawHTML: string, dataset: any, isFirstPageLoad: boolean) => {
  //   this.debug('newPageReady', viewId, currentStatus, dataset);
  // });

  (0,dom/* ready */.Cd)(function () {
    _this.riba.bind(document.body, _this.model);
  });
};

var bootstrap = function bootstrap() {
  if (window.shop) {
    // set shop in header for all javascript requests
    src.HttpService.setRequestHeaderEachRequest('shop', window.shop);
    ShopifyApp.init({
      apiKey: window.apiKey,
      shopOrigin: "https://".concat(window.shop),
      forceRedirect: true,
      // If we want to allow to use the app outsite of the iframe we need to set false here
      debug: true
    });
  } else {
    console.error('Shop not detected', window.shop);
    window.location.href = '/';
  }

  ShopifyApp.ready(function () {
    new Main();
  });
};

(0,dom/* ready */.Cd)(function () {
  bootstrap();
});

/***/ }),

/***/ 8707:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "X": () => /* binding */ Bs4ShareComponent
/* harmony export */ });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2943);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8368);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7857);
/* harmony import */ var _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _ribajs_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(569);
/* harmony import */ var _ribajs_utils_src_url__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(3190);
/* harmony import */ var _bs4_share_component_html__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9775);
/* harmony import */ var _bs4_share_component_html__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_bs4_share_component_html__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _bs4_share_label_html__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3210);
/* harmony import */ var _bs4_share_label_html__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_bs4_share_label_html__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _ribajs_bs4__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(5668);
/* harmony import */ var _ribajs_utils_src_dom__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(4783);











function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_7___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }








/**
 * Component to share the a link
 * Similar projects wich are can share stuff:
 *  * https://github.com/nimiq/web-share-shim
 *  * http://webintents.org/
 *  * http://chriswren.github.io/native-social-interactions/
 *  * https://www.sharethis.com/platform/share-buttons/
 *  * https://github.com/dimsemenov/PhotoSwipe/blob/master/src/js/ui/photoswipe-ui-default.js
 *
 */
var Bs4ShareComponent = /*#__PURE__*/function (_Component) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_6___default()(Bs4ShareComponent, _Component);

  var _super = _createSuper(Bs4ShareComponent);

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default()(Bs4ShareComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["type", "title", "text", "url", "media-url", "label", "dropdown-direction"];
    }
  }]);

  function Bs4ShareComponent(element) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, Bs4ShareComponent);

    _this = _super.call(this, element);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), "_debug", false);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), "dropdown", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), "scope", void 0);

    _this.scope = _this.getScopeDefaults();

    _this.debug("constructor", _this.scope);

    Bs4ShareComponent.count++;
    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_5___default()(Bs4ShareComponent, [{
    key: "getDefaultShareServices",
    value: function getDefaultShareServices() {
      var newLine = "%0A";
      var shareItems = [{
        id: "facebook",
        label: "Facebook",
        // It is not possible to add a message on facebook sharer.php but with the Dialog API, see https://developers.facebook.com/docs/javascript/reference/FB.ui
        urlTemplate: "https://www.facebook.com/sharer/sharer.php?u={{url}}",
        mediaUrlTemplate: "https://www.facebook.com/sharer/sharer.php?u={{media_url}}",
        type: "popup",
        url: "",
        availableFor: ["page", "image", "video"]
      }, {
        id: "twitter",
        label: "Twitter",
        urlTemplate: "https://twitter.com/intent/tweet?text={{text}}&url={{url}}",
        mediaUrlTemplate: "https://twitter.com/intent/tweet?text={{text}}&url={{media_url}}".concat(newLine, "({{url}})"),
        url: "",
        availableFor: ["page", "image", "video"]
      }, {
        id: "pinterest",
        label: "Pinterest",
        urlTemplate: "http://www.pinterest.com/pin/create/button/" + "?url={{url}}&media={{media_url}}&description={{text}}",
        type: "popup",
        url: "",
        availableFor: ["image", "video"]
      }, {
        id: "whatsapp",
        label: "WhatsApp",
        urlTemplate: "https://api.whatsapp.com/send?text={{text}}".concat(newLine).concat(newLine, "{{url}}"),
        mediaUrlTemplate: "https://api.whatsapp.com/send?text={{text}}".concat(newLine).concat(newLine, "{{media_url}}").concat(newLine, "({{url}})"),
        type: "popup",
        url: "",
        availableFor: ["page", "image", "video"]
      }, {
        id: "telegram",
        label: "Telegram",
        urlTemplate: "https://telegram.me/share/url?url={{media_url}}&text={{text}}",
        mediaUrlTemplate: "https://telegram.me/share/url?url={{media_url}}&text={{text}}".concat(newLine, "({{url}})"),
        type: "popup",
        url: "",
        availableFor: ["page", "image", "video"]
      }, {
        id: "email",
        label: "Email",
        urlTemplate: "mailto:?subject={{title}}&body={{text}}".concat(newLine).concat(newLine, "{{url}}"),
        mediaUrlTemplate: "mailto:?subject={{title}}&body={{text}}".concat(newLine).concat(newLine, "{{media_url}}").concat(newLine, "({{url}})"),
        type: "href",
        url: "",
        availableFor: ["page", "image", "video"]
      }, // {
      //   id: "sms",
      //   label: "SMS",
      //   urlTemplate: "sms:?body={{text}}",
      //   type: 'href',
      //   url: "",
      //   canPassUrl: false,
      //   availableFor: ['page', 'image', 'video'],
      // },
      {
        id: "download",
        label: "Download image",
        urlTemplate: "{{raw_media_url}}",
        type: "download",
        url: "",
        availableFor: ["image", "video"]
      }];
      return shareItems;
    }
  }, {
    key: "isIos",
    value: function isIos() {
      return navigator.userAgent.match(/iPhone|iPad|iPod/i) !== null;
    }
  }, {
    key: "isAndroid",
    value: function isAndroid() {
      return navigator.userAgent.match(/Android/i) !== null;
    }
  }, {
    key: "browserSupportsNativeShare",
    value: function browserSupportsNativeShare() {
      return typeof navigator.share === "function";
    }
  }, {
    key: "getScopeDefaults",
    value: function getScopeDefaults() {
      var scope = {
        type: "page",
        title: document.title,
        text: "Look at this! 👀🤩",
        url: window.location.href,
        label: "Share",
        labelTemplate: (_bs4_share_label_html__WEBPACK_IMPORTED_MODULE_12___default()),
        isAndroid: this.isAndroid(),
        isIos: this.isIos(),
        isDesktop: false,
        isNative: this.browserSupportsNativeShare(),
        dropdownId: "dropdownShare" + Bs4ShareComponent.count,
        shareItems: this.getDefaultShareServices(),
        dropdownDirection: "down",
        // Methods
        share: this.share,
        shareOnService: this.shareOnService
      }; // on those two support "mobile deep links", so HTTP based fallback for all others.

      scope.isDesktop = !scope.isIos && !scope.isAndroid;
      return scope;
    }
  }, {
    key: "onExternalOpenEvent",
    value: function onExternalOpenEvent() {
      var _this$dropdown;

      (_this$dropdown = this.dropdown) === null || _this$dropdown === void 0 ? void 0 : _this$dropdown.show();
    }
  }, {
    key: "onExternalCloseEvent",
    value: function onExternalCloseEvent() {
      var _this$dropdown2;

      (_this$dropdown2 = this.dropdown) === null || _this$dropdown2 === void 0 ? void 0 : _this$dropdown2.close();
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Bs4ShareComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ShareComponent.observedAttributes);
      this.addEventListeners();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Bs4ShareComponent.prototype), "disconnectedCallback", this).call(this);

      this.removeEventListeners();
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      this.el.addEventListener("open", this.onExternalOpenEvent.bind(this));
      this.el.addEventListener("close", this.onExternalCloseEvent.bind(this));
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      this.el.removeEventListener("open", this.onExternalOpenEvent.bind(this));
      this.el.removeEventListener("close", this.onExternalOpenEvent.bind(this));
    }
  }, {
    key: "getURLForShare",
    value: function getURLForShare() {
      if (this.scope.type === "page" && this.scope.url) {
        return (0,_ribajs_utils_src_url__WEBPACK_IMPORTED_MODULE_15__/* .getUrl */ .Gr)(this.scope.url);
      }

      return window.location.href;
    }
  }, {
    key: "getMediaUrlForShare",
    value: function getMediaUrlForShare() {
      if (this.scope.type !== "page" && this.scope.url) {
        return (0,_ribajs_utils_src_url__WEBPACK_IMPORTED_MODULE_15__/* .getUrl */ .Gr)(this.scope.url);
      }

      return "";
    }
  }, {
    key: "getTextForShare",
    value: function getTextForShare() {
      return this.scope.text;
    }
    /**
     * Currently only used for email
     * @param appendUrl
     */

  }, {
    key: "getTitleForShare",
    value: function getTitleForShare() {
      return this.scope.title;
    }
  }, {
    key: "updateShareURLs",
    value: function updateShareURLs() {
      var _iterator = _createForOfIteratorHelper(this.scope.shareItems),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var shareItem = _step.value;
          var url = this.getURLForShare();
          var mediaUrl = this.getMediaUrlForShare();
          var shareText = this.getTextForShare();
          var shareTitle = this.getTitleForShare();
          var urlTemplate = shareItem.urlTemplate;

          if (this.scope.type !== "page" && shareItem.mediaUrlTemplate) {
            urlTemplate = shareItem.mediaUrlTemplate;
          }

          var shareURL = urlTemplate.replace("{{url}}", encodeURIComponent(url)).replace("{{url}}", encodeURIComponent(url)).replace("{{media_url}}", encodeURIComponent(mediaUrl)).replace("{{raw_media_url}}", mediaUrl).replace("{{text}}", encodeURIComponent(shareText)).replace("{{title}}", encodeURIComponent(shareTitle));
          shareItem.available = shareItem.availableFor.indexOf(this.scope.type) !== -1;
          shareItem.url = shareURL;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "initDropdown",
    value: function initDropdown() {
      var dropDownButtonElement = this.el.querySelector(".dropdown-toggle-share");

      if (!dropDownButtonElement) {
        console.warn('Element with selector ".dropdown-toggle-share" not found!', this.el);
        return;
      }

      this.dropdown = new _ribajs_bs4__WEBPACK_IMPORTED_MODULE_13__/* .DropdownService */ .Vn(dropDownButtonElement);
    }
    /**
     * New browser popup with the external site (e.g. Facebook) on you want to share your url
     * @param binding
     * @param event
     * @param controller
     * @param el
     */

  }, {
    key: "shareOnService",
    value: function shareOnService(event, controller, el) {
      var _this$dropdown3;

      this.debug("Open popup");
      (_this$dropdown3 = this.dropdown) === null || _this$dropdown3 === void 0 ? void 0 : _this$dropdown3.close();

      if (!el || !el.href) {
        console.error("No href attribute found");
        return false;
      } // We use the default browser anchor href logic for download and href


      if (el.hasAttribute("type") && el.getAttribute("type") === "download" || el.getAttribute("type") === "href") {
        return true;
      }

      event.preventDefault();
      event.stopPropagation(); // this.debug('Open popup');

      window.open(el.href, "Share", "scrollbars=yes,resizable=yes,toolbar=no," + "location=yes,width=550,height=420,top=100,left=" + (window.screen ? Math.round(screen.width / 2 - 275) : 100));
      return false;
    }
  }, {
    key: "share",
    value: function () {
      var _share = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(event) {
        var _this$dropdown4;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.debug("share", this.scope);
                event.preventDefault();
                event.stopPropagation();

                if (!(this.scope.isNative && !this.scope.isDesktop)) {
                  _context.next = 7;
                  break;
                }

                return _context.abrupt("return", navigator.share({
                  title: this.scope.title,
                  text: "".concat(this.scope.text, "\r\n\r\n"),
                  url: this.scope.url || window.location.href
                })["catch"](function (error) {
                  if (error.name === "AbortError") {
                    // TODO show flash message
                    // this.debug(error.message);
                    return;
                  }

                  console.error("Error ".concat(error.name, ": ").concat(error.message), error);
                }));

              case 7:
                this.updateShareURLs();
                return _context.abrupt("return", (_this$dropdown4 = this.dropdown) === null || _this$dropdown4 === void 0 ? void 0 : _this$dropdown4.toggle());

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function share(_x) {
        return _share.apply(this, arguments);
      }

      return share;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Bs4ShareComponent.prototype), "beforeBind", this).call(this);

              case 2:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return _babel_runtime_helpers_get__WEBPACK_IMPORTED_MODULE_4___default()(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_8___default()(Bs4ShareComponent.prototype), "afterBind", this).call(this);

              case 2:
                this.initDropdown(); // this.debug('afterBind', this.scope);

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["url"];
    }
  }, {
    key: "template",
    value: function template() {
      this.debug("template", this.el, (0,_ribajs_utils_src_dom__WEBPACK_IMPORTED_MODULE_14__/* .hasChildNodesTrim */ .Np)(this.el));

      if (this.el && (0,_ribajs_utils_src_dom__WEBPACK_IMPORTED_MODULE_14__/* .hasChildNodesTrim */ .Np)(this.el)) {
        // If a child is set, this is a custom label template
        this.scope.labelTemplate = this.el.innerHTML;
        this.debug("Custom label template: ", this.scope.labelTemplate);
      }

      return (_bs4_share_component_html__WEBPACK_IMPORTED_MODULE_11___default());
    }
  }]);

  return Bs4ShareComponent;
}(_ribajs_core__WEBPACK_IMPORTED_MODULE_10__.Component);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(Bs4ShareComponent, "tagName", "bs4-share");

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default()(Bs4ShareComponent, "count", 0);

/***/ }),

/***/ 5668:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Vn": () => /* reexport */ DropdownService,
  "XJ": () => /* reexport */ PopoverService,
  "$": () => /* reexport */ bs4Module
});

// UNUSED EXPORTS: ARIA_ATTRIBUTE_PATTERN, Bs4AccordionComponent, Bs4ButtonComponent, Bs4CarouselComponent, Bs4ContentsComponent, Bs4DropdownComponent, Bs4FormComponent, Bs4IconComponent, Bs4ModalItemComponent, Bs4NavbarComponent, Bs4NotificationContainerComponent, Bs4ScrollspyComponent, Bs4ShareComponent, Bs4SidebarComponent, Bs4SlideshowComponent, Bs4TabsComponent, Bs4ToastItemComponent, Bs4ToggleButtonComponent, CollapseService, DATA_URL_PATTERN, Data, DefaultAllowlist, EventHandler, MILLISECONDS_MULTIPLIER, Manipulator, ModalService, NODE_TEXT, SAFE_URL_PATTERN, SelectorEngine, TOGGLE_ATTRIBUTE, TOGGLE_BUTTON, TOGGLE_CLASS, TRANSITION_END, ToastService, TooltipService, Utils, allowedAttribute, children, closest, collapseBinder, collapseOnUrlBinder, dropdownBinder, emulateTransitionEnd, expanOnUrlBinder, find, findOne, findShadowRoot, getData, getElementFromSelector, getSelector, getSelectorFromElement, getTransitionDurationFromElement, getjQuery, isElement, isVisible, makeArray, matches, noop, off, on, one, parents, popoverBinder, prev, reflow, removeData, sanitizeHtml, scrollToOnEventBinder, scrollspyClassBinder, setData, showToastOnEventBinder, toType, toggleAttributeBinder, toggleClassBinder, toggleCollapseOnEventBinder, tooltipBinder, trigger, triggerTransitionEnd, typeCheckConfig, uriAttrs

// NAMESPACE OBJECT: ../../riba/packages/bs4/src/services/index.ts
var services_namespaceObject = {};
__webpack_require__.r(services_namespaceObject);
__webpack_require__.d(services_namespaceObject, {
  "ARIA_ATTRIBUTE_PATTERN": () => ARIA_ATTRIBUTE_PATTERN,
  "CollapseService": () => CollapseService,
  "DATA_URL_PATTERN": () => DATA_URL_PATTERN,
  "Data": () => Data,
  "DefaultAllowlist": () => DefaultAllowlist,
  "DropdownService": () => DropdownService,
  "EventHandler": () => EventHandler,
  "MILLISECONDS_MULTIPLIER": () => MILLISECONDS_MULTIPLIER,
  "Manipulator": () => Manipulator,
  "ModalService": () => ModalService,
  "NODE_TEXT": () => NODE_TEXT,
  "PopoverService": () => PopoverService,
  "SAFE_URL_PATTERN": () => SAFE_URL_PATTERN,
  "SelectorEngine": () => SelectorEngine,
  "TRANSITION_END": () => TRANSITION_END,
  "ToastService": () => ToastService,
  "TooltipService": () => TooltipService,
  "Utils": () => Utils,
  "allowedAttribute": () => allowedAttribute,
  "children": () => children,
  "closest": () => closest,
  "emulateTransitionEnd": () => emulateTransitionEnd,
  "find": () => find,
  "findOne": () => findOne,
  "findShadowRoot": () => findShadowRoot,
  "getData": () => getData,
  "getElementFromSelector": () => getElementFromSelector,
  "getSelector": () => getSelector,
  "getSelectorFromElement": () => getSelectorFromElement,
  "getTransitionDurationFromElement": () => getTransitionDurationFromElement,
  "getjQuery": () => getjQuery,
  "isElement": () => isElement,
  "isVisible": () => isVisible,
  "makeArray": () => makeArray,
  "matches": () => matches,
  "noop": () => noop,
  "off": () => off,
  "on": () => on,
  "one": () => one,
  "parents": () => parents,
  "prev": () => prev,
  "reflow": () => reflow,
  "removeData": () => removeData,
  "sanitizeHtml": () => sanitizeHtml,
  "setData": () => setData,
  "toType": () => toType,
  "trigger": () => trigger,
  "triggerTransitionEnd": () => triggerTransitionEnd,
  "typeCheckConfig": () => typeCheckConfig,
  "uriAttrs": () => uriAttrs
});

// NAMESPACE OBJECT: ../../riba/packages/bs4/src/binders/index.ts
var binders_namespaceObject = {};
__webpack_require__.r(binders_namespaceObject);
__webpack_require__.d(binders_namespaceObject, {
  "collapseBinder": () => collapseBinder,
  "collapseOnUrlBinder": () => collapseOnUrlBinder,
  "dropdownBinder": () => dropdownBinder,
  "expanOnUrlBinder": () => expanOnUrlBinder,
  "popoverBinder": () => popoverBinder,
  "scrollToOnEventBinder": () => scrollToOnEventBinder,
  "scrollspyClassBinder": () => scrollspyClassBinder,
  "showToastOnEventBinder": () => showToastOnEventBinder,
  "toggleAttributeBinder": () => toggleAttributeBinder,
  "toggleClassBinder": () => toggleClassBinder,
  "toggleCollapseOnEventBinder": () => toggleCollapseOnEventBinder,
  "tooltipBinder": () => tooltipBinder
});

// NAMESPACE OBJECT: ../../riba/packages/extras/src/services/index.ts
var src_services_namespaceObject = {};
__webpack_require__.r(src_services_namespaceObject);
__webpack_require__.d(src_services_namespaceObject, {
  "Autoscroll": () => Autoscroll,
  "Dragscroll": () => Dragscroll,
  "FullscreenService": () => FullscreenService,
  "Gameloop": () => Gameloop,
  "ScrollEventsService": () => ScrollEventsService,
  "TouchEventsService": () => TouchEventsService,
  "TouchType": () => TouchType,
  "Utils": () => utils_service_Utils
});

// NAMESPACE OBJECT: ../../riba/packages/extras/src/binders/index.ts
var src_binders_namespaceObject = {};
__webpack_require__.r(src_binders_namespaceObject);
__webpack_require__.d(src_binders_namespaceObject, {
  "autoscrollBinder": () => autoscrollBinder,
  "dataScrollPositionYBinder": () => dataScrollPositionYBinder,
  "scrollEventsBinder": () => scrollEventsBinder,
  "scrollbarDraggableBinder": () => scrollbarDraggableBinder,
  "syncElementPropertyBinder": () => syncElementPropertyBinder,
  "touchEventsBinder": () => touchEventsBinder
});

// NAMESPACE OBJECT: ../../riba/packages/bs4/src/components/index.ts
var components_namespaceObject = {};
__webpack_require__.r(components_namespaceObject);
__webpack_require__.d(components_namespaceObject, {
  "Bs4AccordionComponent": () => Bs4AccordionComponent,
  "Bs4ButtonComponent": () => Bs4ButtonComponent,
  "Bs4CarouselComponent": () => Bs4CarouselComponent,
  "Bs4ContentsComponent": () => Bs4ContentsComponent,
  "Bs4DropdownComponent": () => Bs4DropdownComponent,
  "Bs4FormComponent": () => Bs4FormComponent,
  "Bs4IconComponent": () => Bs4IconComponent,
  "Bs4ModalItemComponent": () => Bs4ModalItemComponent,
  "Bs4NavbarComponent": () => Bs4NavbarComponent,
  "Bs4NotificationContainerComponent": () => Bs4NotificationContainerComponent,
  "Bs4ScrollspyComponent": () => Bs4ScrollspyComponent,
  "Bs4ShareComponent": () => bs4_share_component/* Bs4ShareComponent */.X,
  "Bs4SidebarComponent": () => Bs4SidebarComponent,
  "Bs4SlideshowComponent": () => Bs4SlideshowComponent,
  "Bs4TabsComponent": () => Bs4TabsComponent,
  "Bs4ToastItemComponent": () => Bs4ToastItemComponent,
  "Bs4ToggleButtonComponent": () => Bs4ToggleButtonComponent
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dom/data.ts



/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.3.1): dom/data.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
var mapData = function () {
  var storeData = {};
  var id = 1;
  return {
    set: function set(element, key, data) {
      if (typeof element.dataset.key === "undefined") {
        element.dataset.key = key;
        element.dataset.id = id.toString();
        id++;
      }

      if (element.dataset.id) {
        storeData[element.dataset.id] = data;
      }
    },
    get: function get(element, key) {
      if (!element || typeof element.dataset.key === "undefined") {
        return null;
      }

      var keyProperties = {
        key: element.dataset.key,
        id: element.dataset.id
      };

      if (keyProperties.key === key && typeof keyProperties.id !== "undefined") {
        return storeData[keyProperties.id];
      }

      return null;
    },
    "delete": function _delete(element, key) {
      if (typeof element.dataset.key === "undefined") {
        return;
      }

      var keyProperties = {
        key: element.dataset.key,
        id: element.dataset.id
      };

      if (keyProperties.key === key && typeof keyProperties.id !== "undefined") {
        delete storeData[keyProperties.id];
        delete element.dataset.key;
      }
    }
  };
}();

var setData = function setData(instance, key, data) {
  mapData.set(instance, key, data);
};
var getData = function getData(instance, key) {
  return mapData.get(instance, key);
};
var removeData = function removeData(instance, key) {
  mapData["delete"](instance, key);
};
/**
 * @deprecated Import the methods directly instead of this class
 */

var Data = function Data() {
  classCallCheck_default()(this, Data);
};

defineProperty_default()(Data, "setData", setData);

defineProperty_default()(Data, "getData", getData);

defineProperty_default()(Data, "removeData", removeData);

/* harmony default export */ const dom_data = (Data);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dom/event-handler.ts



/**
 * see see https://github.com/twbs/bootstrap/blob/master/js/src/dom/event-handler.js
 */
var on = function on(element, eventName, handler) {
  return element.addEventListener(eventName, handler, {});
};
var one = function one(element, eventName, handler) {
  return element.addEventListener(eventName, handler, {
    once: true
  });
};
var off = function off(element, originalTypeEvent, handler) {
  return element.removeEventListener(originalTypeEvent, handler);
};
var trigger = function trigger(element, eventName) {
  var extraParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var event = new CustomEvent(eventName, {
    detail: extraParameters,
    bubbles: true,
    cancelable: true
  });
  element.dispatchEvent(event);
  return event;
};
/**
 * @deprecated Import the methods directly instead of this class
 */

var EventHandler = function EventHandler() {
  classCallCheck_default()(this, EventHandler);
};

defineProperty_default()(EventHandler, "on", on);

defineProperty_default()(EventHandler, "one", one);

defineProperty_default()(EventHandler, "off", off);

defineProperty_default()(EventHandler, "trigger", trigger);

/* harmony default export */ const event_handler = (EventHandler);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dom/manipulator.ts


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): dom/manipulator.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * @see https://github.com/twbs/bootstrap/blob/main/js/src/dom/manipulator.js
 * --------------------------------------------------------------------------
 */
function normalizeData(val) {
  if (val === "true") {
    return true;
  }

  if (val === "false") {
    return false;
  }

  if (val === Number(val).toString()) {
    return Number(val);
  }

  if (val === "" || val === "null") {
    return null;
  }

  return val;
}

function normalizeDataKey(key) {
  return key.replace(/[A-Z]/g, function (chr) {
    return "-".concat(chr.toLowerCase());
  });
}

var Manipulator = {
  setDataAttribute: function setDataAttribute(element, key, value) {
    element.setAttribute("data-".concat(normalizeDataKey(key)), value);
  },
  removeDataAttribute: function removeDataAttribute(element, key) {
    element.removeAttribute("data-".concat(normalizeDataKey(key)));
  },
  getDataAttributes: function getDataAttributes(element) {
    if (!element) {
      return {};
    }

    var attributes = _objectSpread({}, element.dataset);

    Object.keys(attributes).forEach(function (key) {
      attributes[key] = normalizeData(attributes[key]);
    });
    return attributes;
  },
  getDataAttribute: function getDataAttribute(element, key) {
    return normalizeData(element.getAttribute("data-".concat(normalizeDataKey(key))));
  },
  offset: function offset(element) {
    var rect = element.getBoundingClientRect();
    return {
      top: rect.top + document.body.scrollTop,
      left: rect.left + document.body.scrollLeft
    };
  },
  position: function position(element) {
    return {
      top: element.offsetTop,
      left: element.offsetLeft
    };
  },
  toggleClass: function toggleClass(element, className) {
    if (!element) {
      return;
    }

    if (element.classList.contains(className)) {
      element.classList.remove(className);
    } else {
      element.classList.add(className);
    }
  }
};
/* harmony default export */ const manipulator = (Manipulator);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/utils.service.ts






function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var MILLISECONDS_MULTIPLIER = 1000;
var TRANSITION_END = "transitionend";
/**
 * Shoutout AngusCroll (https://goo.gl/pxwQGp)
 * @param obj
 */

var toType = function toType(obj) {
  var matches = {}.toString.call(obj).match(/\s([a-z]+)/i);
  return matches ? matches[1].toLowerCase() : null;
};
var getSelector = function getSelector(element) {
  var selector = element.getAttribute("data-target");

  if (!selector || selector === "#") {
    var hrefAttr = element.getAttribute("href");
    selector = hrefAttr && hrefAttr !== "#" ? hrefAttr.trim() : null;
  }

  return selector;
};
var getSelectorFromElement = function getSelectorFromElement(element) {
  var selector = Utils.getSelector(element);

  if (selector) {
    return document.querySelector(selector) ? selector : null;
  }

  return null;
};
var getElementFromSelector = function getElementFromSelector(element) {
  var selector = Utils.getSelector(element);
  return selector ? document.querySelector(selector) : null;
};
var getTransitionDurationFromElement = function getTransitionDurationFromElement(element) {
  if (!element) {
    return 0;
  } // Get transition-duration of the element


  var _window$getComputedSt = window.getComputedStyle(element),
      transitionDuration = _window$getComputedSt.transitionDuration,
      transitionDelay = _window$getComputedSt.transitionDelay;

  var floatTransitionDuration = parseFloat(transitionDuration);
  var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

  if (!floatTransitionDuration && !floatTransitionDelay) {
    return 0;
  } // If multiple durations are defined, take the first


  transitionDuration = transitionDuration.split(",")[0];
  transitionDelay = transitionDelay.split(",")[0];
  return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
};
var triggerTransitionEnd = function triggerTransitionEnd(element) {
  var evt = document.createEvent("HTMLEvents");
  evt.initEvent(TRANSITION_END, true, true);
  element.dispatchEvent(evt);
};
var isElement = function isElement(obj) {
  return (obj[0] || obj).nodeType;
};
var emulateTransitionEnd = function emulateTransitionEnd(element, duration) {
  var called = false;
  var durationPadding = 5;
  var emulatedDuration = duration + durationPadding;

  function listener() {
    called = true;
    element.removeEventListener(TRANSITION_END, listener);
  }

  element.addEventListener(TRANSITION_END, listener);
  setTimeout(function () {
    if (!called) {
      Utils.triggerTransitionEnd(element);
    }
  }, emulatedDuration);
};
/**
 *
 * @param componentName
 * @param config
 * @param configTypes
 */

var typeCheckConfig = function typeCheckConfig(componentName, config, configTypes) {
  for (var property in configTypes) {
    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
      var expectedTypes = configTypes[property];
      var value = config[property];
      var valueType = value && Utils.isElement(value) ? "element" : Utils.toType(value);

      if (!valueType || !new RegExp(expectedTypes).test(valueType)) {
        throw new Error("".concat(componentName.toUpperCase(), ": ") + "Option \"".concat(property, "\" provided type \"").concat(valueType, "\" ") + "but expected type \"".concat(expectedTypes, "\"."));
      }
    }
  }
};
var makeArray = function makeArray(nodeList) {
  if (!nodeList) {
    return [];
  }

  return [].slice.call(nodeList);
};
var isVisible = function isVisible(element) {
  if (!element) {
    return false;
  }

  if (element.style && element.parentNode && element.parentNode.style) {
    var elementStyle = getComputedStyle(element);
    var parentNodeStyle = getComputedStyle(element.parentNode);
    return elementStyle.display !== "none" && parentNodeStyle.display !== "none" && elementStyle.visibility !== "hidden";
  }

  return false;
};
var findShadowRoot = function findShadowRoot(element) {
  if (!document.documentElement.attachShadow) {
    return null;
  } // Can find the shadow root otherwise it'll return the document


  if (typeof element.getRootNode === "function") {
    var root = element.getRootNode();
    return root instanceof ShadowRoot ? root : null;
  }

  if (element instanceof ShadowRoot) {
    return element;
  } // when we don't find a shadow root


  if (!element.parentNode) {
    return null;
  }

  return Utils.findShadowRoot(element.parentNode);
};
var noop = function noop() {
  return function () {
    /** nothing */
  };
};
var reflow = function reflow(element) {
  return element.offsetHeight;
};
var getjQuery = function getjQuery() {
  var _ref = window,
      jQuery = _ref.jQuery;

  if (jQuery && !document.body.hasAttribute("data-no-jquery")) {
    return jQuery;
  }

  return null;
};
/**
 * @deprecated Import the methods directly instead of this Utils class
 * @see https://github.com/twbs/bootstrap/blob/master/js/src/util/index.js
 */

var Utils = /*#__PURE__*/function (_RibaUtils) {
  inherits_default()(Utils, _RibaUtils);

  var _super = _createSuper(Utils);

  function Utils() {
    classCallCheck_default()(this, Utils);

    return _super.apply(this, arguments);
  }

  return Utils;
}(src.Utils);

defineProperty_default()(Utils, "toType", toType);

defineProperty_default()(Utils, "getSelector", getSelector);

defineProperty_default()(Utils, "getSelectorFromElement", getSelectorFromElement);

defineProperty_default()(Utils, "getElementFromSelector", getElementFromSelector);

defineProperty_default()(Utils, "getTransitionDurationFromElement", getTransitionDurationFromElement);

defineProperty_default()(Utils, "triggerTransitionEnd", triggerTransitionEnd);

defineProperty_default()(Utils, "isElement", isElement);

defineProperty_default()(Utils, "emulateTransitionEnd", emulateTransitionEnd);

defineProperty_default()(Utils, "typeCheckConfig", typeCheckConfig);

defineProperty_default()(Utils, "makeArray", makeArray);

defineProperty_default()(Utils, "isVisible", isVisible);

defineProperty_default()(Utils, "findShadowRoot", findShadowRoot);

defineProperty_default()(Utils, "noop", noop);

defineProperty_default()(Utils, "reflow", reflow);

defineProperty_default()(Utils, "getjQuery", getjQuery);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dom/selector-engine.ts



/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.3.1): dom/selector-engine.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * see https://github.com/twbs/bootstrap/blob/master/js/src/dom/selector-engine.js
 * --------------------------------------------------------------------------
 */

/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

var NODE_TEXT = 3;
var matches = function matches(element, selector) {
  return Element.prototype.matches.call(element, selector);
};
var find = function find(selector) {
  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;
  return Element.prototype.querySelectorAll.call(element, selector);
};
var findOne = function findOne(selector) {
  var element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;
  return Element.prototype.querySelector.call(element, selector);
};
var children = function children(element, selector) {
  var children = Utils.makeArray(element.children);
  return children.filter(function (child) {
    return matches(child, selector);
  });
};
var parents = function parents(element, selector) {
  var parents = [];
  var ancestor = element.parentNode;

  while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {
    if (matches(ancestor, selector)) {
      parents.push(ancestor);
    }

    ancestor = ancestor.parentNode;
  }

  return parents;
};
var closest = function closest(element, selector) {
  return Element.prototype.closest.call(element, selector);
};
var prev = function prev(element, selector) {
  var siblings = [];
  var previous = element.previousSibling;

  while (previous && previous.nodeType === Node.ELEMENT_NODE && previous.nodeType !== NODE_TEXT) {
    if (matches(previous, selector)) {
      siblings.push(previous);
    }

    previous = previous.previousSibling;
  }

  return siblings;
};
/**
 * @deprecated Import the methods directly instead of this class
 */

var SelectorEngine = function SelectorEngine() {
  classCallCheck_default()(this, SelectorEngine);
};

defineProperty_default()(SelectorEngine, "matches", matches);

defineProperty_default()(SelectorEngine, "find", find);

defineProperty_default()(SelectorEngine, "findOne", findOne);

defineProperty_default()(SelectorEngine, "children", children);

defineProperty_default()(SelectorEngine, "parents", parents);

defineProperty_default()(SelectorEngine, "closest", closest);

defineProperty_default()(SelectorEngine, "prev", prev);

/* harmony default export */ const selector_engine = (SelectorEngine);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dom/index.ts




// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/carousel.service.ts




function carousel_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function carousel_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { carousel_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { carousel_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.3.1): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */



/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

var NAME = "carousel";
var DATA_KEY = "bs.carousel";
var EVENT_KEY = ".".concat(DATA_KEY);
var DATA_API_KEY = ".data-api";
var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key

var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

var SWIPE_THRESHOLD = 40;
var Default = {
  interval: 5000,
  keyboard: true,
  slide: false,
  pause: "hover",
  wrap: true,
  touch: true
};
var DefaultType = {
  interval: "(number|boolean)",
  keyboard: "boolean",
  slide: "(boolean|string)",
  pause: "(string|boolean)",
  wrap: "boolean",
  touch: "boolean"
};
var Direction = {
  NEXT: "next",
  PREV: "prev",
  LEFT: "left",
  RIGHT: "right"
};
var Event = {
  SLIDE: "slide".concat(EVENT_KEY),
  SLID: "slid".concat(EVENT_KEY),
  KEYDOWN: "keydown".concat(EVENT_KEY),
  MOUSEENTER: "mouseenter".concat(EVENT_KEY),
  MOUSELEAVE: "mouseleave".concat(EVENT_KEY),
  TOUCHSTART: "touchstart".concat(EVENT_KEY),
  TOUCHMOVE: "touchmove".concat(EVENT_KEY),
  TOUCHEND: "touchend".concat(EVENT_KEY),
  POINTERDOWN: "pointerdown".concat(EVENT_KEY),
  POINTERUP: "pointerup".concat(EVENT_KEY),
  DRAG_START: "dragstart".concat(EVENT_KEY),
  LOAD_DATA_API: "load".concat(EVENT_KEY).concat(DATA_API_KEY),
  CLICK_DATA_API: "click".concat(EVENT_KEY).concat(DATA_API_KEY)
};
var ClassName = {
  CAROUSEL: "carousel",
  ACTIVE: "active",
  SLIDE: "slide",
  RIGHT: "carousel-item-right",
  LEFT: "carousel-item-left",
  NEXT: "carousel-item-next",
  PREV: "carousel-item-prev",
  ITEM: "carousel-item",
  POINTER_EVENT: "pointer-event"
};
var Selector = {
  ACTIVE: ".active",
  ACTIVE_ITEM: ".active.carousel-item",
  ITEM: ".carousel-item",
  ITEM_IMG: ".carousel-item img",
  NEXT_PREV: ".carousel-item-next, .carousel-item-prev",
  INDICATORS: ".carousel-indicators"
};
var PointerType = {
  TOUCH: "touch",
  PEN: "pen"
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var CarouselService = /*#__PURE__*/function () {
  function CarouselService(element, config) {
    classCallCheck_default()(this, CarouselService);

    defineProperty_default()(this, "_items", null);

    defineProperty_default()(this, "_interval", null);

    defineProperty_default()(this, "_activeElement", null);

    defineProperty_default()(this, "_isPaused", false);

    defineProperty_default()(this, "_isSliding", false);

    defineProperty_default()(this, "_config", void 0);

    defineProperty_default()(this, "_element", void 0);

    defineProperty_default()(this, "_indicatorsElement", void 0);

    defineProperty_default()(this, "_touchSupported", void 0);

    defineProperty_default()(this, "_pointerEvent", void 0);

    defineProperty_default()(this, "touchTimeout", null);

    defineProperty_default()(this, "touchStartX", 0);

    defineProperty_default()(this, "touchDeltaX", 0);

    this._items = null;
    this._interval = null;
    this._activeElement = null;
    this._isPaused = false;
    this._isSliding = false;
    this.touchTimeout = null;
    this.touchStartX = 0;
    this.touchDeltaX = 0;
    this._config = this._getConfig(config);
    this._element = element;
    this._indicatorsElement = selector_engine.findOne(Selector.INDICATORS, this._element) || null;
    this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0;
    this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);
    console.debug("CarouselService", this);

    this._addEventListeners();
  } // Getters


  createClass_default()(CarouselService, [{
    key: "next",
    // Public
    value: function next() {
      if (!this._isSliding) {
        this._slide(Direction.NEXT);
      }
    }
  }, {
    key: "nextWhenVisible",
    value: function nextWhenVisible() {
      // Don't call next when the page isn't visible
      // or the carousel or its parent isn't visible
      if (!document.hidden && Utils.isVisible(this._element)) {
        this.next();
      }
    }
  }, {
    key: "prev",
    value: function prev() {
      if (!this._isSliding) {
        this._slide(Direction.PREV);
      }
    }
  }, {
    key: "pause",
    value: function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if (selector_engine.findOne(Selector.NEXT_PREV, this._element)) {
        Utils.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval || undefined);
      this._interval = null;
    }
  }, {
    key: "cycle",
    value: function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config && this._config.interval && !this._isPaused) {
        this._interval = window.setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    }
  }, {
    key: "to",
    value: function to(index) {
      var _this = this;

      if (this._items === null) {
        throw new Error("No items found!");
      }

      this._activeElement = selector_engine.findOne(Selector.ACTIVE_ITEM, this._element) || null;

      if (this._activeElement === null) {
        throw new Error("Active element not found!");
      }

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        event_handler.one(this._element, Event.SLID, function () {
          return _this.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;

      this._slide(direction, this._items[index]);
    }
  }, {
    key: "dispose",
    value: function dispose() {// EventHandler.off(this._element, EVENT_KEY)
      // this._items = null
      // this._config = null
      // this._element = null
      // this._interval = null
      // this._isPaused = null
      // this._isSliding = null
      // this._activeElement = null
      // this._indicatorsElement = null
    } // Private

  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      config = carousel_service_objectSpread(carousel_service_objectSpread({}, Default), config);
      Utils.typeCheckConfig(NAME, config, DefaultType);
      return config;
    }
  }, {
    key: "_handleSwipe",
    value: function _handleSwipe() {
      var absDeltax = Math.abs(this.touchDeltaX);

      if (absDeltax <= SWIPE_THRESHOLD) {
        return;
      }

      var direction = absDeltax / this.touchDeltaX;
      this.touchDeltaX = 0; // swipe left

      if (direction > 0) {
        this.prev();
      } // swipe right


      if (direction < 0) {
        this.next();
      }
    }
  }, {
    key: "_addEventListeners",
    value: function _addEventListeners() {
      var _this2 = this;

      if (this._config.keyboard) {
        event_handler.on(this._element, Event.KEYDOWN, function (event) {
          return _this2._keydown(event);
        });
      }

      if (this._config.pause === "hover") {
        event_handler.on(this._element, Event.MOUSEENTER, function (event) {
          return _this2.pause(event);
        });
        event_handler.on(this._element, Event.MOUSELEAVE, function (event) {
          return _this2.cycle(event);
        });
      }

      if (this._config.touch && this._touchSupported) {
        this._addTouchEventListeners();
      }
    }
  }, {
    key: "_addTouchEventListeners",
    value: function _addTouchEventListeners() {
      var _this3 = this;

      var start = function start(event) {
        if (_this3._pointerEvent && PointerType[event.pointerType.toUpperCase()]) {
          _this3.touchStartX = event.clientX;
        } else if (!_this3._pointerEvent) {
          _this3.touchStartX = event.touches[0].clientX;
        }
      };

      var move = function move(event) {
        // ensure swiping with one touch and not pinching
        if (event.touches && event.touches.length > 1) {
          _this3.touchDeltaX = 0;
        } else {
          _this3.touchDeltaX = event.touches[0].clientX - _this3.touchStartX;
        }
      };

      var end = function end(event) {
        if (_this3._pointerEvent && PointerType[event.pointerType.toUpperCase()]) {
          _this3.touchDeltaX = event.clientX - _this3.touchStartX;
        }

        _this3._handleSwipe();

        if (_this3._config.pause === "hover") {
          // If it's a touch-enabled device, mouseenter/leave are fired as
          // part of the mouse compatibility events on first tap - the carousel
          // would stop cycling until user tapped out of it;
          // here, we listen for touchend, explicitly pause the carousel
          // (as if it's the second time we tap on it, mouseenter compat event
          // is NOT fired) and after a timeout (to allow for mouse compatibility
          // events to fire) we explicitly restart cycling
          _this3.pause();

          if (_this3.touchTimeout) {
            clearTimeout(_this3.touchTimeout);
          }

          _this3.touchTimeout = setTimeout(function (event) {
            return _this3.cycle(event);
          }, TOUCHEVENT_COMPAT_WAIT + (_this3._config.interval || 0));
        }
      };

      Utils.makeArray(selector_engine.find(Selector.ITEM_IMG, this._element)).forEach(function (itemImg) {
        event_handler.on(itemImg, Event.DRAG_START, function (event) {
          return event.preventDefault();
        });
      });

      if (this._pointerEvent) {
        event_handler.on(this._element, Event.POINTERDOWN, function (event) {
          return start(event);
        });
        event_handler.on(this._element, Event.POINTERUP, function (event) {
          return end(event);
        });

        this._element.classList.add(ClassName.POINTER_EVENT);
      } else {
        event_handler.on(this._element, Event.TOUCHSTART, function (event) {
          return start(event);
        });
        event_handler.on(this._element, Event.TOUCHMOVE, function (event) {
          return move(event);
        });
        event_handler.on(this._element, Event.TOUCHEND, function (event) {
          return end(event);
        });
      }
    }
  }, {
    key: "_keydown",
    value: function _keydown(event) {
      var _event$target;

      if (((_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.tagName) && /input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;

        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;

        default:
      }
    }
  }, {
    key: "_getItemIndex",
    value: function _getItemIndex(element) {
      if (!element) {
        return -1;
      }

      this._items = element && element.parentNode ? Utils.makeArray(selector_engine.find(Selector.ITEM, element.parentNode)) : [];
      return this._items.indexOf(element);
    }
  }, {
    key: "_getItemByDirection",
    value: function _getItemByDirection(direction, activeElement) {
      if (this._items === null) {
        throw new Error("No items found!");
      }

      var isNextDirection = direction === Direction.NEXT;
      var isPrevDirection = direction === Direction.PREV;

      var activeIndex = this._getItemIndex(activeElement);

      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === Direction.PREV ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;
      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    }
  }, {
    key: "_triggerSlideEvent",
    value: function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var targetIndex = this._getItemIndex(relatedTarget);

      var fromIndex = this._getItemIndex(selector_engine.findOne(Selector.ACTIVE_ITEM, this._element) || null);

      return event_handler.trigger(this._element, Event.SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName,
        from: fromIndex,
        to: targetIndex
      });
    }
  }, {
    key: "_setActiveIndicatorElement",
    value: function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        var indicators = selector_engine.find(Selector.ACTIVE, this._indicatorsElement);

        for (var i = 0; i < indicators.length; i++) {
          indicators[i].classList.remove(ClassName.ACTIVE);
        }

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          nextIndicator.classList.add(ClassName.ACTIVE);
        }
      }
    }
  }, {
    key: "_slide",
    value: function _slide(direction, element) {
      var _this4 = this;

      var activeElement = selector_engine.findOne(Selector.ACTIVE_ITEM, this._element);

      var activeElementIndex = this._getItemIndex(activeElement);

      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      if (!nextElement) {
        throw new Error("Next element not found!");
      }

      var nextElementIndex = this._getItemIndex(nextElement);

      var isCycling = Boolean(this._interval);
      var directionalClassName;
      var orderClassName;
      var eventDirectionName;

      if (direction === Direction.NEXT) {
        directionalClassName = ClassName.LEFT;
        orderClassName = ClassName.NEXT;
        eventDirectionName = Direction.LEFT;
      } else {
        directionalClassName = ClassName.RIGHT;
        orderClassName = ClassName.PREV;
        eventDirectionName = Direction.RIGHT;
      }

      if (nextElement && nextElement.classList.contains(ClassName.ACTIVE)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

      if (slideEvent.defaultPrevented) {
        return;
      }

      if (!activeElement || !nextElement) {
        // Some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      if (this._element.classList.contains(ClassName.SLIDE)) {
        nextElement.classList.add(orderClassName);
        Utils.reflow(nextElement);
        activeElement.classList.add(directionalClassName);
        nextElement.classList.add(directionalClassName);
        var nextElementInterval = parseInt(nextElement.getAttribute("data-interval") || "0", 10);

        if (nextElementInterval) {
          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
          this._config.interval = nextElementInterval;
        } else {
          this._config.interval = this._config.defaultInterval || this._config.interval;
        }

        var transitionDuration = Utils.getTransitionDurationFromElement(activeElement);
        event_handler.one(activeElement, TRANSITION_END, function () {
          nextElement.classList.remove(directionalClassName);
          nextElement.classList.remove(orderClassName);
          nextElement.classList.add(ClassName.ACTIVE);
          activeElement.classList.remove(ClassName.ACTIVE);
          activeElement.classList.remove(orderClassName);
          activeElement.classList.remove(directionalClassName);
          _this4._isSliding = false;
          setTimeout(function () {
            event_handler.trigger(_this4._element, Event.SLID, {
              relatedTarget: nextElement,
              direction: eventDirectionName,
              from: activeElementIndex,
              to: nextElementIndex
            });
          }, 0);
        });
        Utils.emulateTransitionEnd(activeElement, transitionDuration);
      } else {
        activeElement.classList.remove(ClassName.ACTIVE);
        nextElement.classList.add(ClassName.ACTIVE);
        this._isSliding = false;
        event_handler.trigger(this._element, Event.SLID, {
          relatedTarget: nextElement,
          direction: eventDirectionName,
          from: activeElementIndex,
          to: nextElementIndex
        });
      }

      if (isCycling) {
        this.cycle();
      }
    }
  }], [{
    key: "Default",
    get: function get() {
      return Default;
    }
  }]);

  return CarouselService;
}();

/* harmony default export */ const carousel_service = (CarouselService);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(9948);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/collapse.service.ts





function collapse_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function collapse_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { collapse_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { collapse_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.3.1): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */





/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
var collapse_service_NAME = "collapse";
var VERSION = "4.3.1";
var collapse_service_DATA_KEY = "bs.collapse";
var collapse_service_EVENT_KEY = ".".concat(collapse_service_DATA_KEY);
var collapse_service_Default = {
  toggle: true,
  parent: ""
};
var collapse_service_DefaultType = {
  toggle: "boolean",
  parent: "(string|element)"
};
var EVENT_SHOW = "show".concat(collapse_service_EVENT_KEY);
var EVENT_SHOWN = "shown".concat(collapse_service_EVENT_KEY);
var EVENT_HIDE = "hide".concat(collapse_service_EVENT_KEY);
var EVENT_HIDDEN = "hidden".concat(collapse_service_EVENT_KEY);
var CLASS_NAME_SHOW = "show";
var CLASS_NAME_COLLAPSE = "collapse";
var CLASS_NAME_COLLAPSING = "collapsing";
var CLASS_NAME_COLLAPSED = "collapsed";
var WIDTH = "width";
var HEIGHT = "height";
var SELECTOR_ACTIVES = ".show, .collapsing"; // export const SELECTOR_DATA_TOGGLE = '[data-toggle="collapse"]'

/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var CollapseService = /*#__PURE__*/function () {
  function CollapseService(element, triggerList) {
    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    classCallCheck_default()(this, CollapseService);

    defineProperty_default()(this, "_isTransitioning", void 0);

    defineProperty_default()(this, "_element", null);

    defineProperty_default()(this, "_config", void 0);

    defineProperty_default()(this, "_triggerArray", null);

    defineProperty_default()(this, "_selector", null);

    defineProperty_default()(this, "_parent", null);

    this._isTransitioning = false;
    this._element = element;
    this._config = this._getConfig(config);
    this._triggerArray = Array.from(triggerList); // this._triggerArray = Array.from(SelectorEngine.find(
    //   `${SELECTOR_DATA_TOGGLE}[href="#${element.id}"],` +
    //   `${SELECTOR_DATA_TOGGLE}[data-target="#${element.id}"]`
    // )) as HTMLElement[];
    // const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE) as NodeListOf<HTMLElement>;
    // for (let i = 0, len = toggleList.length; i < len; i++) {
    //   const elem = toggleList[i]
    //   const selector = Utils.getSelectorFromElement(elem)
    //   const filterElement = !selector ? [] : Array.from(SelectorEngine.find(selector))
    //     .filter(foundElem => foundElem === element)
    //   if (selector !== null && filterElement.length) {
    //     this._selector = selector
    //     // this._triggerArray.push(elem)
    //   }
    // }

    this._parent = this._config.parent ? this._getParent() : null;

    if (!this._config.parent) {
      this._addAriaAndCollapsedClass(this._element, this._triggerArray); // this._addAriaAndCollapsedClass(this._element, [])

    }

    if (this._config.toggle) {
      this.toggle();
    }

    dom_data.setData(element, collapse_service_DATA_KEY, this);
  } // Getters


  createClass_default()(CollapseService, [{
    key: "isExpanded",
    // Public
    value: function isExpanded() {
      var _this$_element;

      return !!((_this$_element = this._element) === null || _this$_element === void 0 ? void 0 : _this$_element.classList.contains(CLASS_NAME_SHOW));
    }
  }, {
    key: "isCollapsed",
    value: function isCollapsed() {
      return !this.isExpanded();
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.isExpanded()) {
        this.hide();
      } else {
        this.show();
      }
    }
  }, {
    key: "show",
    value: function show() {
      var _this = this,
          _this$_triggerArray;

      if (!this._element) {
        console.warn("this._element not set!");
        return;
      }

      if (this._isTransitioning || this._element.classList.contains(CLASS_NAME_SHOW)) {
        return;
      }

      var actives = null;
      var activesData;

      if (this._parent) {
        actives = Array.from(selector_engine.find(SELECTOR_ACTIVES, this._parent)).filter(function (elem) {
          if (typeof _this._config.parent === "string") {
            return elem.getAttribute("data-parent") === _this._config.parent;
          }

          return elem.classList.contains(CLASS_NAME_COLLAPSE);
        });

        if (actives.length === 0) {
          actives = null;
        }
      }

      var container = this._selector ? selector_engine.findOne(this._selector) : null;

      if (actives) {
        var tempActiveData = actives.filter(function (elem) {
          return container !== elem;
        });
        activesData = tempActiveData[0] ? dom_data.getData(tempActiveData[0], collapse_service_DATA_KEY) : null;

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = event_handler.trigger(this._element, EVENT_SHOW);

      if (startEvent.defaultPrevented) {
        return;
      }

      if (actives) {
        actives.forEach(function (elemActive) {
          if (container !== elemActive) {
            CollapseService.collapseInterface(elemActive, "hide");
          }

          if (!activesData) {
            dom_data.setData(elemActive, collapse_service_DATA_KEY, null);
          }
        });
      }

      var dimension = this._getDimension();

      this._element.classList.remove(CLASS_NAME_COLLAPSE);

      this._element.classList.add(CLASS_NAME_COLLAPSING);

      this._element.style[dimension] = "0";

      if ((_this$_triggerArray = this._triggerArray) === null || _this$_triggerArray === void 0 ? void 0 : _this$_triggerArray.length) {
        this._triggerArray.forEach(function (element) {
          element.classList.remove(CLASS_NAME_COLLAPSED);
          element.setAttribute("aria-expanded", "true");
        });
      }

      this.setTransitioning(true);

      var complete = function complete() {
        if (!_this._element) {
          console.warn("this._element not set!");
          return;
        }

        _this._element.classList.remove(CLASS_NAME_COLLAPSING);

        _this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);

        _this._element.style[dimension] = "";

        _this.setTransitioning(false);

        event_handler.trigger(_this._element, EVENT_SHOWN);
      };

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll".concat(capitalizedDimension);
      var transitionDuration = Utils.getTransitionDurationFromElement(this._element);
      event_handler.one(this._element, TRANSITION_END, complete);
      Utils.emulateTransitionEnd(this._element, transitionDuration);
      this._element.style[dimension] = "".concat(this._element[scrollSize], "px");

      if (!this._config.parent && this._triggerArray) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray, true); // this._addAriaAndCollapsedClass(this._element, [])

      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this$_triggerArray2,
          _this2 = this;

      if (!this._element) {
        console.warn("this._element not set!");
        return;
      }

      if (this._isTransitioning || !this._element.classList.contains(CLASS_NAME_SHOW)) {
        return;
      }

      var startEvent = event_handler.trigger(this._element, EVENT_HIDE);

      if (startEvent.defaultPrevented) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = "".concat(this._element.getBoundingClientRect()[dimension], "px");
      Utils.reflow(this._element);

      this._element.classList.add(CLASS_NAME_COLLAPSING);

      this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW);

      var triggerArrayLength = (_this$_triggerArray2 = this._triggerArray) === null || _this$_triggerArray2 === void 0 ? void 0 : _this$_triggerArray2.length;

      if (triggerArrayLength && this._triggerArray && triggerArrayLength > 0) {
        for (var i = 0; i < triggerArrayLength; i++) {
          var trigger = this._triggerArray[i];
          var elem = Utils.getElementFromSelector(trigger);

          if (elem && !elem.classList.contains(CLASS_NAME_SHOW)) {
            trigger.classList.add(CLASS_NAME_COLLAPSED);
            trigger.setAttribute("aria-expanded", "false");
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        if (!_this2._element) {
          console.warn("this._element not set!");
          return;
        }

        _this2._element.classList.remove(CLASS_NAME_COLLAPSING);

        _this2._element.classList.add(CLASS_NAME_COLLAPSE);

        event_handler.trigger(_this2._element, EVENT_HIDDEN);
      };

      this._element.style[dimension] = "";
      var transitionDuration = Utils.getTransitionDurationFromElement(this._element);
      event_handler.one(this._element, TRANSITION_END, complete);
      Utils.emulateTransitionEnd(this._element, transitionDuration);

      if (!this._config.parent && this._triggerArray) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray, false); // this._addAriaAndCollapsedClass(this._element, [])

      }
    }
  }, {
    key: "setTransitioning",
    value: function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this._element) {
        dom_data.removeData(this._element, collapse_service_DATA_KEY);
      }

      this._config = null;
      this._parent = null;
      this._element = null; // this._triggerArray = null

      this._isTransitioning = false;
    } // Private

  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      config = collapse_service_objectSpread(collapse_service_objectSpread({}, collapse_service_Default), config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Utils.typeCheckConfig(collapse_service_NAME, config, collapse_service_DefaultType);
      return config;
    }
  }, {
    key: "_getDimension",
    value: function _getDimension() {
      var hasWidth = this._element ? this._element.classList.contains(WIDTH) : false;
      return hasWidth ? WIDTH : HEIGHT;
    }
  }, {
    key: "_getParent",
    value: function _getParent() {
      var _this3 = this;

      var parent = this._config.parent;

      if (Utils.isElement(parent)) {
        // it's a jQuery object
        if (typeof parent.jquery !== "undefined" || typeof parent[0] !== "undefined") {
          parent = parent[0];
        }
      } else {
        parent = selector_engine.findOne(parent);
      } // const selector = `${SELECTOR_DATA_TOGGLE}[data-parent="${parent}"]`


      var selector = "[data-parent=\"".concat(parent, "\"]");
      selector_engine.find(selector, parent).forEach(function (element) {
        var selected = Utils.getElementFromSelector(element);

        if (selected) {
          _this3._addAriaAndCollapsedClass(selected, [element]);
        } else {
          console.warn();
        }
      });
      return parent;
    }
  }, {
    key: "_addAriaAndCollapsedClass",
    value: function _addAriaAndCollapsedClass(element, triggerArray, isOpen) {
      // console.debug('_addAriaAndCollapsedClass', element, triggerArray);
      if (element) {
        if (typeof isOpen !== "boolean") {
          isOpen = element.classList.contains(CLASS_NAME_SHOW);
        }

        if (triggerArray.length) {
          triggerArray.forEach(function (elem) {
            if (isOpen) {
              elem.classList.remove(CLASS_NAME_COLLAPSED);
            } else {
              elem.classList.add(CLASS_NAME_COLLAPSED);
            }

            elem.setAttribute("aria-expanded", (!!isOpen).toString());
          });
        }
      }
    } // Static

  }], [{
    key: "collapseInterface",
    value: function collapseInterface(element, config) {
      var data = dom_data.getData(element, collapse_service_DATA_KEY);

      var _config = collapse_service_objectSpread(collapse_service_objectSpread(collapse_service_objectSpread({}, collapse_service_Default), element.dataset), typeof_default()(config) === "object" && config ? config : {});

      if (!data && _config.toggle && /show|hide/.test(config)) {
        _config.toggle = false;
      }

      if (!data) {
        data = new CollapseService(element, [], _config);
      }

      if (typeof config === "string") {
        if (typeof data[config] === "undefined") {
          throw new TypeError("No method named \"".concat(config, "\""));
        }

        data[config]();
      }
    }
  }, {
    key: "getInstance",
    value: function getInstance(element) {
      return dom_data.getData(element, collapse_service_DATA_KEY);
    }
  }, {
    key: "VERSION",
    get: function get() {
      return VERSION;
    }
  }, {
    key: "Default",
    get: function get() {
      return collapse_service_Default;
    }
  }]);

  return CollapseService;
}();
// EXTERNAL MODULE: ./.yarn/cache/popper.js-npm-1.16.1-a99192bd83-1.zip/node_modules/popper.js/dist/esm/popper.js
var popper = __webpack_require__(4039);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/dropdown.service.ts




function dropdown_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function dropdown_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { dropdown_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { dropdown_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

 // /dist/umd/popper


/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.3): dropdown.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * @see https://github.com/twbs/bootstrap/blob/main/js/src/dropdown.js
 * --------------------------------------------------------------------------
 */

/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

var dropdown_service_NAME = "dropdown";
var dropdown_service_VERSION = "4.1.3";
var dropdown_service_DATA_KEY = "bs.dropdown";
var dropdown_service_EVENT_KEY = ".".concat(dropdown_service_DATA_KEY);
var dropdown_service_DATA_API_KEY = ".data-api";
var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key

var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key

var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key

var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key

var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

var REGEXP_KEYDOWN = new RegExp("".concat(ARROW_UP_KEYCODE, "|").concat(ARROW_DOWN_KEYCODE, "|").concat(ESCAPE_KEYCODE));
var EVENT = {
  HIDE: "hide".concat(dropdown_service_EVENT_KEY),
  HIDDEN: "hidden".concat(dropdown_service_EVENT_KEY),
  SHOW: "show".concat(dropdown_service_EVENT_KEY),
  SHOWN: "shown".concat(dropdown_service_EVENT_KEY),
  CLICK: "click".concat(dropdown_service_EVENT_KEY),
  CLICK_DATA_API: "click".concat(dropdown_service_EVENT_KEY).concat(dropdown_service_DATA_API_KEY),
  KEYDOWN_DATA_API: "keydown".concat(dropdown_service_EVENT_KEY).concat(dropdown_service_DATA_API_KEY),
  KEYUP_DATA_API: "keyup".concat(dropdown_service_EVENT_KEY).concat(dropdown_service_DATA_API_KEY)
};
var CLASSNAME = {
  DISABLED: "disabled",
  SHOW: "show",
  DROPUP: "dropup",
  DROPRIGHT: "dropright",
  DROPLEFT: "dropleft",
  MENURIGHT: "dropdown-menu-right",
  MENULEFT: "dropdown-menu-left",
  POSITION_STATIC: "position-static"
};
var SELECTOR = {
  DATA_TOGGLE: "bs4-dropdown .dropdown-toggle",
  FORM_CHILD: ".dropdown form",
  MENU: ".dropdown-menu",
  NAVBAR_NAV: ".navbar-nav",
  VISIBLE_ITEMS: ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)"
};
var ATTACHMENTMAP = {
  TOP: "top-start",
  TOPEND: "top-end",
  BOTTOM: "bottom-start",
  BOTTOMEND: "bottom-end",
  RIGHT: "right-start",
  RIGHTEND: "right-end",
  LEFT: "left-start",
  LEFTEND: "left-end"
};
var DEFAULT = {
  offset: 0,
  flip: true,
  boundary: "scrollParent",
  reference: "toggle",
  display: "dynamic"
};
var DEFAULTTYPE = {
  offset: "(number|string|function)",
  flip: "boolean",
  boundary: "(string|element)",
  reference: "(string|element)",
  display: "string"
};
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var DropdownService = /*#__PURE__*/function () {
  createClass_default()(DropdownService, null, [{
    key: "closeAll",
    // Static
    value: function closeAll() {
      var _this = this;

      var buttons = document.querySelectorAll(SELECTOR.DATA_TOGGLE);
      buttons.forEach(function (button) {
        if (button.parentElement) {
          var menu = button.parentElement.querySelector(SELECTOR.MENU + "." + CLASSNAME.SHOW) || undefined;

          if (menu) {
            return _this.close(button, menu, button);
          }
        }

        _this.close(button, button);
      });
    }
  }, {
    key: "close",
    value: function close(triggerCloseElement, menu, dropdown) {
      var relatedTarget = {
        relatedTarget: triggerCloseElement
      };

      if (menu && menu.classList.contains(CLASSNAME.SHOW)) {
        menu.classList.remove(CLASSNAME.SHOW);
      }

      if (dropdown && dropdown.classList.contains(CLASSNAME.SHOW)) {
        dropdown.classList.remove(CLASSNAME.SHOW);
        dropdown.dispatchEvent(new CustomEvent(EVENT.HIDDEN, {
          detail: relatedTarget
        }));
      }

      var parent = DropdownService._getParentFromElement(triggerCloseElement);

      if (parent && parent.classList.contains(CLASSNAME.SHOW)) {
        parent.classList.remove(CLASSNAME.SHOW);
        parent.dispatchEvent(new CustomEvent(EVENT.HIDDEN, {
          detail: relatedTarget
        }));
      }
    }
  }, {
    key: "_clearMenus",
    value: function _clearMenus() {
      return this.closeAll();
    }
  }, {
    key: "_getParentFromElement",
    value: function _getParentFromElement(element) {
      if (!element.parentElement) {
        throw new Error("Parent element not found!");
      }

      return element.parentElement;
    }
  }, {
    key: "VERSION",
    // Getters
    get: function get() {
      return dropdown_service_VERSION;
    }
  }, {
    key: "Default",
    get: function get() {
      return DEFAULT;
    }
  }, {
    key: "DefaultType",
    get: function get() {
      return DEFAULTTYPE;
    }
  }]);

  function DropdownService(elements, config) {
    classCallCheck_default()(this, DropdownService);

    defineProperty_default()(this, "_element", void 0);

    defineProperty_default()(this, "_popper", void 0);

    defineProperty_default()(this, "_config", void 0);

    defineProperty_default()(this, "_menu", void 0);

    defineProperty_default()(this, "_inNavbar", void 0);

    this._element = elements;
    this._popper = null;
    this._config = this._getConfig(config);
    this._menu = this._getMenuElement();
    this._inNavbar = this._detectNavbar();
    this.clouseOnClickOutsite(DropdownService._getParentFromElement(this._element));
  } // Public


  createClass_default()(DropdownService, [{
    key: "close",
    value: function close() {
      return DropdownService.close(this._element, this._menu);
    }
  }, {
    key: "show",
    value: function show() {
      var relatedTarget = {
        relatedTarget: this._element
      };

      var parent = DropdownService._getParentFromElement(this._element);

      if (!this._menu.classList.contains(CLASSNAME.SHOW)) {
        this._menu.classList.add(CLASSNAME.SHOW);
      }

      if (parent && !parent.classList.contains(CLASSNAME.SHOW)) {
        parent.classList.add(CLASSNAME.SHOW);
        parent.dispatchEvent(new CustomEvent(EVENT.SHOWN, {
          detail: relatedTarget
        }));
      }
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this._element.disabled || this._element.classList.contains(CLASSNAME.DISABLED)) {
        return;
      }

      var parent = DropdownService._getParentFromElement(this._element);

      var isActive = this._menu.classList.contains(CLASSNAME.SHOW);

      DropdownService._clearMenus();

      if (isActive) {
        this.close();
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var showEvent = new CustomEvent(EVENT.SHOW, {
        detail: relatedTarget
      });

      if (parent) {
        parent.dispatchEvent(showEvent);

        if (showEvent.defaultPrevented) {
          return;
        }
      }

      this.clouseOnClickOutsite(DropdownService._getParentFromElement(this._element)); // Disable totally Popper.js for Dropdown in Navbar

      if (!this._inNavbar) {
        /**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */
        if (typeof popper/* default */.Z === "undefined") {
          throw new TypeError("Bootstrap dropdown require Popper.js (https://popper.js.org)");
        }

        var referenceElement = this._element;

        if (this._config.reference === "parent") {
          referenceElement = parent;
        } else if (isElement(this._config.reference)) {
          referenceElement = this._config.reference; // Check if it's jQuery element

          if (typeof this._config.reference.jquery !== "undefined") {
            referenceElement = this._config.reference[0];
          }
        } // If boundary is not `scrollParent`, then set position to `static`
        // to allow the menu to "escape" the scroll parent's boundaries
        // https://github.com/twbs/bootstrap/issues/24251


        if (parent && this._config.boundary !== "scrollParent") {
          parent.classList.add(CLASSNAME.POSITION_STATIC);
        }

        this._popper = new popper/* default */.Z(referenceElement, this._menu, this._getPopperConfig());
      }

      this.clouseOnClickOutsite(DropdownService._getParentFromElement(this._element));

      this._element.focus();

      this._element.setAttribute("aria-expanded", "true");

      if (this._menu.classList.contains(CLASSNAME.SHOW)) {
        this._menu.classList.remove(CLASSNAME.SHOW);
      } else {
        this._menu.classList.add(CLASSNAME.SHOW);
      }

      this._menu.dispatchEvent(new CustomEvent(EVENT.SHOWN, {
        detail: relatedTarget
      }));
    }
  }, {
    key: "dispose",
    value: function dispose() {
      this._element.removeAttribute("data-" + dropdown_service_DATA_KEY); // delete this._element;
      // delete this._menu;


      if (this._popper !== null) {
        this._popper.destroy();

        this._popper = null;
      }
    }
  }, {
    key: "update",
    value: function update() {
      this._inNavbar = this._detectNavbar();

      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Private

  }, {
    key: "outsideClickListener",
    value: function outsideClickListener(element, event) {
      var target = event.target || event.srcElement || event.currentTarget;

      if (target && !element.contains(target)) {
        this.close();
        document.removeEventListener("click", this.outsideClickListener.bind(this, element));
      }
    }
    /**
     * @see https://stackoverflow.com/questions/152975/how-do-i-detect-a-click-outside-an-element
     * @param selector
     */

  }, {
    key: "clouseOnClickOutsite",
    value: function clouseOnClickOutsite(element) {
      document.addEventListener("click", this.outsideClickListener.bind(this, element));
    }
  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      config = dropdown_service_objectSpread(dropdown_service_objectSpread(dropdown_service_objectSpread({}, DropdownService.Default), this._element.dataset), config);
      typeCheckConfig(dropdown_service_NAME, config, DropdownService.DefaultType);
      return config;
    }
  }, {
    key: "_getMenuElement",
    value: function _getMenuElement() {
      if (!this._menu) {
        var parent = DropdownService._getParentFromElement(this._element);

        if (parent) {
          var menu = parent.querySelector(SELECTOR.MENU);

          if (!menu) {
            throw new Error("Menu not found!");
          }

          this._menu = menu;
        }
      }

      return this._menu;
    }
  }, {
    key: "_getPlacement",
    value: function _getPlacement() {
      var parentDropdown = this._element.parentElement;
      var placement = ATTACHMENTMAP.BOTTOM;

      if (!parentDropdown) {
        throw new Error("Parent of element not found!");
      } // Handle dropup


      if (parentDropdown.classList.contains(CLASSNAME.DROPUP)) {
        placement = ATTACHMENTMAP.TOP;

        if (this._menu.classList.contains(CLASSNAME.MENURIGHT)) {
          placement = ATTACHMENTMAP.TOPEND;
        }
      } else if (parentDropdown.classList.contains(CLASSNAME.DROPRIGHT)) {
        placement = ATTACHMENTMAP.RIGHT;
      } else if (parentDropdown.classList.contains(CLASSNAME.DROPLEFT)) {
        placement = ATTACHMENTMAP.LEFT;
      } else if (this._menu.classList.contains(CLASSNAME.MENURIGHT)) {
        placement = ATTACHMENTMAP.BOTTOMEND;
      }

      return placement;
    }
  }, {
    key: "_detectNavbar",
    value: function _detectNavbar() {
      return this._element.closest && this._element.closest(".navbar") !== null;
    }
  }, {
    key: "_getPopperConfig",
    value: function _getPopperConfig() {
      var _this2 = this;

      var offsetConf = {};

      if (typeof this._config.offset === "function") {
        offsetConf.fn = function (data) {
          data.offsets = dropdown_service_objectSpread(dropdown_service_objectSpread({}, data.offsets), _this2._config.offset(data.offsets) || {});
          return data;
        };
      } else {
        offsetConf.offset = this._config.offset;
      }

      var popperConfig = {
        placement: this._getPlacement(),
        modifiers: {
          offset: offsetConf,
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        }
      }; // Disable Popper.js if we have a static display

      if (this._config.display === "static") {
        popperConfig.modifiers.applyStyle = {
          enabled: false
        };
      }

      return popperConfig;
    }
  }]);

  return DropdownService;
}();
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/modal.service.ts




function modal_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function modal_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { modal_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { modal_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// Fork of https://github.com/twbs/bootstrap/blob/main/js/src/modal.js

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */


 // import Manipulator from "./dom/manipulator";



/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
var modal_service_NAME = "modal";
var modal_service_VERSION = "5.0.0-alpha1";
var modal_service_DATA_KEY = "bs.modal";
var modal_service_EVENT_KEY = ".".concat(modal_service_DATA_KEY);
var ESCAPE_KEY = "Escape";
var modal_service_Default = {
  backdrop: true,
  keyboard: true,
  focus: true,
  show: true
};
var modal_service_DefaultType = {
  backdrop: "(boolean|string)",
  keyboard: "boolean",
  focus: "boolean",
  show: "boolean"
};
var modal_service_EVENT_HIDE = "hide".concat(modal_service_EVENT_KEY);
var EVENT_HIDE_PREVENTED = "hidePrevented".concat(modal_service_EVENT_KEY);
var modal_service_EVENT_HIDDEN = "hidden".concat(modal_service_EVENT_KEY);
var modal_service_EVENT_SHOW = "show".concat(modal_service_EVENT_KEY);
var modal_service_EVENT_SHOWN = "shown".concat(modal_service_EVENT_KEY);
var EVENT_FOCUSIN = "focusin".concat(modal_service_EVENT_KEY);
var EVENT_RESIZE = "resize".concat(modal_service_EVENT_KEY);
var EVENT_CLICK_DISMISS = "click.dismiss".concat(modal_service_EVENT_KEY);
var EVENT_KEYDOWN_DISMISS = "keydown.dismiss".concat(modal_service_EVENT_KEY);
var EVENT_MOUSEUP_DISMISS = "mouseup.dismiss".concat(modal_service_EVENT_KEY);
var EVENT_MOUSEDOWN_DISMISS = "mousedown.dismiss".concat(modal_service_EVENT_KEY);
var CLASS_NAME_SCROLLBAR_MEASURER = "modal-scrollbar-measure";
var CLASS_NAME_BACKDROP = "modal-backdrop";
var CLASS_NAME_OPEN = "modal-open";
var CLASS_NAME_FADE = "fade";
var modal_service_CLASS_NAME_SHOW = "show";
var CLASS_NAME_STATIC = "modal-static";
var SELECTOR_DIALOG = ".modal-dialog";
var SELECTOR_MODAL_BODY = ".modal-body";
var SELECTOR_FIXED_CONTENT = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top";
var SELECTOR_STICKY_CONTENT = ".sticky-top";
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var ModalService = /*#__PURE__*/function () {
  function ModalService(element, config) {
    classCallCheck_default()(this, ModalService);

    defineProperty_default()(this, "_config", void 0);

    defineProperty_default()(this, "_element", void 0);

    defineProperty_default()(this, "_dialog", void 0);

    defineProperty_default()(this, "_backdrop", void 0);

    defineProperty_default()(this, "_isShown", void 0);

    defineProperty_default()(this, "_isBodyOverflowing", void 0);

    defineProperty_default()(this, "_ignoreBackdropClick", void 0);

    defineProperty_default()(this, "_isTransitioning", void 0);

    defineProperty_default()(this, "_scrollbarWidth", void 0);

    this._config = this._getConfig(config);
    this._element = element;
    this._dialog = selector_engine.findOne(SELECTOR_DIALOG, element);
    this._backdrop = null;
    this._isShown = false;
    this._isBodyOverflowing = false;
    this._ignoreBackdropClick = false;
    this._isTransitioning = false;
    this._scrollbarWidth = 0;
    dom_data.setData(element, modal_service_DATA_KEY, this);
  } // Getters


  createClass_default()(ModalService, [{
    key: "toggle",
    // Public
    value: function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    }
  }, {
    key: "show",
    value: function show(relatedTarget) {
      var _this = this;

      if (this._isShown || this._isTransitioning) {
        return;
      }

      if (this._element.classList.contains(CLASS_NAME_FADE)) {
        this._isTransitioning = true;
      }

      var showEvent = event_handler.trigger(this._element, modal_service_EVENT_SHOW, {
        relatedTarget: relatedTarget
      });

      if (this._isShown || showEvent.defaultPrevented) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();

      this._setScrollbar();

      this._adjustDialog();

      this._setEscapeEvent();

      this._setResizeEvent();

      event_handler.on(this._element, EVENT_CLICK_DISMISS, // SELECTOR_DATA_DISMISS,
      function (event) {
        return _this.hide(event);
      });

      if (this._dialog) {
        event_handler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, function () {
          event_handler.one(_this._element, EVENT_MOUSEUP_DISMISS, function (event) {
            if (event.target === _this._element) {
              _this._ignoreBackdropClick = true;
            }
          });
        });
      }

      this._showBackdrop(function () {
        return _this._showElement(relatedTarget);
      });
    }
  }, {
    key: "hide",
    value: function hide(event) {
      var _this2 = this;

      if (event) {
        event.preventDefault();
      }

      if (!this._isShown || this._isTransitioning) {
        return;
      }

      var hideEvent = event_handler.trigger(this._element, modal_service_EVENT_HIDE);

      if (hideEvent.defaultPrevented) {
        return;
      }

      this._isShown = false;

      var transition = this._element.classList.contains(CLASS_NAME_FADE);

      if (transition) {
        this._isTransitioning = true;
      }

      this._setEscapeEvent();

      this._setResizeEvent(); // EventHandler.off(document, EVENT_FOCUSIN); TODO


      this._element.classList.remove(modal_service_CLASS_NAME_SHOW); // EventHandler.off(this._element, EVENT_CLICK_DISMISS); TODO
      // EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS); TODO


      if (transition) {
        var transitionDuration = Utils.getTransitionDurationFromElement(this._element);
        event_handler.one(this._element, TRANSITION_END, function () {
          return (
            /*event*/
            _this2._hideModal()
          );
        });
        Utils.emulateTransitionEnd(this._element, transitionDuration);
      } else {
        this._hideModal();
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      // TODO
      // [window, this._element, this._dialog].forEach((htmlElement) =>
      //   EventHandler.off(htmlElement, EVENT_KEY)
      // );

      /**
       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`
       * Do not move `document` in `htmlElements` array
       * It will remove `EVENT_CLICK_DATA_API` event that should remain
       */
      // EventHandler.off(document, EVENT_FOCUSIN); TODO
      dom_data.removeData(this._element, modal_service_DATA_KEY); // this._config = null;
      // this._element = null;
      // this._dialog = null;
      // this._backdrop = null;
      // this._isShown = null;
      // this._isBodyOverflowing = null;
      // this._ignoreBackdropClick = null;
      // this._isTransitioning = null;
      // this._scrollbarWidth = null;
    }
  }, {
    key: "handleUpdate",
    value: function handleUpdate() {
      this._adjustDialog();
    } // Private

  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      config = modal_service_objectSpread(modal_service_objectSpread({}, modal_service_Default), config);
      Utils.typeCheckConfig(modal_service_NAME, config, modal_service_DefaultType);
      return config;
    }
  }, {
    key: "_showElement",
    value: function _showElement(relatedTarget) {
      var _this3 = this;

      var transition = this._element.classList.contains(CLASS_NAME_FADE);

      var modalBody = this._dialog ? selector_engine.findOne(SELECTOR_MODAL_BODY, this._dialog) : null;

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // Don't move modal's DOM position
        document.body.appendChild(this._element);
      }

      this._element.style.display = "block";

      this._element.removeAttribute("aria-hidden");

      this._element.setAttribute("aria-modal", "true");

      this._element.setAttribute("role", "dialog");

      this._element.scrollTop = 0;

      if (modalBody) {
        modalBody.scrollTop = 0;
      }

      if (transition) {
        Utils.reflow(this._element);
      }

      this._element.classList.add(modal_service_CLASS_NAME_SHOW);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var transitionComplete = function transitionComplete() {
        if (_this3._config.focus) {
          _this3._element.focus();
        }

        _this3._isTransitioning = false;
        event_handler.trigger(_this3._element, modal_service_EVENT_SHOWN, {
          relatedTarget: relatedTarget
        });
      };

      if (transition) {
        if (!this._dialog) {
          console.warn("Dialog element not found!");
          return;
        }

        var transitionDuration = Utils.getTransitionDurationFromElement(this._dialog);
        event_handler.one(this._dialog, TRANSITION_END, transitionComplete);
        Utils.emulateTransitionEnd(this._dialog, transitionDuration);
      } else {
        transitionComplete();
      }
    }
  }, {
    key: "_enforceFocus",
    value: function _enforceFocus() {
      var _this4 = this;

      var onFocusIn = function onFocusIn(event) {
        if (event.target && document !== event.target && _this4._element !== event.target && !_this4._element.contains(event.target)) {
          _this4._element.focus();
        }
      };

      event_handler.off(document, EVENT_FOCUSIN, onFocusIn); // guard against infinite focus loou

      event_handler.on(document, EVENT_FOCUSIN, onFocusIn);
    }
  }, {
    key: "_setEscapeEvent",
    value: function _setEscapeEvent() {
      var _this5 = this;

      var onEscapeEvent = function onEscapeEvent(event) {
        if (_this5._config.keyboard && event.key === ESCAPE_KEY) {
          event.preventDefault();

          _this5.hide();
        } else if (!_this5._config.keyboard && event.key === ESCAPE_KEY) {
          _this5._triggerBackdropTransition();
        }
      };

      if (this._isShown) {
        event_handler.on(this._element, EVENT_KEYDOWN_DISMISS, onEscapeEvent);
      } else {
        event_handler.off(this._element, EVENT_KEYDOWN_DISMISS, onEscapeEvent);
      }
    }
  }, {
    key: "_setResizeEvent",
    value: function _setResizeEvent() {
      var _this6 = this;

      var onResizeEvent = function onResizeEvent() {
        return _this6._adjustDialog();
      };

      if (this._isShown) {
        event_handler.on(window, EVENT_RESIZE, onResizeEvent);
      } else {
        event_handler.off(window, EVENT_RESIZE, onResizeEvent);
      }
    }
  }, {
    key: "_hideModal",
    value: function _hideModal()
    /*event?: Event*/
    {
      var _this7 = this;

      this._element.style.display = "none";

      this._element.setAttribute("aria-hidden", "true");

      this._element.removeAttribute("aria-modal");

      this._element.removeAttribute("role");

      this._isTransitioning = false;

      this._showBackdrop(function () {
        document.body.classList.remove(CLASS_NAME_OPEN);

        _this7._resetAdjustments();

        _this7._resetScrollbar();

        event_handler.trigger(_this7._element, modal_service_EVENT_HIDDEN);
      });
    }
  }, {
    key: "_removeBackdrop",
    value: function _removeBackdrop() {
      var _this$_backdrop, _this$_backdrop$paren;

      (_this$_backdrop = this._backdrop) === null || _this$_backdrop === void 0 ? void 0 : (_this$_backdrop$paren = _this$_backdrop.parentNode) === null || _this$_backdrop$paren === void 0 ? void 0 : _this$_backdrop$paren.removeChild(this._backdrop);
      this._backdrop = null;
    }
  }, {
    key: "_showBackdrop",
    value: function _showBackdrop(callback) {
      var _this8 = this;

      var animate = this._element.classList.contains(CLASS_NAME_FADE) ? CLASS_NAME_FADE : "";

      if (this._isShown && this._config.backdrop) {
        this._backdrop = document.createElement("div");
        this._backdrop.className = CLASS_NAME_BACKDROP;

        if (animate) {
          this._backdrop.classList.add(animate);
        }

        document.body.appendChild(this._backdrop);
        event_handler.on(this._element, EVENT_CLICK_DISMISS, function (event) {
          if (_this8._ignoreBackdropClick) {
            _this8._ignoreBackdropClick = false;
            return;
          }

          if (event.target !== event.currentTarget) {
            return;
          }

          _this8._triggerBackdropTransition();
        });

        if (animate) {
          Utils.reflow(this._backdrop);
        }

        this._backdrop.classList.add(modal_service_CLASS_NAME_SHOW);

        if (!animate) {
          callback();
          return;
        }

        var backdropTransitionDuration = Utils.getTransitionDurationFromElement(this._backdrop);
        event_handler.one(this._backdrop, TRANSITION_END, callback);
        Utils.emulateTransitionEnd(this._backdrop, backdropTransitionDuration);
      } else if (!this._isShown && this._backdrop) {
        this._backdrop.classList.remove(modal_service_CLASS_NAME_SHOW);

        var callbackRemove = function callbackRemove() {
          _this8._removeBackdrop();

          callback();
        };

        if (this._element.classList.contains(CLASS_NAME_FADE)) {
          var _backdropTransitionDuration = Utils.getTransitionDurationFromElement(this._backdrop);

          event_handler.one(this._backdrop, TRANSITION_END, callbackRemove);
          Utils.emulateTransitionEnd(this._backdrop, _backdropTransitionDuration);
        } else {
          callbackRemove();
        }
      } else {
        callback();
      }
    }
  }, {
    key: "_triggerBackdropTransition",
    value: function _triggerBackdropTransition() {
      var _this9 = this;

      if (this._config.backdrop === "static") {
        if (!this._dialog) {
          console.error("Dialog element not found!");
          return;
        }

        var hideEvent = event_handler.trigger(this._element, EVENT_HIDE_PREVENTED);

        if (hideEvent.defaultPrevented) {
          return;
        }

        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

        if (!isModalOverflowing) {
          this._element.style.overflowY = "hidden";
        }

        this._element.classList.add(CLASS_NAME_STATIC);

        var modalTransitionDuration = Utils.getTransitionDurationFromElement(this._dialog);

        var onTransitionEnd = function onTransitionEnd() {
          _this9._element.classList.remove(CLASS_NAME_STATIC);

          if (!isModalOverflowing) {
            event_handler.one(_this9._element, TRANSITION_END, function () {
              _this9._element.style.overflowY = "";
            });
            Utils.emulateTransitionEnd(_this9._element, modalTransitionDuration);
          }
        };

        event_handler.off(this._element, TRANSITION_END, onTransitionEnd);
        event_handler.one(this._element, TRANSITION_END, onTransitionEnd);
        Utils.emulateTransitionEnd(this._element, modalTransitionDuration);

        this._element.focus();
      } else {
        this.hide();
      }
    } // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // ----------------------------------------------------------------------

  }, {
    key: "_adjustDialog",
    value: function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = "".concat(this._scrollbarWidth, "px");
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = "".concat(this._scrollbarWidth, "px");
      }
    }
  }, {
    key: "_resetAdjustments",
    value: function _resetAdjustments() {
      this._element.style.paddingLeft = "";
      this._element.style.paddingRight = "";
    }
  }, {
    key: "_checkScrollbar",
    value: function _checkScrollbar() {
      var rect = document.body.getBoundingClientRect();
      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    }
  }, {
    key: "_setScrollbar",
    value: function _setScrollbar() {
      var _this10 = this;

      if (this._isBodyOverflowing) {
        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
        // Adjust fixed content padding
        selector_engine.find(SELECTOR_FIXED_CONTENT).forEach(function (element) {
          var actualPadding = element.style.paddingRight;
          var calculatedPadding = window.getComputedStyle(element)["padding-right"]; // Manipulator.setDataAttribute(element, "padding-right", actualPadding);

          element.dataset.paddingRight = actualPadding;
          element.style.paddingRight = "".concat(parseFloat(calculatedPadding) + _this10._scrollbarWidth, "px");
        }); // Adjust sticky content margin

        selector_engine.find(SELECTOR_STICKY_CONTENT).forEach(function (element) {
          var actualMargin = element.style.marginRight;
          var calculatedMargin = window.getComputedStyle(element)["margin-right"]; // Manipulator.setDataAttribute(element, "margin-right", actualMargin);

          element.dataset.marginRight = actualMargin;
          element.style.marginRight = "".concat(parseFloat(calculatedMargin) - _this10._scrollbarWidth, "px");
        }); // Adjust body padding

        var actualPadding = document.body.style.paddingRight;
        var calculatedPadding = window.getComputedStyle(document.body)["padding-right"]; // Manipulator.setDataAttribute(
        //   document.body,
        //   "padding-right",
        //   actualPadding
        // );

        document.body.dataset.paddingRight = actualPadding;
        document.body.style.paddingRight = "".concat(parseFloat(calculatedPadding) + this._scrollbarWidth, "px");
      }

      document.body.classList.add(CLASS_NAME_OPEN);
    }
  }, {
    key: "_resetScrollbar",
    value: function _resetScrollbar() {
      // Restore fixed content padding
      selector_engine.find(SELECTOR_FIXED_CONTENT).forEach(function (element) {
        // const padding = Manipulator.getDataAttribute(element, "padding-right");
        var padding = element.dataset.paddingRight;

        if (typeof padding !== "undefined") {
          // Manipulator.removeDataAttribute(element, "padding-right");
          delete element.dataset.paddingRight;
          element.style.paddingRight = padding;
        }
      }); // Restore sticky content and navbar-toggler margin

      selector_engine.find("".concat(SELECTOR_STICKY_CONTENT)).forEach(function (element) {
        // const margin = Manipulator.getDataAttribute(element, "margin-right");
        var margin = element.dataset.marginRight;

        if (typeof margin !== "undefined") {
          // Manipulator.removeDataAttribute(element, "margin-right");
          delete element.dataset.marginRight;
          element.style.marginRight = margin;
        }
      }); // Restore body padding
      // const padding = Manipulator.getDataAttribute(
      //   document.body,
      //   "padding-right"
      // );

      var padding = document.body.dataset.paddingRight;

      if (typeof padding === "undefined") {
        document.body.style.paddingRight = "";
      } else {
        // Manipulator.removeDataAttribute(document.body, "padding-right");
        delete document.body.dataset.paddingRight;
        document.body.style.paddingRight = padding;
      }
    }
  }, {
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement("div");
      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    } // Static

  }], [{
    key: "getInstance",
    value: function getInstance(element) {
      return dom_data.getData(element, modal_service_DATA_KEY);
    }
  }, {
    key: "VERSION",
    get: function get() {
      return modal_service_VERSION;
    }
  }, {
    key: "Default",
    get: function get() {
      return modal_service_Default;
    }
  }]);

  return ModalService;
}();
/* harmony default export */ const modal_service = ((/* unused pure expression or super */ null && (ModalService)));
// EXTERNAL MODULE: ../../riba/packages/utils/src/index.ts
var utils_src = __webpack_require__(332);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/sanitizer.ts
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): util/sanitizer.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * @see https://github.com/twbs/bootstrap/blob/main/js/src/util/sanitizer.js
 * --------------------------------------------------------------------------
 */
var uriAttrs = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"];
var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
 */

var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;
/**
 * A pattern that matches safe data URLs. Only matches image, video and audio types.
 *
 * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
 */

var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i; // TODO check type

var allowedAttribute = function allowedAttribute(attr, allowedAttributeList) {
  var attrName = attr.nodeName.toLowerCase();

  if (allowedAttributeList.indexOf(attrName) !== -1) {
    if (uriAttrs.indexOf(attrName) !== -1) {
      var _attr$nodeValue, _attr$nodeValue2;

      return Boolean(((_attr$nodeValue = attr.nodeValue) === null || _attr$nodeValue === void 0 ? void 0 : _attr$nodeValue.match(SAFE_URL_PATTERN)) || ((_attr$nodeValue2 = attr.nodeValue) === null || _attr$nodeValue2 === void 0 ? void 0 : _attr$nodeValue2.match(DATA_URL_PATTERN)));
    }

    return true;
  }

  var regExp = allowedAttributeList.filter(function (attrRegex) {
    return attrRegex instanceof RegExp;
  }); // Check if a regular expression validates the attribute.

  for (var i = 0, len = regExp.length; i < len; i++) {
    if (attrName.match(regExp[i])) {
      return true;
    }
  }

  return false;
};
var DefaultAllowlist = {
  // Global attributes allowed on any supplied element below.
  "*": ["class", "dir", "id", "lang", "role", ARIA_ATTRIBUTE_PATTERN],
  a: ["target", "href", "title", "rel"],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ["src", "srcset", "alt", "title", "width", "height"],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
};
function sanitizeHtml(unsafeHtml, allowList, sanitizeFn) {
  if (!unsafeHtml.length) {
    return unsafeHtml;
  }

  if (sanitizeFn && typeof sanitizeFn === "function") {
    return sanitizeFn(unsafeHtml);
  }

  var domParser = new window.DOMParser();
  var createdDocument = domParser.parseFromString(unsafeHtml, "text/html");
  var allowlistKeys = Object.keys(allowList); // const elements = [].concat(...createdDocument.body.querySelectorAll("*"));

  var elements = Array.from(createdDocument.body.querySelectorAll("*"));

  var _loop = function _loop(i, len) {
    var el = elements[i];
    var elName = el.nodeName.toLowerCase();

    if (allowlistKeys.indexOf(elName) === -1) {
      var _el$parentNode;

      el === null || el === void 0 ? void 0 : (_el$parentNode = el.parentNode) === null || _el$parentNode === void 0 ? void 0 : _el$parentNode.removeChild(el);
      return "continue";
    } // const attributeList = [].concat(...el.attributes);


    var attributeList = Array.from(el.attributes); // const allowedAttributes = [].concat(
    //   allowList["*"] || [],
    //   allowList[elName] || []
    // );

    var allowedAttributes = allowList["*"] || allowList[elName] || [];
    attributeList.forEach(function (attr) {
      if (!allowedAttribute(attr, allowedAttributes)) {
        el.removeAttribute(attr.nodeName);
      }
    });
  };

  for (var i = 0, len = elements.length; i < len; i++) {
    var _ret = _loop(i, len);

    if (_ret === "continue") continue;
  }

  return createdDocument.body.innerHTML;
}
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/tooltip.service.ts





function tooltip_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function tooltip_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { tooltip_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { tooltip_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * @see https://github.com/twbs/bootstrap/blob/main/js/src/tooltip.js
 * --------------------------------------------------------------------------
 */









/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
var tooltip_service_NAME = "tooltip";
var tooltip_service_VERSION = "5.0.0-alpha1";
var tooltip_service_DATA_KEY = "bs.tooltip";
var tooltip_service_EVENT_KEY = ".".concat(tooltip_service_DATA_KEY);
var CLASS_PREFIX = "bs-tooltip";
var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)".concat(CLASS_PREFIX, "\\S+"), "g");
var DISALLOWED_ATTRIBUTES = ["sanitize", "allowList", "sanitizeFn"];
var tooltip_service_DefaultType = {
  animation: "boolean",
  template: "string",
  title: "(string|element|function)",
  trigger: "string",
  delay: "(number|object)",
  html: "boolean",
  selector: "(string|boolean|undefined)",
  placement: "(string|function)",
  offset: "(number|string|function)",
  container: "(string|element|boolean|undefined)",
  fallbackPlacement: "(string|array)",
  boundary: "(string|element)",
  sanitize: "boolean",
  sanitizeFn: "(null|function)",
  allowList: "object",
  popperConfig: "(null|object)"
};
var AttachmentMap = {
  AUTO: "auto",
  TOP: "top",
  RIGHT: "right",
  BOTTOM: "bottom",
  LEFT: "left"
};
var tooltip_service_Default = {
  animation: true,
  container: undefined,
  delay: 0,
  html: false,
  placement: "top",
  selector: undefined,
  template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-arrow arrow"></div>' + '<div class="tooltip-inner"></div></div>',
  title: "",
  trigger: "hover focus",
  offset: 0,
  fallbackPlacement: "flip",
  boundary: "scrollParent",
  sanitize: true,
  sanitizeFn: null,
  allowList: DefaultAllowlist,
  popperConfig: null
};
var tooltip_service_Event = {
  HIDE: "hide".concat(tooltip_service_EVENT_KEY),
  HIDDEN: "hidden".concat(tooltip_service_EVENT_KEY),
  SHOW: "show".concat(tooltip_service_EVENT_KEY),
  SHOWN: "shown".concat(tooltip_service_EVENT_KEY),
  INSERTED: "inserted".concat(tooltip_service_EVENT_KEY),
  CLICK: "click".concat(tooltip_service_EVENT_KEY),
  FOCUSIN: "focusin".concat(tooltip_service_EVENT_KEY),
  FOCUSOUT: "focusout".concat(tooltip_service_EVENT_KEY),
  MOUSEENTER: "mouseenter".concat(tooltip_service_EVENT_KEY),
  MOUSELEAVE: "mouseleave".concat(tooltip_service_EVENT_KEY)
};
var tooltip_service_CLASS_NAME_FADE = "fade";
var CLASS_NAME_MODAL = "modal";
var tooltip_service_CLASS_NAME_SHOW = "show";
var HOVER_STATE_SHOW = "show";
var HOVER_STATE_OUT = "out";
var SELECTOR_TOOLTIP_INNER = ".tooltip-inner";
var TRIGGER_HOVER = "hover";
var TRIGGER_FOCUS = "focus";
var TRIGGER_CLICK = "click";
var TRIGGER_MANUAL = "manual";
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var TooltipService = /*#__PURE__*/function () {
  function TooltipService(element, config) {
    classCallCheck_default()(this, TooltipService);

    defineProperty_default()(this, "_isEnabled", true);

    defineProperty_default()(this, "_timeout", 0);

    defineProperty_default()(this, "_hoverState", "");

    defineProperty_default()(this, "_activeTrigger", {});

    defineProperty_default()(this, "_popper", null);

    defineProperty_default()(this, "element", void 0);

    defineProperty_default()(this, "config", void 0);

    defineProperty_default()(this, "tip", null);

    if (typeof popper/* default */.Z === "undefined") {
      throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org)");
    }

    this.element = element;
    this.config = this._getConfig(config);

    this._setListeners();

    dom_data.setData(element, TooltipService.DATA_KEY, this);
  } // Getters


  createClass_default()(TooltipService, [{
    key: "enable",
    // Public
    value: function enable() {
      this._isEnabled = true;
    }
  }, {
    key: "disable",
    value: function disable() {
      this._isEnabled = false;
    }
  }, {
    key: "toggleEnabled",
    value: function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    }
  }, {
    key: "toggle",
    value: function toggle(event) {
      if (!this._isEnabled) {
        return;
      }

      if (event) {
        var dataKey = TooltipService.DATA_KEY;
        var element = (0,utils_src.getElementFromEvent)(event);
        var context = dom_data.getData(element, dataKey);

        if (!context) {
          context = new TooltipService(element, this._getDelegateConfig());
          dom_data.setData(element, dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {
        if (this.getTipElement().classList.contains(tooltip_service_CLASS_NAME_SHOW)) {
          this._leave(undefined, this);

          return;
        }

        this._enter(undefined, this);
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      clearTimeout(this._timeout);
      dom_data.removeData(this.element, TooltipService.DATA_KEY); // EventHandler.off(this.element, TooltipService.EVENT_KEY);

      var modalElement = this.element.closest(".".concat(CLASS_NAME_MODAL));

      if (modalElement) {
        event_handler.off(modalElement, "hide.bs.modal", this._hideModalHandler);
      }

      if (this.tip) {
        var _this$tip$parentNode;

        (_this$tip$parentNode = this.tip.parentNode) === null || _this$tip$parentNode === void 0 ? void 0 : _this$tip$parentNode.removeChild(this.tip);
      } // this._isEnabled = null;
      // this._timeout = null;
      // this._hoverState = null;
      // this._activeTrigger = null;


      if (this._popper) {
        this._popper.destroy();
      } // this._popper = null;
      // this.element = null;
      // this.config = null;
      // this.tip = null;

    }
  }, {
    key: "show",
    value: function show() {
      var _this = this;

      if (this.element.style.display === "none") {
        throw new Error("Please use show on visible elements");
      }

      if (this.isWithContent() && this._isEnabled) {
        var _this$tip;

        var showEvent = event_handler.trigger(this.element, (0,utils_src.classOf)(this).Event.SHOW);
        var shadowRoot = findShadowRoot(this.element);
        var isInTheDom = shadowRoot === null ? this.element.ownerDocument.documentElement.contains(this.element) : shadowRoot.contains(this.element);

        if (showEvent.defaultPrevented || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = (0,utils_src.getUID)(TooltipService.NAME);
        tip.setAttribute("id", tipId);
        this.element.setAttribute("aria-describedby", tipId);
        this.setContent();

        if (this.config.animation) {
          tip.classList.add(tooltip_service_CLASS_NAME_FADE);
        }

        var placement = typeof this.config.placement === "function" ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement || undefined);

        this._addAttachmentClass(attachment);

        var container = this._getContainer();

        dom_data.setData(tip, TooltipService.DATA_KEY, this);

        if (!this.element.ownerDocument.documentElement.contains(this.tip)) {
          container === null || container === void 0 ? void 0 : container.appendChild(tip);
        }

        event_handler.trigger(this.element, (0,utils_src.classOf)(this).Event.INSERTED);
        this._popper = new popper/* default */.Z(this.element, tip, this._getPopperConfig(attachment));
        tip.classList.add(tooltip_service_CLASS_NAME_SHOW); // If this is a touch-enabled device we add extra
        // empty mouseover listeners to the body's immediate children;
        // only needed because of broken event delegation on iOS
        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

        if ("ontouchstart" in document.documentElement) {
          Array.from(document.body.children).forEach(function (element) {
            event_handler.on(element, "mouseover", noop());
          });
        }

        var complete = function complete() {
          if (_this.config.animation) {
            _this._fixTransition();
          }

          var prevHoverState = _this._hoverState;
          _this._hoverState = "";
          event_handler.trigger(_this.element, (0,utils_src.classOf)(_this).Event.SHOWN);

          if (prevHoverState === HOVER_STATE_OUT) {
            _this._leave(undefined, _this);
          }
        };

        if ((_this$tip = this.tip) === null || _this$tip === void 0 ? void 0 : _this$tip.classList.contains(tooltip_service_CLASS_NAME_FADE)) {
          var transitionDuration = getTransitionDurationFromElement(this.tip);
          event_handler.one(this.tip, TRANSITION_END, complete);
          emulateTransitionEnd(this.tip, transitionDuration);
        } else {
          complete();
        }
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this,
          _this$tip2;

      var tip = this.getTipElement();

      var complete = function complete() {
        var _this2$_popper;

        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this2._cleanTipClass();

        _this2.element.removeAttribute("aria-describedby");

        event_handler.trigger(_this2.element, (0,utils_src.classOf)(_this2).Event.HIDDEN);
        (_this2$_popper = _this2._popper) === null || _this2$_popper === void 0 ? void 0 : _this2$_popper.destroy();
      };

      var hideEvent = event_handler.trigger(this.element, (0,utils_src.classOf)(this).Event.HIDE);

      if (hideEvent.defaultPrevented) {
        return;
      }

      tip.classList.remove(tooltip_service_CLASS_NAME_SHOW); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support

      if ("ontouchstart" in document.documentElement) {
        Array.from(document.body.children).forEach(function (element) {
          return event_handler.off(element, "mouseover", noop);
        });
      }

      this._activeTrigger[TRIGGER_CLICK] = false;
      this._activeTrigger[TRIGGER_FOCUS] = false;
      this._activeTrigger[TRIGGER_HOVER] = false;

      if ((_this$tip2 = this.tip) === null || _this$tip2 === void 0 ? void 0 : _this$tip2.classList.contains(tooltip_service_CLASS_NAME_FADE)) {
        var transitionDuration = getTransitionDurationFromElement(tip);
        event_handler.one(tip, TRANSITION_END, complete);
        emulateTransitionEnd(tip, transitionDuration);
      } else {
        complete();
      }

      this._hoverState = "";
    }
  }, {
    key: "update",
    value: function update() {
      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Protected

  }, {
    key: "isWithContent",
    value: function isWithContent() {
      return Boolean(this.getTitle());
    }
  }, {
    key: "getTipElement",
    value: function getTipElement() {
      if (this.tip) {
        return this.tip;
      }

      var element = document.createElement("div");
      element.innerHTML = this.config.template;
      this.tip = element.children[0];

      if (!this.tip) {
        throw new Error("Tooltip not found!");
      }

      return this.tip;
    }
  }, {
    key: "setContent",
    value: function setContent() {
      var tip = this.getTipElement();
      this.setElementContent(findOne(SELECTOR_TOOLTIP_INNER, tip), this.getTitle());
      tip.classList.remove(tooltip_service_CLASS_NAME_FADE, tooltip_service_CLASS_NAME_SHOW);
    }
  }, {
    key: "setElementContent",
    value: function setElementContent(element, content) {
      if (element === null) {
        return;
      }

      if (typeof_default()(content) === "object" && content !== null && isElement(content)) {
        if (content.jquery) {
          content = content[0];
        }

        content = content; // content is a DOM node or a jQuery

        if (this.config.html) {
          if (content.parentNode !== element) {
            element.innerHTML = "";
            element.appendChild(content);
          }
        } else {
          element.textContent = content.textContent;
        }

        return;
      }

      content = content;

      if (this.config.html && this.config.sanitize) {
        content = sanitizeHtml(content, this.config.allowList, this.config.sanitizeFn || undefined);
      }

      element.innerHTML = content;
    }
  }, {
    key: "getTitle",
    value: function getTitle() {
      var title = this.element.getAttribute("data-original-title");

      if (!title) {
        title = typeof this.config.title === "function" ? this.config.title(this.element) : this.config.title;
      }

      return title;
    } // Private

  }, {
    key: "_getPopperConfig",
    value: function _getPopperConfig(attachment) {
      var _this3 = this;

      var defaultBsConfig = {
        placement: attachment,
        modifiers: {
          offset: this._getOffset(),
          flip: {
            behavior: this.config.fallbackPlacement
          },
          arrow: {
            element: ".".concat(TooltipService.NAME, "-arrow")
          },
          preventOverflow: {
            boundariesElement: this.config.boundary
          }
        },
        onCreate: function onCreate(data) {
          if (data.originalPlacement !== data.placement) {
            _this3._handlePopperPlacementChange(data);
          }
        },
        onUpdate: function onUpdate(data) {
          return _this3._handlePopperPlacementChange(data);
        }
      };
      return tooltip_service_objectSpread(tooltip_service_objectSpread({}, defaultBsConfig), this.config.popperConfig);
    }
  }, {
    key: "_addAttachmentClass",
    value: function _addAttachmentClass(attachment) {
      this.getTipElement().classList.add("".concat(CLASS_PREFIX, "-").concat(attachment));
    }
  }, {
    key: "_getOffset",
    value: function _getOffset() {
      var _this4 = this;

      var offset = {};

      if (this.config.offset && typeof this.config.offset === "function") {
        offset.fn = function (data) {
          data.offsets = tooltip_service_objectSpread(tooltip_service_objectSpread({}, data.offsets), _this4.config.offset(data.offsets, _this4.element) || {});
          return data;
        };
      } else {
        offset.offset = this.config.offset;
      }

      return offset;
    }
  }, {
    key: "_getContainer",
    value: function _getContainer() {
      if (!this.config.container) {
        return document.body;
      }

      if (isElement(this.config.container)) {
        return this.config.container;
      }

      if (typeof this.config.container === "string") {
        return findOne(this.config.container);
      }

      return null;
    }
  }, {
    key: "_getAttachment",
    value: function _getAttachment() {
      var placement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "AUTO";
      return AttachmentMap[placement.toUpperCase() || "BOTTOM" || "LEFT"];
    }
  }, {
    key: "_setListeners",
    value: function _setListeners() {
      var _this5 = this;

      var triggers = this.config.trigger.split(" ");
      /*
        TODO: TooltipService.Event.[...] constants replaced here with standard events.
        How are the TooltipService.Events made to work as event names in Bootstrap, and should we use the same way?
      */

      triggers.forEach(function (trigger) {
        if (trigger === "click") {
          event_handler.on(_this5.element, "click", // TooltipService.Event.CLICK,
          // this.config.selector,
          function (event) {
            return _this5.toggle(event);
          });
        } else if (trigger !== TRIGGER_MANUAL) {
          var eventIn = trigger === TRIGGER_HOVER ? "mouseover" // TooltipService.Event.MOUSEENTER
          : "focus"; // TooltipService.Event.FOCUSIN;

          var eventOut = trigger === TRIGGER_HOVER ? "mouseout" // TooltipService.Event.MOUSELEAVE
          : "blur"; // TooltipService.Event.FOCUSOUT;

          event_handler.on(_this5.element, eventIn
          /*, this.config.selector*/
          , function (event) {
            return _this5._enter(event);
          });
          event_handler.on(_this5.element, eventOut
          /*, this.config.selector*/
          , function (event) {
            return _this5._leave(event);
          });
        }
      }); // this._hideModalHandler = () => {
      //   if (this.element) {
      //     this.hide();
      //   }
      // };

      var closestModalEl = this.element.closest(".".concat(CLASS_NAME_MODAL));

      if (closestModalEl) {
        event_handler.on(closestModalEl, "hide.bs.modal", this._hideModalHandler);
      }

      if (this.config.selector) {
        this.config = tooltip_service_objectSpread(tooltip_service_objectSpread({}, this.config), {}, {
          trigger: "manual",
          selector: ""
        });
      } else {
        this._fixTitle();
      }
    }
  }, {
    key: "_hideModalHandler",
    value: function _hideModalHandler() {
      if (this.element) {
        this.hide();
      }
    }
  }, {
    key: "_fixTitle",
    value: function _fixTitle() {
      var titleType = typeof_default()(this.element.getAttribute("data-original-title"));

      if (this.element.getAttribute("title") || titleType !== "string") {
        this.element.setAttribute("data-original-title", this.element.getAttribute("title") || "");
        this.element.setAttribute("title", "");
      }
    }
  }, {
    key: "_enter",
    value: function _enter(event, context) {
      var dataKey = TooltipService.DATA_KEY;

      if (event) {
        var el = event.delegateTarget || (0,utils_src.getElementFromEvent)(event);
        context = context || dom_data.getData(el, dataKey);

        if (!context) {
          context = new TooltipService(el, this._getDelegateConfig());
          dom_data.setData(el, dataKey, context);
        }

        context._activeTrigger[event.type === "focusin" ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
      }

      if (context.getTipElement().classList.contains(tooltip_service_CLASS_NAME_SHOW) || context._hoverState === HOVER_STATE_SHOW) {
        context._hoverState = HOVER_STATE_SHOW;
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    }
  }, {
    key: "_leave",
    value: function _leave(event, context) {
      var dataKey = TooltipService.DATA_KEY;

      if (event) {
        var el = event.delegateTarget || (0,utils_src.getElementFromEvent)(event);
        context = context || dom_data.getData(el, dataKey);

        if (!context) {
          context = new TooltipService(el, this._getDelegateConfig());
          dom_data.setData(el, dataKey, context);
        }
      }

      if (event) {
        context._activeTrigger[event.type === "focusout" ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    }
  }, {
    key: "_isWithActiveTrigger",
    value: function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    }
  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      var dataAttributes = manipulator.getDataAttributes(this.element);
      Object.keys(dataAttributes).forEach(function (dataAttr) {
        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {
          delete dataAttributes[dataAttr];
        }
      });

      if (config && typeof_default()(config.container) === "object" && config.container.jquery // TODO?
      ) {
          config.container = config.container[0]; // TODO?
        }

      config = tooltip_service_objectSpread(tooltip_service_objectSpread(tooltip_service_objectSpread({}, TooltipService.Default), dataAttributes), typeof_default()(config) === "object" && config ? config : {});

      if (typeof config.delay === "number") {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      if (config.title && typeof config.title === "number") {
        config.title = config.title.toString();
      }

      if (config.content && typeof config.content === "number") {
        config.content = config.content.toString();
      }

      typeCheckConfig(tooltip_service_NAME, config, TooltipService.DefaultType);

      if (config.sanitize) {
        config.template = sanitizeHtml(config.template, config.allowList, config.sanitizeFn || undefined) || "";
      }

      return config;
    }
  }, {
    key: "_getDelegateConfig",
    value: function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var _key in this.config) {
          // TODO fix types
          if (this.config[_key] !== TooltipService.Default[_key]) {
            config[_key] = this.config[_key]; // TODO fix types
          }
        }
      }

      return config;
    }
  }, {
    key: "_cleanTipClass",
    value: function _cleanTipClass() {
      var _tip$getAttribute;

      var tip = this.getTipElement();
      var tabClass = (_tip$getAttribute = tip.getAttribute("class")) === null || _tip$getAttribute === void 0 ? void 0 : _tip$getAttribute.match(BSCLS_PREFIX_REGEX);

      if (tabClass && tabClass.length > 0) {
        tabClass.map(function (token) {
          return token.trim();
        }).forEach(function (tClass) {
          return tip.classList.remove(tClass);
        });
      }
    }
  }, {
    key: "_handlePopperPlacementChange",
    value: function _handlePopperPlacementChange(popperData) {
      this.tip = popperData.instance.popper;

      this._cleanTipClass();

      this._addAttachmentClass(this._getAttachment(popperData.placement));
    }
  }, {
    key: "_fixTransition",
    value: function _fixTransition() {
      var tip = this.getTipElement();
      var initConfigAnimation = this.config.animation;

      if (tip.getAttribute("x-placement") !== null) {
        return;
      }

      tip.classList.remove(tooltip_service_CLASS_NAME_FADE);
      this.config.animation = false;
      this.hide();
      this.show();
      this.config.animation = initConfigAnimation;
    } // Static

  }], [{
    key: "getInstance",
    value: function getInstance(element) {
      return dom_data.getData(element, tooltip_service_DATA_KEY);
    }
  }, {
    key: "VERSION",
    get: function get() {
      return tooltip_service_VERSION;
    }
  }, {
    key: "Default",
    get: function get() {
      return tooltip_service_Default;
    }
  }, {
    key: "NAME",
    get: function get() {
      return tooltip_service_NAME;
    }
  }, {
    key: "DATA_KEY",
    get: function get() {
      return tooltip_service_DATA_KEY;
    }
  }, {
    key: "Event",
    get: function get() {
      return tooltip_service_Event;
    }
  }, {
    key: "EVENT_KEY",
    get: function get() {
      return tooltip_service_EVENT_KEY;
    }
  }, {
    key: "DefaultType",
    get: function get() {
      return tooltip_service_DefaultType;
    }
  }]);

  return TooltipService;
}();

defineProperty_default()(TooltipService, "CONSTANTS", {
  NAME: tooltip_service_NAME,
  VERSION: tooltip_service_VERSION,
  DATA_KEY: tooltip_service_DATA_KEY,
  EVENT_KEY: tooltip_service_EVENT_KEY,
  CLASS_PREFIX: CLASS_PREFIX,
  BSCLS_PREFIX_REGEX: BSCLS_PREFIX_REGEX,
  DISALLOWED_ATTRIBUTES: DISALLOWED_ATTRIBUTES,
  DefaultType: tooltip_service_DefaultType,
  AttachmentMap: AttachmentMap,
  Default: tooltip_service_Default,
  Event: tooltip_service_Event,
  CLASS_NAME_FADE: tooltip_service_CLASS_NAME_FADE,
  CLASS_NAME_MODAL: CLASS_NAME_MODAL,
  CLASS_NAME_SHOW: tooltip_service_CLASS_NAME_SHOW,
  HOVER_STATE_SHOW: HOVER_STATE_SHOW,
  HOVER_STATE_OUT: HOVER_STATE_OUT,
  SELECTOR_TOOLTIP_INNER: SELECTOR_TOOLTIP_INNER,
  TRIGGER_HOVER: TRIGGER_HOVER,
  TRIGGER_FOCUS: TRIGGER_FOCUS,
  TRIGGER_CLICK: TRIGGER_CLICK,
  TRIGGER_MANUAL: TRIGGER_MANUAL
});

/* harmony default export */ const tooltip_service = ((/* unused pure expression or super */ null && (TooltipService)));
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(7857);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/popover.service.ts








function popover_service_createSuper(Derived) { var hasNativeReflectConstruct = popover_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function popover_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function popover_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function popover_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { popover_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { popover_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * @see https://github.com/twbs/bootstrap/blob/main/js/src/popover.js
 * --------------------------------------------------------------------------
 */




/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */
var popover_service_NAME = "popover";
var popover_service_VERSION = "5.0.0-alpha1";
var popover_service_DATA_KEY = "bs.popover";
var popover_service_EVENT_KEY = ".".concat(popover_service_DATA_KEY);
var popover_service_CLASS_PREFIX = "bs-popover";
var popover_service_BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)".concat(popover_service_CLASS_PREFIX, "\\S+"), "g");

var popover_service_Default = popover_service_objectSpread(popover_service_objectSpread({}, TooltipService.Default), {}, {
  placement: "right",
  trigger: "click",
  content: "",
  template: '<div class="popover" role="tooltip">' + '<div class="popover-arrow arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'
});

var popover_service_DefaultType = popover_service_objectSpread(popover_service_objectSpread({}, TooltipService.DefaultType), {}, {
  content: "(string|element|function)"
});

var popover_service_Event = {
  HIDE: "hide".concat(popover_service_EVENT_KEY),
  HIDDEN: "hidden".concat(popover_service_EVENT_KEY),
  SHOW: "show".concat(popover_service_EVENT_KEY),
  SHOWN: "shown".concat(popover_service_EVENT_KEY),
  INSERTED: "inserted".concat(popover_service_EVENT_KEY),
  CLICK: "click".concat(popover_service_EVENT_KEY),
  FOCUSIN: "focusin".concat(popover_service_EVENT_KEY),
  FOCUSOUT: "focusout".concat(popover_service_EVENT_KEY),
  MOUSEENTER: "mouseenter".concat(popover_service_EVENT_KEY),
  MOUSELEAVE: "mouseleave".concat(popover_service_EVENT_KEY)
};
var popover_service_CLASS_NAME_FADE = "fade";
var popover_service_CLASS_NAME_SHOW = "show";
var SELECTOR_TITLE = ".popover-header";
var SELECTOR_CONTENT = ".popover-body";
/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var PopoverService = /*#__PURE__*/function (_TooltipService) {
  inherits_default()(PopoverService, _TooltipService);

  var _super = popover_service_createSuper(PopoverService);

  createClass_default()(PopoverService, null, [{
    key: "VERSION",
    // Export constants defined above as static members of the service class, to avoid name collisions in the global namespace.
    // Getters
    get: function get() {
      return popover_service_VERSION;
    }
  }, {
    key: "Default",
    get: function get() {
      return popover_service_Default;
    }
  }, {
    key: "NAME",
    get: function get() {
      return popover_service_NAME;
    }
  }, {
    key: "DATA_KEY",
    get: function get() {
      return popover_service_DATA_KEY;
    }
  }, {
    key: "Event",
    get: function get() {
      return popover_service_Event;
    }
  }, {
    key: "EVENT_KEY",
    get: function get() {
      return popover_service_EVENT_KEY;
    }
  }, {
    key: "DefaultType",
    get: function get() {
      return popover_service_DefaultType;
    } // Overrides

  }]);

  function PopoverService(element, config) {
    var _this;

    classCallCheck_default()(this, PopoverService);

    _this = _super.call(this, element, config);
    element.style.backgroundColor = "#ffff00";
    return _this;
  }

  createClass_default()(PopoverService, [{
    key: "isWithContent",
    value: function isWithContent() {
      return Boolean(this.getTitle() || this._getContent());
    }
  }, {
    key: "setContent",
    value: function setContent(content) {
      var tip = this.getTipElement(); // we use append for html objects to maintain js events

      this.setElementContent(findOne(SELECTOR_TITLE, tip), this.getTitle());

      if (!content) {
        content = this._getContent();
      }

      if (typeof content === "function") {
        content = content(this.element);
      }

      if (content) {
        this.setElementContent(findOne(SELECTOR_CONTENT, tip), content);
      }

      tip.classList.remove(popover_service_CLASS_NAME_FADE, popover_service_CLASS_NAME_SHOW);
    } // Private

  }, {
    key: "_addAttachmentClass",
    value: function _addAttachmentClass(attachment) {
      this.getTipElement().classList.add("".concat(popover_service_CLASS_PREFIX, "-").concat(attachment));
    }
  }, {
    key: "_getContent",
    value: function _getContent() {
      return this.element.getAttribute("data-content") || this.config.content;
    }
  }, {
    key: "_cleanTipClass",
    value: function _cleanTipClass() {
      var _tip$getAttribute;

      var tip = this.getTipElement();
      var tabClass = tip === null || tip === void 0 ? void 0 : (_tip$getAttribute = tip.getAttribute("class")) === null || _tip$getAttribute === void 0 ? void 0 : _tip$getAttribute.match(popover_service_BSCLS_PREFIX_REGEX);

      if (tabClass && tabClass.length > 0) {
        tabClass.map(function (token) {
          return token.trim();
        }).forEach(function (tClass) {
          return tip.classList.remove(tClass);
        });
      }
    }
  }, {
    key: "_getPopperConfig",
    value: function _getPopperConfig(attachment) {
      var config = get_default()(getPrototypeOf_default()(PopoverService.prototype), "_getPopperConfig", this).call(this, attachment);

      config.modifiers.arrow.element = ".".concat(PopoverService.NAME, "-arrow");
      return config;
    } // Static

  }], [{
    key: "getInstance",
    value: function getInstance(element) {
      return getData(element, popover_service_DATA_KEY);
    }
  }]);

  return PopoverService;
}(TooltipService);

defineProperty_default()(PopoverService, "CONSTANTS", {
  NAME: popover_service_NAME,
  VERSION: popover_service_VERSION,
  DATA_KEY: popover_service_DATA_KEY,
  EVENT_KEY: popover_service_EVENT_KEY,
  CLASS_PREFIX: popover_service_CLASS_PREFIX,
  BSCLS_PREFIX_REGEX: popover_service_BSCLS_PREFIX_REGEX,
  Default: popover_service_Default,
  DefaultType: popover_service_DefaultType,
  Event: popover_service_Event,
  CLASS_NAME_FADE: popover_service_CLASS_NAME_FADE,
  CLASS_NAME_SHOW: popover_service_CLASS_NAME_SHOW,
  SELECTOR_TITLE: SELECTOR_TITLE,
  SELECTOR_CONTENT: SELECTOR_CONTENT
});

/* harmony default export */ const popover_service = ((/* unused pure expression or super */ null && (PopoverService)));
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/toast.service.ts





function toast_service_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function toast_service_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { toast_service_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { toast_service_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

// Fork of https://github.com/twbs/bootstrap/blob/main/js/src/toast.js

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v5.0.0-alpha1): toast.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 * --------------------------------------------------------------------------
 */



/**
 * ------------------------------------------------------------------------
 * Constants
 * ------------------------------------------------------------------------
 */

var toast_service_NAME = "toast";
var toast_service_VERSION = "5.0.0-alpha1-riba";
var toast_service_DATA_KEY = "bs.toast";
var toast_service_EVENT_KEY = ".".concat(toast_service_DATA_KEY);
var toast_service_EVENT_CLICK_DISMISS = "click.dismiss".concat(toast_service_EVENT_KEY);
var toast_service_EVENT_HIDE = "hide".concat(toast_service_EVENT_KEY);
var toast_service_EVENT_HIDDEN = "hidden".concat(toast_service_EVENT_KEY);
var toast_service_EVENT_SHOW = "show".concat(toast_service_EVENT_KEY);
var toast_service_EVENT_SHOWN = "shown".concat(toast_service_EVENT_KEY);
var toast_service_CLASS_NAME_FADE = "fade";
var CLASS_NAME_HIDE = "hide";
var toast_service_CLASS_NAME_SHOW = "show";
var CLASS_NAME_SHOWING = "showing";
var toast_service_DefaultType = {
  animation: "boolean",
  autohide: "boolean",
  delay: "number"
};
var toast_service_Default = {
  animation: true,
  autohide: true,
  delay: 2000
}; // const SELECTOR_DATA_DISMISS = '[data-dismiss="toast"]';

/**
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

var ToastService = /*#__PURE__*/function () {
  function ToastService(element, config) {
    classCallCheck_default()(this, ToastService);

    defineProperty_default()(this, "_element", void 0);

    defineProperty_default()(this, "_config", {});

    defineProperty_default()(this, "_timeout", null);

    this._element = element;
    this._config = this._getConfig(config);
    this._timeout = null;

    this._setListeners();

    dom_data.setData(element, toast_service_DATA_KEY, this);
  } // Getters


  createClass_default()(ToastService, [{
    key: "show",
    // Public
    value: function show() {
      var _this = this;

      var showEvent = event_handler.trigger(this._element, toast_service_EVENT_SHOW);

      if (showEvent.defaultPrevented) {
        return;
      }

      if (this._config.animation) {
        this._element.classList.add(toast_service_CLASS_NAME_FADE);
      }

      var complete = function complete() {
        if (!_this._element) {
          return;
        }

        _this._element.classList.remove(CLASS_NAME_SHOWING);

        _this._element.classList.add(toast_service_CLASS_NAME_SHOW);

        event_handler.trigger(_this._element, toast_service_EVENT_SHOWN);

        if (_this._config.autohide) {
          _this._timeout = setTimeout(function () {
            _this.hide();
          }, _this._config.delay);
        }
      };

      this._element.classList.remove(CLASS_NAME_HIDE);

      Utils.reflow(this._element);

      this._element.classList.add(CLASS_NAME_SHOWING);

      if (this._config.animation) {
        var transitionDuration = Utils.getTransitionDurationFromElement(this._element);
        event_handler.one(this._element, TRANSITION_END, complete);
        Utils.emulateTransitionEnd(this._element, transitionDuration);
      } else {
        complete();
      }
    }
  }, {
    key: "hide",
    value: function hide() {
      var _this2 = this;

      if (!this._element.classList.contains(toast_service_CLASS_NAME_SHOW)) {
        return;
      }

      var hideEvent = event_handler.trigger(this._element, toast_service_EVENT_HIDE);

      if (hideEvent.defaultPrevented) {
        return;
      }

      var complete = function complete() {
        if (!_this2._element) {
          return;
        }

        _this2._element.classList.add(CLASS_NAME_HIDE);

        event_handler.trigger(_this2._element, toast_service_EVENT_HIDDEN);
      };

      this._element.classList.remove(toast_service_CLASS_NAME_SHOW);

      if (this._config.animation) {
        var transitionDuration = Utils.getTransitionDurationFromElement(this._element);
        event_handler.one(this._element, TRANSITION_END, complete);
        Utils.emulateTransitionEnd(this._element, transitionDuration);
      } else {
        complete();
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this._timeout) {
        clearTimeout(this._timeout);
      }

      this._timeout = null;

      if (this._element.classList.contains(toast_service_CLASS_NAME_SHOW)) {
        this._element.classList.remove(toast_service_CLASS_NAME_SHOW);
      } // EventHandler.off(this._element, EVENT_CLICK_DISMISS);


      dom_data.removeData(this._element, toast_service_DATA_KEY); // this._element = null;
      // this._config = null;
    } // Private

  }, {
    key: "_getConfig",
    value: function _getConfig(config) {
      var _this$_element;

      config = toast_service_objectSpread(toast_service_objectSpread(toast_service_objectSpread({}, toast_service_Default), ((_this$_element = this._element) === null || _this$_element === void 0 ? void 0 : _this$_element.dataset) || {}), typeof_default()(config) === "object" && config ? config : {});
      Utils.typeCheckConfig(toast_service_NAME, config, ToastService.DefaultType);
      return config;
    }
  }, {
    key: "_setListeners",
    value: function _setListeners() {
      var _this3 = this;

      if (!this._element) {
        return;
      }

      event_handler.on(this._element, toast_service_EVENT_CLICK_DISMISS, // SELECTOR_DATA_DISMISS,
      function () {
        var _this3$_element;

        // const SELECTOR_DATA_DISMISS = '[data-dismiss="toast"]';
        if (((_this3$_element = _this3._element) === null || _this3$_element === void 0 ? void 0 : _this3$_element.dataset.dismiss) === "toast") {
          _this3.hide();
        }
      });
    } // Static

  }], [{
    key: "getInstance",
    value: function getInstance(element) {
      return dom_data.getData(element, toast_service_DATA_KEY);
    }
  }, {
    key: "VERSION",
    get: function get() {
      return toast_service_VERSION;
    }
  }, {
    key: "DefaultType",
    get: function get() {
      return toast_service_DefaultType;
    }
  }, {
    key: "Default",
    get: function get() {
      return toast_service_Default;
    }
  }]);

  return ToastService;
}();
/* harmony default export */ const toast_service = ((/* unused pure expression or super */ null && (ToastService)));
// CONCATENATED MODULE: ../../riba/packages/bs4/src/services/index.ts











// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__(1140);
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// EXTERNAL MODULE: ../../riba/packages/utils/src/control.ts
var control = __webpack_require__(2416);
// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// EXTERNAL MODULE: ../../riba/packages/utils/src/url.ts
var src_url = __webpack_require__(3190);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-collapse-on-url.binder.ts



/**
 *
 * @see https://getbootstrap.com/docs/4.1/components/collapse/
 * @see https://github.com/twbs/bootstrap/blob/v4-dev/js/src/collapse.js
 */

var collapseOnUrlBinder = {
  name: "bs4-collapse-on-url",
  routine: function routine(el, url) {
    var collapseService = new CollapseService(this.el, [], {
      toggle: false
    });
    var dispatcher = new src.EventDispatcher("main");

    var checkURL = function checkURL(urlToCheck) {
      if (urlToCheck && (0,src_url/* onRoute */.k9)(urlToCheck)) {
        collapseService.hide();
        return true;
      } // collapseService.show();


      return false;
    };

    dispatcher.on("newPageReady", function () {
      return checkURL(url);
    });
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-collapse.binder.ts
// import { CollapseService } from '../services/collapse.service';

/**
 * @deprecated
 */

var collapseBinder = {
  name: "bs4-collapse",
  bind: function bind() {
    console.warn("bs4-collapse is deprecated, use bs4-toggle-collapse-on-click instead.");
  },
  routine: function routine(el, targetSelector) {
    var targets = document.querySelectorAll(targetSelector);
    var collapseServices = [];
    targets.forEach(function (target) {
      collapseServices.push(new CollapseService(target, [el], {
        toggle: false
      }));
    });
    el.addEventListener("click", function (event) {
      event.preventDefault();
      collapseServices.forEach(function (collapseService) {
        collapseService.toggle();
      });
    });
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-toggle-collapse-on-event.binder.ts
// import { CollapseService } from '../services/collapse.service';


/**
 *
 */
var toggleCollapseOnEventBinder = {
  name: "bs4-toggle-collapse-on-*",
  collapseServices: [],
  targets: null,
  onEvent: function onEvent(event) {
    var self = this.binder || this;
    event.preventDefault(); // console.debug('[toggleCollapseOnEventBinder] onEvent', self.collapseServices);

    self.collapseServices.forEach(function (collapseService) {
      collapseService.toggle();
    });
  },
  bind: function bind() {
    /**/
  },
  unbind: function unbind() {
    var self = this.binder || this;
    var eventName = this.args[0];
    this.el.removeEventListener(eventName, self.onEvent.bind(this));
  },
  routine: function routine(el, targetSelector) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    var self = this.binder || this;
    var eventName = this.args[0];
    self.targets = document.querySelectorAll(targetSelector);

    if (self.targets.length <= 0) {
      console.warn("[toggleCollapseOnEventBinder] No element with selector \"".concat(targetSelector, "\" found."));
    }

    self.targets.forEach(function (target) {
      self.collapseServices.push(new CollapseService(target, [el], {
        toggle: false
      }));
    });
    el.addEventListener(eventName, self.onEvent.bind(this)); // onStateChange();
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-dropdown.binder.ts

/**
 *
 * @see https://getbootstrap.com/docs/4.1/components/dropdown/
 */

var dropdownBinder = {
  name: "bs4-",
  routine: function routine(el) {
    var option = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var toggler;

    if (el.classList.contains("dropdown-toggle")) {
      toggler = el;
    } else {
      toggler = el.querySelector(".dropdown-toggle");
    }

    if (!toggler) {
      toggler = el;
    }

    var dropdownService = new DropdownService(toggler, option);
    toggler.addEventListener("click", function () {
      dropdownService.toggle();
    });
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-expan-on-url.binder.ts



/**
 *
 * @see https://getbootstrap.com/docs/4.1/components/collapse/
 * @see https://github.com/twbs/bootstrap/blob/v4-dev/js/src/collapse.js
 */

var expanOnUrlBinder = {
  name: "bs4-expan-on-url",
  routine: function routine(el, url) {
    var collapseService = new CollapseService(el, [], {
      toggle: false
    });
    var dispatcher = new src.EventDispatcher("main");

    var checkURL = function checkURL(urlToCheck) {
      if (urlToCheck && (0,src_url/* onRoute */.k9)(urlToCheck)) {
        collapseService.show();
        return true;
      }

      collapseService.hide();
      return false;
    };

    dispatcher.on("newPageReady", function () {
      return checkURL(url);
    });
    checkURL(url);
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-popover.binder.ts




function bs4_popover_binder_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function bs4_popover_binder_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { bs4_popover_binder_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { bs4_popover_binder_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


/**
 *
 */

/**
 *
 */
var popoverBinder = {
  name: "bs4-popover",
  block: false,
  routine: function routine(el, optionsOrContent) {
    var options = {};

    if (typeof optionsOrContent === "string") {
      options.content = optionsOrContent;
    } else if (typeof_default()(optionsOrContent) === "object") {
      options = bs4_popover_binder_objectSpread({}, optionsOrContent);
    }

    options.placement = options.placement || "auto";
    var popover = new PopoverService(el, bs4_popover_binder_objectSpread(bs4_popover_binder_objectSpread({}, PopoverService.Default), options)); // destroy previous popover if it already exists

    if (this.customData.popover) {
      this.customData.popover.dispose();
    }

    this.customData.popover = popover;
    /*
     * Methods "show", "hide", etc. of the PopoverService can be called by dispatching an
     * event `trigger-${methodName}` on the bound element.
     * All these methods have no arguments.
     */

    var methodNames = ["show", "hide", "toggle", "dispose", "enable", "disable", "toggleEnabled", "update" // render update
    ]; // remove listeners of previous Popover if there already was one

    if (this.customData.listeners) {
      for (var _i = 0, _Object$entries = Object.entries(this.customData.listeners); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = slicedToArray_default()(_Object$entries[_i], 2),
            trigger = _Object$entries$_i[0],
            listener = _Object$entries$_i[1];

        this.el.removeEventListener(trigger, listener);
      }
    }

    this.customData.listeners = Object.create(null);

    for (var _i2 = 0, _methodNames = methodNames; _i2 < _methodNames.length; _i2++) {
      var methodName = _methodNames[_i2];

      var _trigger = "trigger-".concat(methodName);

      var _listener = popover[methodName].bind(popover);

      this.el.addEventListener(_trigger, _listener);
      this.customData.listeners[_trigger] = _listener;
    }
  },
  bind: function bind(el) {
    // inform ancestors that this popover was bound
    // Event name in same style as the other popover CustomEvents from Bootstrap
    el.dispatchEvent(new CustomEvent("bound.bs.popover", {
      bubbles: true,
      cancelable: true
    }));
  },
  unbind: function unbind() {
    // destroy Popover if it already exists
    if (this.customData.popover) {
      this.customData.popover.dispose();
    } // remove listeners if there are any


    if (this.customData.listeners) {
      for (var _i3 = 0, _Object$entries2 = Object.entries(this.customData.listeners); _i3 < _Object$entries2.length; _i3++) {
        var _Object$entries2$_i = slicedToArray_default()(_Object$entries2[_i3], 2),
            trigger = _Object$entries2$_i[0],
            listener = _Object$entries2$_i[1];

        this.el.removeEventListener(trigger, listener);
      }
    }
  }
};
// EXTERNAL MODULE: ../../riba/packages/bs4/src/interfaces/index.ts
var interfaces = __webpack_require__(3986);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-show-toast-on.binder.ts


var showToastOnEventBinder = {
  name: "show-toast-on-*",
  onEvent: function onEvent(event) {
    console.debug("[show-toast-on-*] event.detail:", event.detail);
    this.customData.toastData.$event = event;
    this.customData.toastData.$context = this.view.models;
    console.debug(this.customData.toastData);
    var toastData = new interfaces.Toast(this.customData.toastData);
    var notificationDispatcher = new src.EventDispatcher(toastData.channel || "toast");
    notificationDispatcher.trigger("show-notification", toastData);
  },
  bind: function bind(el) {
    this.customData = {};
    var eventName = this.args[0];
    el.addEventListener(eventName, this.binder.onEvent.bind(this));
  },
  routine: function routine(el, toastData) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    this.customData.toastData = toastData;
  },
  unbind: function unbind(el) {
    var eventName = this.args[0];
    el.removeEventListener(eventName, this.binder.onEvent.bind(this));
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-scrollspy-class.binder.ts

/**
 * scrollspy-class
 * @see https://getbootstrap.com/docs/4.1/components/scrollspy/
 */

var scrollspyClassBinder = {
  name: "bs4-scrollspy-*",
  bind: function bind(el) {
    var _this = this;

    this.customData = {};
    /**
     * Determine if an element is in the viewport
     * @param elem The element
     * @return Returns true if element is in the viewport
     */

    this.customData.isInViewport = function (elem) {
      if (!elem) {
        return false;
      }

      var distance = elem.getBoundingClientRect();
      _this.customData.offsetTop = Number(el.dataset.offset || 0);
      _this.customData.offsetBottom = Number(el.dataset.offsetBottom || 0);
      return distance.top + distance.height >= _this.customData.offsetBottom && distance.bottom - distance.height <= _this.customData.offsetTop;
    };

    this.customData.onScroll = function () {
      var target = _this.customData.target;
      var className = _this.customData.className;

      if (!_this.customData.target) {
        return;
      }
      /**
       * Because we are looking if the element is in viewport we should use the parent wrapper instead of header elements
       */
      // if (target.tagName === 'H1' || target.tagName === 'H2' || target.tagName === 'H3' || target.tagName === 'H4' || target.tagName === 'H5' || target.tagName === 'H6') {
      //   if (target.parentElement.tagName === 'SECTION') {
      //     target = target.parentElement;
      //   }
      // }


      if (_this.customData.isInViewport(target)) {
        el.classList.add(className);

        if (el.type === "radio") {
          el.checked = true;
        }
      } else {
        el.classList.remove(className);

        if (el.type === "radio") {
          el.checked = false;
        }
      }
    };

    window.addEventListener("scroll", (0,control/* debounce */.Ds)(this.customData.onScroll.bind(this)), {
      passive: true
    });
    this.customData.onScroll();
  },
  routine: function routine(el, targetSelector) {
    var nativeIDTargetSelector = targetSelector.replace("#", "");
    this.customData.target = document.getElementById(nativeIDTargetSelector);
    this.customData.className = this.args[0];
  },
  unbind: function unbind() {
    window.removeEventListener("scroll", (0,control/* debounce */.Ds)(this.customData.onScroll.bind(this)));
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/bs4-tooltip.binder.ts
 // /dist/umd/popper

/**
 *
 * @see https://getbootstrap.com/docs/4.1/components/tooltips/
 * @see https://github.com/twbs/bootstrap/blob/v4-dev/js/src/tooltip.js
 */

var template = document.createElement("div");
template.classList.add("tooltip");
template.setAttribute("role", "tooltip");
var arrow = document.createElement("div");
arrow.classList.add("arrow");
template.appendChild(arrow);
var inner = document.createElement("div");
inner.classList.add("tooltip-inner");
template.appendChild(inner);
/**
 *
 */

var tooltipBinder = {
  name: "bs4-tooltip",
  block: false,
  bind: function bind(el) {
    var _this = this;

    // this.customData.$tip = $(template);
    this.customData.tip = template.cloneNode(true);

    this.customData.show = function () {
      var placement = _this.el.dataset.placement || "top";
      var offset = 0;
      _this.customData.popper = new popper/* default */.Z(el, _this.customData.tip, {
        placement: placement,
        modifiers: {
          offset: {
            offset: offset
          },
          flip: {
            behavior: "flip"
          },
          arrow: {
            element: ".arrow"
          },
          preventOverflow: {
            boundariesElement: "scrollParent"
          }
        }
      });
      document.body.appendChild(_this.customData.tip);

      _this.customData.tip.classList.add("show");

      _this.customData.tip.classList.add("bs-tooltip-" + placement);
    };

    this.customData.hide = function () {
      _this.customData.tip.classList.remove("show");

      if (_this.customData.popper) {
        _this.customData.popper.destroy();
      }
    };

    el.addEventListener("mouseenter", this.customData.show);
    el.addEventListener("mouseleave", this.customData.hide);
  },
  routine: function routine(el, text) {
    var innerEl = this.customData.tip.querySelector(".tooltip-inner");
    innerEl.innerHTML = text;
  },
  unbind: function unbind() {
    this.customData.hide();
    this.el.removeEventListener("mouseenter", this.customData.show);
    this.el.removeEventListener("mouseleave", this.customData.hide);
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/scroll-to-on-event.binder.ts

var scrollToOnEventBinder = {
  name: "scroll-to-on-*",
  bind: function bind(el) {
    var _this = this;

    this.customData = {};

    this.customData.onEvent = function (event) {
      var offset = Number(el.dataset.offset || 0);
      var scrollElement = el.dataset.scrollElement ? document.querySelector(el.dataset.scrollElement) : window;
      (0,dom/* scrollTo */.X5)(_this.customData.target, offset, scrollElement);
      event.preventDefault();
    };

    var eventName = this.args[0];
    el.addEventListener(eventName, this.customData.onEvent);
  },
  routine: function routine(el, targetSelector) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    var eventName = this.args[0];
    this.customData.target = document.querySelector(targetSelector);
    el.addEventListener(eventName, this.customData.onEvent);
  },
  unbind: function unbind(el) {
    var eventName = this.args[0];
    el.removeEventListener(eventName, this.customData.onEvent);
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/constants.ts
// EventDispatcher events
var TOGGLE_BUTTON = {
  nsPrefix: "bs4-toggle-button:",
  eventNames: {
    toggle: "toggle",
    toggled: "toggled",
    init: "init",
    state: "state"
  }
};
var TOGGLE_ATTRIBUTE = {
  elEventNames: {
    removed: "removed",
    added: "added"
  }
};
var TOGGLE_CLASS = {
  elEventNames: {
    removed: "removed",
    added: "added"
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/toggle-attribute.binder.ts


/**
 * Adds / removes the attribute on click on the bs4-toggle-button with the same id
 * E.g. with this binder you can toggle a hidden attribute to show / hide the element
 * Events
 * * `off`
 * * `on`
 */

var toggleAttributeBinder = {
  name: "bs4-toggle-attribute-*",
  toggleButtonEvents: null,
  state: "off",
  triggerState: function triggerState() {
    var _self$toggleButtonEve;

    var self = this.binder || this;
    (_self$toggleButtonEve = self.toggleButtonEvents) === null || _self$toggleButtonEve === void 0 ? void 0 : _self$toggleButtonEve.trigger(TOGGLE_BUTTON.eventNames.state, self.state);
  },
  onToggle: function onToggle() {
    var self = this.binder || this; // console.debug('onToggle', (this.binder as Bs4ToggleAttribute));

    self.toggle.bind(this)(this.el);
  },
  toggle: function toggle(el) {
    var self = this.binder || this;

    if (self.state === "removed") {
      self.add.bind(this)(el);
    } else {
      self.remove.bind(this)(el);
    }
  },
  remove: function remove(el) {
    var self = this.binder || this;
    var attributeName = this.args[0];
    el.removeAttribute(attributeName);
    self.state = "removed";
    el.dispatchEvent(new CustomEvent(TOGGLE_ATTRIBUTE.elEventNames.removed, {
      detail: {
        attributeName: attributeName
      }
    }));
    self.triggerState();
  },
  add: function add(el) {
    var self = this.binder || this;
    var attributeName = this.args[0];
    el.setAttribute(attributeName, attributeName);
    self.state = "added";
    el.dispatchEvent(new CustomEvent(TOGGLE_ATTRIBUTE.elEventNames.added, {
      detail: {
        attributeName: attributeName
      }
    }));
    self.triggerState();
  },
  bind: function bind(el) {
    var self = this.binder || this;
    var attributeName = this.args[0];
    self.state = el.hasAttribute(attributeName) ? "added" : "removed";
  },
  unbind: function unbind() {
    var _self$toggleButtonEve2, _self$toggleButtonEve3;

    var self = this.binder || this;
    (_self$toggleButtonEve2 = self.toggleButtonEvents) === null || _self$toggleButtonEve2 === void 0 ? void 0 : _self$toggleButtonEve2.off(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
    (_self$toggleButtonEve3 = self.toggleButtonEvents) === null || _self$toggleButtonEve3 === void 0 ? void 0 : _self$toggleButtonEve3.off(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
  },
  routine: function routine(el, newId) {
    var oldId = this.getValue(el);
    var self = this.binder || this;
    var toggleButton = self.toggleButtonEvents;

    if (oldId && toggleButton) {
      toggleButton.off(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
      toggleButton.off(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
    }

    if (!self.toggleButtonEvents) {
      self.toggleButtonEvents = new src.EventDispatcher(TOGGLE_BUTTON.nsPrefix + newId);
      toggleButton = self.toggleButtonEvents;
      toggleButton.on(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
      toggleButton.on(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/toggle-class.binder.ts


/**
 * Adds / removes the class on click on the bs4-toggle-button with the same id
 *
 * Events
 * * `off`
 * * `on`
 */

var toggleClassBinder = {
  name: "bs4-toggle-class-*",
  toggleButtonEvents: null,
  state: "off",
  triggerState: function triggerState() {
    var _self$toggleButtonEve;

    var self = this.binder || this;
    (_self$toggleButtonEve = self.toggleButtonEvents) === null || _self$toggleButtonEve === void 0 ? void 0 : _self$toggleButtonEve.trigger(TOGGLE_BUTTON.eventNames.state, self.state);
  },
  onToggle: function onToggle() {
    var self = this.binder || this; // console.debug('onToggle', (this.binder as Bs4ToggleClass));

    self.toggle.bind(this)(this.el);
  },
  toggle: function toggle(el) {
    var self = this.binder || this;

    if (self.state === "removed") {
      self.add.bind(this)(el);
    } else {
      self.remove.bind(this)(el);
    }
  },
  remove: function remove(el) {
    var self = this.binder || this;
    var className = this.args[0];
    el.classList.remove(className);
    self.state = "removed";
    el.dispatchEvent(new CustomEvent(TOGGLE_CLASS.elEventNames.removed, {
      detail: {
        className: className
      }
    }));
    self.triggerState();
  },
  add: function add(el) {
    var self = this.binder || this;
    var className = this.args[0];
    el.classList.add(className, className);
    self.state = "added";
    el.dispatchEvent(new CustomEvent(TOGGLE_CLASS.elEventNames.added, {
      detail: {
        className: className
      }
    }));
    self.triggerState();
  },
  bind: function bind(el) {
    var self = this.binder || this;
    var className = this.args[0];
    self.state = el.classList.contains(className) ? "added" : "removed";
  },
  unbind: function unbind() {
    var _self$toggleButtonEve2, _self$toggleButtonEve3;

    var self = this.binder || this;
    (_self$toggleButtonEve2 = self.toggleButtonEvents) === null || _self$toggleButtonEve2 === void 0 ? void 0 : _self$toggleButtonEve2.off(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
    (_self$toggleButtonEve3 = self.toggleButtonEvents) === null || _self$toggleButtonEve3 === void 0 ? void 0 : _self$toggleButtonEve3.off(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
  },
  routine: function routine(el, newId) {
    var oldId = this.getValue(el);
    var self = this.binder || this;
    var toggleButton = self.toggleButtonEvents;

    if (oldId && toggleButton) {
      toggleButton.off(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
      toggleButton.off(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
    }

    if (!self.toggleButtonEvents) {
      self.toggleButtonEvents = new src.EventDispatcher(TOGGLE_BUTTON.nsPrefix + newId);
      toggleButton = self.toggleButtonEvents;
      toggleButton.on(TOGGLE_BUTTON.eventNames.toggle, self.onToggle.bind(this));
      toggleButton.on(TOGGLE_BUTTON.eventNames.init, self.triggerState.bind(this));
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/binders/index.ts












// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-dropdown/bs4-dropdown.component.ts









function bs4_dropdown_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_dropdown_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_dropdown_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var Bs4DropdownComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4DropdownComponent, _Component);

  var _super = bs4_dropdown_component_createSuper(Bs4DropdownComponent);

  createClass_default()(Bs4DropdownComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return [];
    }
  }]);

  function Bs4DropdownComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4DropdownComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      toggle: _this.toggle
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "dropdownService", void 0);

    return _this;
  }

  createClass_default()(Bs4DropdownComponent, [{
    key: "toggle",
    value: function toggle(event) {
      event.preventDefault();
      event.stopPropagation();

      if (!this.dropdownService) {
        throw new Error("DropdownService not ready!");
      }

      return this.dropdownService.toggle();
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4DropdownComponent.prototype), "connectedCallback", this).call(this);

      this.dropdownService = new DropdownService(this.el.querySelector(".dropdown-toggle"));
      this.init(Bs4DropdownComponent.observedAttributes);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return Bs4DropdownComponent;
}(src.Component);

defineProperty_default()(Bs4DropdownComponent, "tagName", "bs4-dropdown");
// CONCATENATED MODULE: ../../riba/packages/core/src/components/templates/templates.component.ts









function templates_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function templates_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { templates_component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { templates_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function templates_component_createSuper(Derived) { var hasNativeReflectConstruct = templates_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function templates_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


 // import { hasChildNodesTrim } from "@ribajs/utils/src/dom";

var TemplatesComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(TemplatesComponent, _Component);

  var _super = templates_component_createSuper(TemplatesComponent);

  function TemplatesComponent() {
    var _this;

    classCallCheck_default()(this, TemplatesComponent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    defineProperty_default()(assertThisInitialized_default()(_this), "templateAttributes", []);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateReady", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", void 0);

    return _this;
  }

  createClass_default()(TemplatesComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.addItemsByTemplate();

      get_default()(getPrototypeOf_default()(TemplatesComponent.prototype), "connectedCallback", this).call(this);

      this.removeTemplates();
      this.bindIfReady();
    }
  }, {
    key: "ready",
    value: function ready() {
      return get_default()(getPrototypeOf_default()(TemplatesComponent.prototype), "ready", this).call(this) && this.templateReady;
    }
    /**
     * Called before getting attribute value, use this method to tramsform the attribute value if you wish
     * @param name Attribute name
     * @param value Attribute value
     */

  }, {
    key: "transformTemplateAttribute",
    value: function transformTemplateAttribute(name, value, type) {
      switch (type) {
        case "number":
          value = Number(value);
          break;

        case "boolean":
          value = value === "true";
          break;

        case "string":
        default:
          break;
      }

      return value;
    }
    /**
     * Called before getting all attribute values, use this method to tramsform the attribute values if you wish
     * @param attributes
     */

  }, {
    key: "transformTemplateAttributes",
    value: function transformTemplateAttributes(attributes, index) {
      attributes.index = attributes.index || index;
      return attributes;
    }
  }, {
    key: "getTemplateAttributes",
    value: function getTemplateAttributes(tpl, index) {
      var attributes = {};

      var _iterator = _createForOfIteratorHelper(this.templateAttributes),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var attribute = _step.value;
          var attrValue = tpl.getAttribute(attribute.name);

          if (typeof attrValue !== "string" && attribute.required) {
            console.error(new Error("template \"".concat(attribute.name, "\" attribute is required!")));
          } else {
            attributes[(0,type/* camelCase */.eV)(attribute.name)] = this.transformTemplateAttribute(attribute.name, tpl.getAttribute(attribute.name));
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return this.transformTemplateAttributes(attributes, index);
    }
  }, {
    key: "addItemByTemplate",
    value: function addItemByTemplate(tpl, index) {
      var attributes = this.getTemplateAttributes(tpl, index);
      var content = tpl.innerHTML;
      this.scope.items.push(templates_component_objectSpread(templates_component_objectSpread({}, attributes), {}, {
        content: content
      }));
    }
  }, {
    key: "addItemsByTemplate",
    value: function addItemsByTemplate() {
      var templates = this.el.querySelectorAll("template");

      for (var index = 0; index < templates.length; index++) {
        var tpl = templates[index];
        this.addItemByTemplate(tpl, index);
      }

      this.templateReady = true;
    }
  }, {
    key: "removeTemplates",
    value: function removeTemplates() {
      var templates = this.el.querySelectorAll("template");

      for (var index = 0; index < templates.length; index++) {
        var tpl = templates[index];
        this.el.removeChild(tpl);
      }
    }
  }, {
    key: "hasOnlyTemplateChilds",
    value: function hasOnlyTemplateChilds() {
      return !Array.from(this.el.childNodes).some(function (child) {
        return child.nodeName !== "TEMPLATE" && child.nodeName !== "#text";
      });
    } // protected template() {
    //   // Only set the component template if there no childs or the childs are templates
    //   if (!hasChildNodesTrim(this.el) || this.hasOnlyTemplateChilds()) {
    //     return template;
    //   } else {
    //     return null;
    //   }
    // }

  }]);

  return TemplatesComponent;
}(src.Component);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/templates/templates.component.ts
/**
 * @deprecated Moved abstract TemplatesComponent to core module
 */

// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-accordion/bs4-accordion.component.html
var bs4_accordion_component = __webpack_require__(8985);
var bs4_accordion_component_default = /*#__PURE__*/__webpack_require__.n(bs4_accordion_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-accordion/bs4-accordion.component.ts











function bs4_accordion_component_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = bs4_accordion_component_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function bs4_accordion_component_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return bs4_accordion_component_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bs4_accordion_component_arrayLikeToArray(o, minLen); }

function bs4_accordion_component_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function bs4_accordion_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_accordion_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_accordion_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






var handleize = src.handleizeFormatter.read;
var Bs4AccordionComponent = /*#__PURE__*/function (_TemplatesComponent) {
  inherits_default()(Bs4AccordionComponent, _TemplatesComponent);

  var _super = bs4_accordion_component_createSuper(Bs4AccordionComponent);

  createClass_default()(Bs4AccordionComponent, null, [{
    key: "observedAttributes",
    // protected collapseServices: CollapseService[] = [];
    get: function get() {
      return ["collapse-icon-src", "collapse-icon-size", "show-only-one"];
    }
  }]);

  function Bs4AccordionComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4AccordionComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateAttributes", [{
      name: "title",
      required: true
    }, {
      name: "show",
      required: false
    }, {
      name: "icon-direction",
      required: false
    }]);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      items: [],
      toggle: _this.toggle,
      show: _this.show,
      hide: _this.hide,
      collapseIconSize: 16,
      showOnlyOne: true
    });

    return _this;
  }

  createClass_default()(Bs4AccordionComponent, [{
    key: "hide",
    value: function hide(item, index) {
      var target = this.el.querySelector("[data-index=\"".concat(index, "\"]"));

      if (target) {
        this.initItemEventListeners(item, target);
        new CollapseService(target, [this.el], {
          toggle: false
        }).hide();
      }
    }
  }, {
    key: "show",
    value: function show(item, index) {
      var target = this.el.querySelector("[data-index=\"".concat(index, "\"]"));
      var others = Array.from(this.el.querySelectorAll("[data-index]:not([data-index=\"".concat(index, "\"])")));

      if (others && this.scope.showOnlyOne) {
        var _iterator = bs4_accordion_component_createForOfIteratorHelper(others),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var other = _step.value;
            new CollapseService(other, [], {
              toggle: false
            }).hide();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      if (target) {
        this.initItemEventListeners(item, target);
        new CollapseService(target, [], {
          toggle: false
        }).show();
      }
    }
  }, {
    key: "toggle",
    value: function toggle(item, index) {
      var target = this.el.querySelector("[data-index=\"".concat(index, "\"]"));
      var others = Array.from(this.el.querySelectorAll("[data-index]:not([data-index=\"".concat(index, "\"])")));

      if (others && this.scope.showOnlyOne) {
        var _iterator2 = bs4_accordion_component_createForOfIteratorHelper(others),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var other = _step2.value;
            new CollapseService(other, [], {
              toggle: false
            }).hide();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }

      if (target) {
        this.initItemEventListeners(item, target);
        new CollapseService(target, [], {
          toggle: false
        }).toggle();
      }
    }
  }, {
    key: "initItemEventListeners",
    value: function initItemEventListeners(item, element) {
      element.removeEventListener(EVENT_HIDE, this.onHide.bind(this, element, item));
      element.removeEventListener(EVENT_SHOW, this.onShow.bind(this, element, item));
      element.addEventListener(EVENT_HIDE, this.onHide.bind(this, element, item), {
        once: true
      });
      element.addEventListener(EVENT_SHOW, this.onShow.bind(this, element, item), {
        once: true
      });
    }
  }, {
    key: "getContentChildByIndex",
    value: function getContentChildByIndex() {
      return this.el.querySelector(".card-body > *") || undefined;
    }
  }, {
    key: "onShow",
    value: function onShow(element, item) {
      item.show = true;
      item.iconDirection = "up";
      var firstContentChild = this.getContentChildByIndex();

      if (firstContentChild) {
        this.triggerVisibilityChangedForElement(firstContentChild, item.show);
      }
    }
  }, {
    key: "onHide",
    value: function onHide(element, item) {
      item.show = false;
      item.iconDirection = "down";
      var firstContentChild = this.getContentChildByIndex();

      if (firstContentChild) {
        this.triggerVisibilityChangedForElement(firstContentChild, item.show);
      }
    }
  }, {
    key: "transformTemplateAttributes",
    value: function transformTemplateAttributes(attributes) {
      attributes.handle = attributes.handle || handleize(attributes.title);
      attributes.show = !!attributes.show;
      attributes.iconDirection = attributes.iconDirection || attributes.show ? "up" : "down";
      return attributes;
    }
    /**
     * Trigger `visibility-changed` for components that need to update if visibility changes.
     * Se also bsf-tabs
     * @param element
     * @param visibile
     */

  }, {
    key: "triggerVisibilityChangedForElement",
    value: function triggerVisibilityChangedForElement(element, visibile) {
      setTimeout(function () {
        // Use this event to update any custom element when it becomes visibile
        element.dispatchEvent(new CustomEvent("visibility-changed", {
          detail: {
            visibile: visibile
          }
        }));
      }, 200);
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4AccordionComponent.observedAttributes);
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(observedAttributes) {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "init", this).call(this, observedAttributes).then(function (view) {
                  return view;
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "beforeBind", this).call(this);

              case 2:
                return _context2.abrupt("return", _context2.sent);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "afterBind", this).call(this);

              case 2:
                return _context3.abrupt("return", _context3.sent);

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4AccordionComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs or the childs are templates
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el) || this.hasOnlyTemplateChilds()) {
        return (bs4_accordion_component_default());
      } else {
        return null;
      }
    }
  }]);

  return Bs4AccordionComponent;
}(TemplatesComponent);

defineProperty_default()(Bs4AccordionComponent, "tagName", "bs4-accordion");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-button/bs4-button.component.ts











function bs4_button_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_button_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_button_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var Bs4ButtonComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4ButtonComponent, _Component);

  var _super = bs4_button_component_createSuper(Bs4ButtonComponent);

  createClass_default()(Bs4ButtonComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["animation-class"];
    }
  }]);

  function Bs4ButtonComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ButtonComponent);

    _this = _super.call(this, element); // console.debug('constructor', this);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      animationClass: "btn-animation-start",
      onClick: _this.onClick
    });

    return _this;
  }

  createClass_default()(Bs4ButtonComponent, [{
    key: "onClick",
    value: function onClick() {
      // console.debug('onClick');
      this.startAnimation();
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ButtonComponent.observedAttributes);
    }
  }, {
    key: "startAnimation",
    value: function startAnimation() {
      this.el.classList.add(this.scope.animationClass);
    }
  }, {
    key: "onStartAnimation",
    value: function onStartAnimation() {// console.debug('onStartAnimation');
    }
  }, {
    key: "onEndAnimation",
    value: function onEndAnimation() {
      var _this2 = this;

      // window.getComputedStyle(this.el)
      // console.debug('onEndAnimation', event, window.getComputedStyle(this.el));
      setTimeout(function () {
        _this2.el.classList.remove(_this2.scope.animationClass);
      });
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(observedAttributes) {
        var _this3 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "init", this).call(this, observedAttributes).then(function (view) {
                  _this3.el.addEventListener("webkitAnimationStart", _this3.onStartAnimation.bind(_this3));

                  _this3.el.addEventListener("animationstart", _this3.onStartAnimation.bind(_this3));

                  _this3.el.addEventListener("webkitAnimationEnd", _this3.onEndAnimation.bind(_this3));

                  _this3.el.addEventListener("animationend", _this3.onEndAnimation.bind(_this3));

                  _this3.el.addEventListener("click", _this3.onClick.bind(_this3));

                  return view;
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "beforeBind", this).call(this);

              case 2:
                return _context2.abrupt("return", _context2.sent);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "afterBind", this).call(this);

              case 2:
                return _context3.abrupt("return", _context3.sent);

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ButtonComponent.prototype), "disconnectedCallback", this).call(this);

      this.el.removeEventListener("webkitAnimationStart", this.onStartAnimation.bind(this));
      this.el.removeEventListener("animationstart", this.onStartAnimation.bind(this));
      this.el.removeEventListener("webkitAnimationEnd", this.onEndAnimation.bind(this));
      this.el.removeEventListener("animationend", this.onEndAnimation.bind(this));
      this.el.removeEventListener("click", this.onClick.bind(this));
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return Bs4ButtonComponent;
}(src.Component);

defineProperty_default()(Bs4ButtonComponent, "tagName", "bs4-button");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-carousel/bs4-carousel.component.ts











function bs4_carousel_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_carousel_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_carousel_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var Bs4CarouselComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4CarouselComponent, _Component);

  var _super = bs4_carousel_component_createSuper(Bs4CarouselComponent);

  createClass_default()(Bs4CarouselComponent, [{
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["interval", "keyboard", "slide", "pauseOn", "wrap", "touch", "ride", "fade"];
    }
  }]);

  function Bs4CarouselComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4CarouselComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      // Properties
      interval: carousel_service.Default.interval,
      keyboard: carousel_service.Default.keyboard,
      slide: carousel_service.Default.slide,
      pauseOn: carousel_service.Default.pause || false,
      // changed from pause to pauseOn
      wrap: carousel_service.Default.wrap,
      touch: carousel_service.Default.touch,
      ride: carousel_service.Default.touch || false,
      fade: false,
      // Methods
      next: _this.next,
      nextWhenVisible: _this.nextWhenVisible,
      prev: _this.prev,
      pause: _this.pause,
      cycle: _this.cycle,
      to: _this.to,
      dispose: _this.dispose
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "carouselService", void 0);

    return _this;
  }

  createClass_default()(Bs4CarouselComponent, [{
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4CarouselComponent.prototype), "beforeBind", this).call(this);

              case 2:
                this.el.classList.add("carousel", "slide");

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4CarouselComponent.prototype), "afterBind", this).call(this);

              case 2:
                this.carouselService = new carousel_service(this.el, {
                  interval: this.scope.interval,
                  keyboard: this.scope.keyboard,
                  slide: this.scope.slide,
                  pause: this.scope.pauseOn,
                  wrap: this.scope.wrap,
                  touch: this.scope.touch
                });

                if (this.scope.fade) {
                  this.el.classList.add("carousel-fade");
                } // TODO make this configurateable?


                this.carouselService.cycle();

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "next",
    value: function next() {
      if (this.carouselService) {
        this.carouselService.next();
      }
    }
  }, {
    key: "nextWhenVisible",
    value: function nextWhenVisible() {
      if (this.carouselService) {
        this.carouselService.nextWhenVisible();
      }
    }
  }, {
    key: "prev",
    value: function prev() {
      if (this.carouselService) {
        this.carouselService.prev();
      }
    }
  }, {
    key: "pause",
    value: function pause() {
      if (this.carouselService) {
        this.carouselService.pause();
      }
    }
  }, {
    key: "cycle",
    value: function cycle(event) {
      if (this.carouselService) {
        this.carouselService.cycle(event);
      }
    }
  }, {
    key: "to",
    value: function to(index) {
      if (this.carouselService) {
        this.carouselService.to(index);
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      if (this.carouselService) {
        this.carouselService.dispose();
      }
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4CarouselComponent.prototype), "connectedCallback", this).call(this);

      get_default()(getPrototypeOf_default()(Bs4CarouselComponent.prototype), "init", this).call(this, Bs4CarouselComponent.observedAttributes);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return Bs4CarouselComponent;
}(src.Component);

defineProperty_default()(Bs4CarouselComponent, "tagName", "bs4-carousel");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-contents/bs4-contents.component.html
var bs4_contents_component = __webpack_require__(1740);
var bs4_contents_component_default = /*#__PURE__*/__webpack_require__.n(bs4_contents_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-contents/bs4-contents.component.ts











function bs4_contents_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_contents_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_contents_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var Bs4ContentsComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4ContentsComponent, _Component);

  var _super = bs4_contents_component_createSuper(Bs4ContentsComponent);

  createClass_default()(Bs4ContentsComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["headers-start", "headers-depth", "find-header-id-depth", "header-parent-selector", "scroll-offset", "scroll-element"];
    }
  }]);

  function Bs4ContentsComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ContentsComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "wrapperElement", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      headersDepth: 1,
      headersStart: 2,
      findHeaderIdDepth: 1,
      headerParentSelector: undefined,
      scrollOffset: 0,
      anchors: []
    });

    return _this;
  }

  createClass_default()(Bs4ContentsComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ContentsComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ContentsComponent.observedAttributes);
    }
  }, {
    key: "getIdFromElementOrParent",
    value: function getIdFromElementOrParent(element) {
      var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

      if (element.id) {
        return element.id;
      }

      if (depth <= this.scope.findHeaderIdDepth) {
        if (element.parentElement) {
          return this.getIdFromElementOrParent(element.parentElement, ++depth);
        }
      }

      return null;
    }
  }, {
    key: "pushHeaders",
    value: function pushHeaders(wrapperElement, headersStart, headersDepth, pushTo) {
      var _this2 = this;

      var headerElements = wrapperElement.querySelectorAll("h" + headersStart);
      headerElements.forEach(function (headerElement) {
        var id = _this2.getIdFromElementOrParent(headerElement);

        if (!id) {
          return;
        }

        pushTo.push({
          element: headerElement,
          href: "#" + id,
          title: headerElement.innerHTML,
          childs: []
        });

        if (headerElement.parentElement && headersDepth >= headersStart + 1) {
          _this2.pushHeaders(headerElement.parentElement, headersStart + 1, headersDepth, pushTo[pushTo.length - 1].childs);
        }
      });
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4ContentsComponent.prototype), "afterBind", this).call(this);

              case 2:
                if (!(this.scope.headerParentSelector && this.scope.headersStart && this.scope.headersDepth)) {
                  _context.next = 9;
                  break;
                }

                this.wrapperElement = document.querySelector(this.scope.headerParentSelector) || undefined;
                this.scope.anchors = [];

                if (this.wrapperElement) {
                  _context.next = 8;
                  break;
                }

                console.error("No wrapper element found!");
                return _context.abrupt("return");

              case 8:
                this.pushHeaders(this.wrapperElement, this.scope.headersStart, this.scope.headersDepth, this.scope.anchors);

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["headersStart", "headersDepth", "headerParentSelector"];
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4ContentsComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ContentsComponent.prototype), "disconnectedCallback", this).call(this);

      this.scope.anchors = [];
    }
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs already
      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        return null;
      } else {
        return (bs4_contents_component_default());
      }
    }
  }]);

  return Bs4ContentsComponent;
}(src.Component);

defineProperty_default()(Bs4ContentsComponent, "tagName", "bs4-contents");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-icon/bs4-icon.component.ts









function bs4_icon_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_icon_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_icon_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var Bs4IconComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4IconComponent, _Component);

  var _super = bs4_icon_component_createSuper(Bs4IconComponent);

  createClass_default()(Bs4IconComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["size", "width", "height", "src", "color", "direction"];
    }
  }]);

  function Bs4IconComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4IconComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {});

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", false);

    return _this;
  }

  createClass_default()(Bs4IconComponent, [{
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(name, oldValue, newValue, namespace) {
      var _this2 = this;

      // injects the changed attributes to scope
      get_default()(getPrototypeOf_default()(Bs4IconComponent.prototype), "attributeChangedCallback", this).call(this, name, oldValue, newValue, namespace);

      if (name === "src") {
        if (!newValue) {
          console.warn("The src attribute must have a value!", this.scope);
          return "";
        }

        if (fetch) {
          fetch(newValue).then(function (response) {
            var _response$headers$get;

            // console.debug('response.headers.get("content-type")', response.headers.get('content-type'));
            if (response.status !== 200) {
              console.error(response.statusText);
              return "";
            }

            if (((_response$headers$get = response.headers.get("content-type")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.indexOf("image/svg+xml")) !== -1) {
              return response.text();
            } else {
              console.error("[bs4-icon] Only svg's are supported! But content-type is " + response.headers.get("content-type"));
            }

            return "";
          }).then(function (response) {
            _this2.el.innerHTML = response;
          })["catch"](function (error) {
            console.error(error);
          });
        }
      }

      if (name === "title") {
        var title = document.createElementNS("http://www.w3.org/2000/svg", "title");
        title.textContent = newValue;
        var svg = this.el.firstElementChild;

        if (svg) {
          svg.appendChild(title);
        }
      }

      if (name === "color") {
        if (newValue.indexOf(",") !== -1) {
          newValue = newValue.split(",");

          if (newValue.length > 0) {
            this.el.className = this.el.className.replace(/(^|\s)color-\S+/g, "");

            for (var i = 0; i < newValue.length; i++) {
              var newColor = newValue[i];

              if (newColor.startsWith("#") || newColor.startsWith("rgb")) {
                this.el.style.color = newColor;
              }

              this.el.classList.add("color-".concat(newColor));
            }
          }
        } else {
          this.el.style.color = newValue;
          this.el.className = this.el.className.replace(/(^|\s)color-\S+/g, "");
          this.el.classList.add("color-".concat(newValue));
        }
      }

      if (name === "size") {
        var size = newValue;
        this.el.style.height = size + "px";
        this.el.style.width = size + "px";
        this.el.className = this.el.className.replace(/(^|\s)size-\S+/g, "");
        this.el.classList.add("size-".concat(size));
      }

      if (name === "width") {
        var width = newValue;
        this.el.style.width = width + "px";
        this.el.className = this.el.className.replace(/(^|\s)width-\S+/g, "");
        this.el.classList.add("width-".concat(width));
      }

      if (name === "height") {
        var height = newValue;
        this.el.style.height = height + "px";
        this.el.className = this.el.className.replace(/(^|\s)height-\S+/g, "");
        this.el.classList.add("height-".concat(height));
      }

      if (name === "direction") {
        var direction = newValue;
        var classString = "direction-".concat(direction);

        if (direction === "left") {
          classString += " rotate-270";
        } else if (direction === "left-top" || direction === "left-up" || direction === "top-left" || direction === "up-left") {
          classString += " rotate-315";
        } else if (direction === "top" || direction === "up") {
          classString += " rotate-0";
        } else if (direction === "top-right" || direction === "up-right" || direction === "right-top" || direction === "right-up") {
          classString += " rotate-45";
        } else if (direction === "right") {
          classString += " rotate-90";
        } else if (direction === "right-bottom" || direction === "right-down" || direction === "bottom-right" || direction === "down-right") {
          classString += " rotate-135";
        } else if (direction === "bottom" || direction === "down") {
          classString += " rotate-180";
        } else if (direction === "left-bottom" || direction === "left-down" || direction === "bottom-left" || direction === "down-left") {
          classString += " rotate-225";
        }

        this.el.className = this.el.className.replace(/(^|\s)direction-\S+/g, "");
        this.el.className = this.el.className.replace(/(^|\s)rotate-\S+/g, "");
        this.el.className += " " + classString;
      }
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4IconComponent.prototype), "connectedCallback", this).call(this);

      this.el.setAttribute("aria-hidden", "true");
      this.el.setAttribute("role", "img");
      this.el.classList.add("iconset");
      this.init(Bs4IconComponent.observedAttributes); // set default values

      if (!this.scope.direction) {
        this.scope.direction = "up";
        this.attributeChangedCallback("direction", null, this.scope.direction, null);
      }
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return Bs4IconComponent;
}(src.Component);

defineProperty_default()(Bs4IconComponent, "tagName", "bs4-icon");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-scrollspy/bs4-scrollspy.component.html
var bs4_scrollspy_component = __webpack_require__(507);
var bs4_scrollspy_component_default = /*#__PURE__*/__webpack_require__.n(bs4_scrollspy_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-scrollspy/bs4-scrollspy.component.ts









function bs4_scrollspy_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_scrollspy_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_scrollspy_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var Bs4ScrollspyComponent = /*#__PURE__*/function (_Bs4ContentsComponent) {
  inherits_default()(Bs4ScrollspyComponent, _Bs4ContentsComponent);

  var _super = bs4_scrollspy_component_createSuper(Bs4ScrollspyComponent);

  createClass_default()(Bs4ScrollspyComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["headers-start", "headers-depth", "find-header-id-depth", "header-parent-selector", "offset", "offset-bottom", "scroll-offset"];
    }
  }]);

  function Bs4ScrollspyComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ScrollspyComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "wrapperElement", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      headersDepth: 1,
      headersStart: 2,
      findHeaderIdDepth: 1,
      headerParentSelector: undefined,
      offset: 0,
      offsetBottom: 0,
      scrollOffset: 0,
      anchors: []
    });

    return _this;
  }

  createClass_default()(Bs4ScrollspyComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ScrollspyComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ScrollspyComponent.observedAttributes);
    }
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["headersStart", "headersDepth", "headerParentSelector"];
    }
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs already
      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        return null;
      } else {
        return (bs4_scrollspy_component_default());
      }
    }
  }]);

  return Bs4ScrollspyComponent;
}(Bs4ContentsComponent);

defineProperty_default()(Bs4ScrollspyComponent, "tagName", "bs4-scrollspy");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-share/bs4-share.component.ts
var bs4_share_component = __webpack_require__(8707);
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-sidebar/bs4-sidebar.component.ts











function bs4_sidebar_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_sidebar_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_sidebar_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var Bs4SidebarComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4SidebarComponent, _Component);

  var _super = bs4_sidebar_component_createSuper(Bs4SidebarComponent);

  createClass_default()(Bs4SidebarComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["id", "container-selector", "position", "width", "auto-show-on-wider-than", "auto-hide-on-slimmer-than", "force-hide-on-location-pathnames", "force-show-on-location-pathnames", "overlay-on-slimmer-than", "watch-new-page-ready-event"];
    }
  }]);

  function Bs4SidebarComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4SidebarComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "style", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "toggleButtonEvents", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "routerEvents", new src.EventDispatcher("main"));

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      // template properties
      containerSelector: undefined,
      state: "hidden",
      id: undefined,
      width: "250px",
      // Options
      position: "left",
      autoShowOnWiderThan: 1199,
      autoHideOnSlimmerThan: 1200,
      watchNewPageReadyEvent: true,
      forceHideOnLocationPathnames: [],
      forceShowOnLocationPathnames: [],
      overlayOnSlimmerThan: 1200,
      // template methods
      hide: _this.hide,
      show: _this.show,
      toggle: _this.toggle
    });

    return _this;
  }

  createClass_default()(Bs4SidebarComponent, [{
    key: "setState",
    value: function setState(state) {
      this.scope.state = state;
    }
  }, {
    key: "getState",
    value: function getState() {
      return this.scope.state;
    }
  }, {
    key: "hide",
    value: function hide() {
      this.scope.state = "hidden";
      this.onStateChange();
    }
  }, {
    key: "show",
    value: function show() {
      var vw = (0,dom/* getViewportDimensions */.cc)().w;

      if (vw < this.scope.overlayOnSlimmerThan) {
        this.scope.state = "overlay-" + this.scope.position;
      } else {
        this.scope.state = "side-" + this.scope.position;
      }

      this.onStateChange();
    }
  }, {
    key: "toggle",
    value: function toggle() {
      if (this.scope.state === "hidden") {
        this.show();
      } else {
        this.hide();
      }
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4SidebarComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4SidebarComponent.observedAttributes);
      this.style = window.getComputedStyle(this.el);
      window.addEventListener("resize", this.onEnviromentChanges.bind(this), false); // inital

      this.onEnviromentChanges();
    }
  }, {
    key: "onToggle",
    value: function onToggle() {
      this.toggle();
    }
  }, {
    key: "initToggleButtonEventDispatcher",
    value: function initToggleButtonEventDispatcher() {
      if (this.toggleButtonEvents) {
        this.toggleButtonEvents.off("toggle", this.onToggle.bind(this));
        this.toggleButtonEvents.off("init", this.triggerState.bind(this));
      }

      this.toggleButtonEvents = new src.EventDispatcher("bs4-toggle-button:" + this.scope.id);
      this.toggleButtonEvents.on("toggle", this.onToggle.bind(this));
      this.toggleButtonEvents.on("init", this.triggerState.bind(this));
    }
  }, {
    key: "initRouterEventDispatcher",
    value: function initRouterEventDispatcher() {
      if (this.scope.watchNewPageReadyEvent) {
        this.routerEvents.on("newPageReady", this.onEnviromentChanges.bind(this));
      }
    }
  }, {
    key: "onHidden",
    value: function onHidden() {
      this.setContainersStyle();
      var translateX = this.scope.position === "left" ? "-100%" : "100%";
      this.el.setAttribute("style", "transform:translateX(".concat(translateX, ");width:").concat(this.scope.width, ";"));
    }
  }, {
    key: "onSide",
    value: function onSide(directon) {
      this.setContainersStyle(undefined, "", directon);
      this.el.setAttribute("style", "transform:translateX(0);width:".concat(this.scope.width, ";"));
    }
  }, {
    key: "onOverlay",
    value: function onOverlay(directon) {
      this.setContainersStyle(undefined, "", directon);
      this.el.setAttribute("style", "transform:translateX(0);width:".concat(this.scope.width, ";"));
    }
  }, {
    key: "triggerState",
    value: function triggerState() {
      var _this$toggleButtonEve;

      (_this$toggleButtonEve = this.toggleButtonEvents) === null || _this$toggleButtonEve === void 0 ? void 0 : _this$toggleButtonEve.trigger("state", this.scope.state);
    }
  }, {
    key: "onStateChange",
    value: function onStateChange() {
      switch (this.scope.state) {
        case "side-left":
        case "side-right":
          this.onSide(this.scope.state);
          break;

        case "overlay-left":
        case "overlay-right":
          this.onOverlay(this.scope.state);
          break;

        default:
          this.onHidden();
          break;
      }

      if (this.toggleButtonEvents) {
        this.toggleButtonEvents.trigger("toggled", this.scope.state);
      }
    }
  }, {
    key: "setStateByEnviroment",
    value: function setStateByEnviroment() {
      if (this.scope.forceHideOnLocationPathnames.indexOf(window.location.pathname) !== -1) {
        return this.hide();
      }

      if (this.scope.forceShowOnLocationPathnames.indexOf(window.location.pathname) !== -1) {
        return this.show();
      }

      var vw = (0,dom/* getViewportDimensions */.cc)().w;

      if (this.scope.autoHideOnSlimmerThan > -1 && vw < this.scope.autoHideOnSlimmerThan) {
        return this.hide();
      }

      if (this.scope.autoShowOnWiderThan > -1 && vw > this.scope.autoShowOnWiderThan) {
        return this.show();
      }
    }
    /**
     * If vieport size changes, location url changes or something else
     */

  }, {
    key: "onEnviromentChanges",
    value: function onEnviromentChanges() {
      this.setStateByEnviroment();
    }
  }, {
    key: "getContainers",
    value: function getContainers() {
      return this.scope.containerSelector ? document.querySelectorAll(this.scope.containerSelector) : undefined;
    }
  }, {
    key: "initContainers",
    value: function initContainers() {
      var containers = this.getContainers();
      this.setContainersStyle(containers);
    }
  }, {
    key: "setContainersStyle",
    value: function setContainersStyle(containers, style, move) {
      if (!containers) {
        containers = this.getContainers();
      }

      if (containers) {
        for (var i = 0; i < containers.length; i++) {
          var container = containers[i];
          this.setContainerStyle(container, style, move);
        }
      }
    }
    /**
     * Sets the container style, takes overs always the transition style of this sidebar
     * @param container
     * @param style
     * @param move
     */

  }, {
    key: "setContainerStyle",
    value: function setContainerStyle(container) {
      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
      var move = arguments.length > 2 ? arguments[2] : undefined;

      if (move) {
        var width = this.width;
        var conStyle = window.getComputedStyle(container);

        switch (move) {
          case "side-left":
            switch (conStyle.position) {
              case "fixed":
                style += "left:" + width;
                break;

              default:
                style += "margin-left:" + width;
                break;
            }

            break;

          case "side-right":
            switch (conStyle.position) {
              case "fixed":
                style += "right:" + width;
                break;

              default:
                style += "margin-right:" + width;
                break;
            }

            break;

          default:
            break;
        }
      }

      return container.setAttribute("style", "transition:".concat(this.style ? this.style.transition : "", ";").concat(style));
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4SidebarComponent.prototype), "beforeBind", this).call(this);

              case 2:
                this.initRouterEventDispatcher();
                return _context.abrupt("return", this.onEnviromentChanges());

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4SidebarComponent.prototype), "afterBind", this).call(this);

              case 2:
                return _context2.abrupt("return", this.onEnviromentChanges());

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["id"];
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4SidebarComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);

      if (attributeName === "containerSelector") {
        this.initContainers();
      }

      if (attributeName === "id") {
        this.initToggleButtonEventDispatcher();
      }
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      var _this$toggleButtonEve2, _this$toggleButtonEve3, _this$toggleButtonEve4;

      get_default()(getPrototypeOf_default()(Bs4SidebarComponent.prototype), "disconnectedCallback", this).call(this);

      (_this$toggleButtonEve2 = this.toggleButtonEvents) === null || _this$toggleButtonEve2 === void 0 ? void 0 : _this$toggleButtonEve2.off("init", this.triggerState.bind(this));
      (_this$toggleButtonEve3 = this.toggleButtonEvents) === null || _this$toggleButtonEve3 === void 0 ? void 0 : _this$toggleButtonEve3.off("toggle", this.onToggle.bind(this));
      (_this$toggleButtonEve4 = this.toggleButtonEvents) === null || _this$toggleButtonEve4 === void 0 ? void 0 : _this$toggleButtonEve4.off("init", this.triggerState.bind(this));
      this.routerEvents.off("newPageReady", this.onEnviromentChanges.bind(this));
      window.removeEventListener("resize", this.onEnviromentChanges.bind(this), false);
    }
  }, {
    key: "template",
    value: function template() {
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        console.warn("No child elements found, this component as no template so you need to define your own as child of this component.");
      }

      return null;
    }
  }, {
    key: "width",
    get: function get() {
      return this.el.offsetWidth ? this.el.offsetWidth + "px" : this.scope.width;
    }
  }]);

  return Bs4SidebarComponent;
}(src.Component);

defineProperty_default()(Bs4SidebarComponent, "tagName", "bs4-sidebar");
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/utils.service.ts


var utils_service_Utils = /*#__PURE__*/function () {
  function Utils() {
    classCallCheck_default()(this, Utils);
  }

  createClass_default()(Utils, null, [{
    key: "linear",
    // easings methods, see https://pawelgrzybek.com/page-scroll-in-vanilla-javascript/
    value: function linear(t) {
      return t;
    }
  }, {
    key: "easeInQuad",
    value: function easeInQuad(t) {
      return t * t;
    }
  }, {
    key: "easeOutQuad",
    value: function easeOutQuad(t) {
      return t * (2 - t);
    }
  }, {
    key: "easeInOutQuad",
    value: function easeInOutQuad(t) {
      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    }
  }, {
    key: "easeInCubic",
    value: function easeInCubic(t) {
      return t * t * t;
    }
  }, {
    key: "easeOutCubic",
    value: function easeOutCubic(t) {
      return --t * t * t + 1;
    }
  }, {
    key: "easeInOutCubic",
    value: function easeInOutCubic(t) {
      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
    }
  }, {
    key: "easeInQuart",
    value: function easeInQuart(t) {
      return t * t * t * t;
    }
  }, {
    key: "easeOutQuart",
    value: function easeOutQuart(t) {
      return 1 - --t * t * t * t;
    }
  }, {
    key: "easeInOutQuart",
    value: function easeInOutQuart(t) {
      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
    }
  }, {
    key: "easeInQuint",
    value: function easeInQuint(t) {
      return t * t * t * t * t;
    }
  }, {
    key: "easeOutQuint",
    value: function easeOutQuint(t) {
      return 1 + --t * t * t * t * t;
    }
  }, {
    key: "easeInOutQuint",
    value: function easeInOutQuint(t) {
      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
    }
  }, {
    key: "getScrollPosition",
    value: function getScrollPosition(element) {
      var scrollPosition = {
        /** horizontal: left / right / width */
        x: element.scrollLeft,

        /** vertical: top / bottom / height */
        y: element.scrollTop,

        /** horizontal: left / right / width */
        maxX: element.scrollWidth - element.clientWidth,

        /** vertical: top / bottom / height */
        maxY: element.scrollHeight - element.clientHeight
      };
      return scrollPosition;
    }
  }, {
    key: "isScrollable",
    value: function isScrollable(element) {
      var scrollPosition = this.getScrollPosition(element);
      return scrollPosition.maxX > 0 || scrollPosition.maxY > 0;
    }
    /**
     * Similar to JQuerys `$(el).index();`
     * @param el
     */

  }, {
    key: "getElementIndex",
    value: function getElementIndex(el) {
      if (!el) {
        return -1;
      }

      var i = 0;

      do {
        i++;
        el = el.previousElementSibling;
      } while (el);

      return i;
    }
  }]);

  return Utils;
}();
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/gameloop.service.ts





/**
 * @see https://www.sitepoint.com/quick-tip-game-loop-in-javascript/
 * @see https://isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing#fps-control
 */
var Gameloop = /*#__PURE__*/function () {
  createClass_default()(Gameloop, null, [{
    key: "getFps",
    value: function getFps() {
      return this.fps;
    }
  }, {
    key: "startLoop",
    value: function startLoop() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.setOptions(options);

      if (!this.loopStarted) {
        this.loopStarted = true;
        window.requestAnimationFrame(this.loop.bind(this));
      }
    }
  }, {
    key: "setOptions",
    value: function setOptions(options) {
      this.maxFPS = typeof options.maxFPS === "number" ? options.maxFPS : this.maxFPS;
    }
    /**
     * The main / game loop
     * @param timestamp
     */

  }, {
    key: "loop",
    value: function loop(timestamp) {
      // Throttle the frame rate.
      if (timestamp < this.lastFrameTimeMs + 1000 / this.maxFPS) {
        this.frameID = requestAnimationFrame(this.loop.bind(this));
        return;
      }

      var progress = timestamp - this.lastFrameTimeMs;
      this.delta += progress;
      this.lastFrameTimeMs = timestamp;
      this.begin(timestamp, this.delta);

      if (timestamp > this.lastFpsUpdate + 1000) {
        this.fps = 0.25 * this.framesThisSecond + 0.75 * this.fps;
        this.lastFpsUpdate = timestamp;
        this.framesThisSecond = 0;
      }

      this.framesThisSecond++;
      var numUpdateSteps = 0;

      while (this.delta >= this.timestep) {
        this.update(this.timestep);
        this.delta -= this.timestep;

        if (++numUpdateSteps >= 240) {
          this.panic();
          break;
        }
      }

      this.render(this.delta / this.timestep);
      this.end(this.fps);
      this.frameID = window.requestAnimationFrame(this.loop.bind(this));
    }
  }, {
    key: "begin",
    value: function begin(timestamp, delta) {
      this.events.trigger("begin", timestamp, delta);
    }
  }, {
    key: "render",
    value: function render(interp) {
      this.events.trigger("render", interp);
    }
  }, {
    key: "update",
    value: function update(delta) {
      this.events.trigger("update", delta);
    }
  }, {
    key: "end",
    value: function end(delta) {
      this.events.trigger("end", delta);
    }
  }, {
    key: "panic",
    value: function panic() {
      this.delta = 0; // discard the unsimulated time
    }
  }]);

  function Gameloop() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    classCallCheck_default()(this, Gameloop);

    Gameloop.setOptions(options);
  }

  return Gameloop;
}();

defineProperty_default()(Gameloop, "events", new src.EventDispatcher("gameloop"));

defineProperty_default()(Gameloop, "maxFPS", 60);

defineProperty_default()(Gameloop, "fps", 60);

defineProperty_default()(Gameloop, "timestep", 1000 / 60);

defineProperty_default()(Gameloop, "loopStarted", false);

defineProperty_default()(Gameloop, "lastFrameTimeMs", 0);

defineProperty_default()(Gameloop, "delta", 0);

defineProperty_default()(Gameloop, "framesThisSecond", 0);

defineProperty_default()(Gameloop, "lastFpsUpdate", 0);

defineProperty_default()(Gameloop, "frameID", 0);
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/autoscroll.service.ts






var Autoscroll = /*#__PURE__*/function () {
  function Autoscroll(el) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    classCallCheck_default()(this, Autoscroll);

    defineProperty_default()(this, "touchCapable", "ontouchstart" in window);

    defineProperty_default()(this, "direction", 1);

    defineProperty_default()(this, "limit", void 0);

    defineProperty_default()(this, "options", void 0);

    defineProperty_default()(this, "el", void 0);

    defineProperty_default()(this, "_pause", false);

    defineProperty_default()(this, "velocity", 0.008);

    defineProperty_default()(this, "move", 0);

    defineProperty_default()(this, "lastMove", 0);

    defineProperty_default()(this, "angle", "horizontal");

    defineProperty_default()(this, "pauseOnHover", true);

    defineProperty_default()(this, "resumeTimer", null);

    this.el = el;
    this.options = options;
    this.direction = this.options.direction || this.direction;
    this.velocity = this.options.velocity || this.velocity;
    this.angle = this.options.angle || this.angle;
    this.pauseOnHover = typeof this.options.pauseOnHover === "boolean" ? this.options.pauseOnHover : this.pauseOnHover;
    this.limit = this.getLimit(this.el);
    this.move = this.getPosition();
    window.addEventListener("resize", this.onResize.bind(this), {
      passive: true
    });

    if (this.direction === -1) {
      // start right
      this.el.scrollLeft = this.limit;
    } else {
      // start left
      this.el.scrollLeft = 0;
    }

    this.el.addEventListener("mouseenter", this.onMouseIn.bind(this), {
      passive: true
    });
    this.el.addEventListener("mouseover", this.onMouseIn.bind(this), {
      passive: true
    });
    this.el.addEventListener("focusin", this.onMouseIn.bind(this), {
      passive: true
    });
    this.el.addEventListener("touchstart", this.onMouseIn.bind(this), {
      passive: true
    });
    this.el.addEventListener("mouseleave", this.onMouseOut.bind(this), {
      passive: true
    });
    this.el.addEventListener("focusout", this.onMouseOut.bind(this), {
      passive: true
    });
    this.el.addEventListener("mouseup", this.onMouseUp.bind(this), {
      passive: true
    });
    this.el.addEventListener("touchend", this.onMouseUp.bind(this), {
      passive: true
    });

    if (this.touchCapable) {
      this.el.addEventListener("scroll", this.onMouseUp.bind(this), {
        passive: true
      });
      this.el.addEventListener("scrollend", this.onMouseUp.bind(this), {
        passive: true
      }); // See ScrollEventsService for "scrollended" event

      this.el.addEventListener("scrollended", this.onMouseUp.bind(this), {
        passive: true
      });
    } else {
      this.el.addEventListener("scroll", this.onScroll.bind(this), {
        passive: true
      });
      this.el.addEventListener("scrollend", this.onScroll.bind(this), {
        passive: true
      });
      this.el.addEventListener("scrollended", this.onScroll.bind(this), {
        passive: true
      });
    }

    Gameloop.events.on("render", this.render.bind(this));
    Gameloop.events.on("update", this.updateMove.bind(this));
    Gameloop.startLoop({
      maxFPS: 60
    });
  }
  /**
   * @note this is not the gameloop update method!
   */


  createClass_default()(Autoscroll, [{
    key: "update",
    value: function update() {
      this.limit = this.getLimit(this.el);
      this.setPosition();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.removeEventListeners();
    }
  }, {
    key: "pause",
    value: function pause() {
      this.el.style.scrollBehavior = "";
      this._pause = true;
    }
    /** Resume autoscrolling if this method was not called up for [delay] milliseconds */

  }, {
    key: "resume",
    value: function resume() {
      var _this = this;

      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      if (!this._pause) {
        return;
      }

      this.stopResumeTimeout();
      this.resumeTimer = window.setTimeout(function () {
        _this.setPosition();

        _this._pause = false; // Disable smooth scrolling on autoscroll if set

        _this.el.style.scrollBehavior = "auto";
      }, delay);
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      window.removeEventListener("resize", this.onResize.bind(this));
      this.el.removeEventListener("mouseenter", this.onMouseIn.bind(this));
      this.el.removeEventListener("mouseover", this.onMouseIn.bind(this));
      this.el.removeEventListener("focusin", this.onMouseIn.bind(this));
      this.el.removeEventListener("touchstart", this.onMouseIn.bind(this));
      this.el.removeEventListener("mouseleave", this.onMouseOut.bind(this));
      this.el.removeEventListener("focusout", this.onMouseOut.bind(this));
      this.el.removeEventListener("mouseup", this.onMouseUp.bind(this));
      this.el.removeEventListener("touchend", this.onMouseUp.bind(this));

      if (this.touchCapable) {
        this.el.removeEventListener("scroll", this.onMouseUp.bind(this));
        this.el.removeEventListener("scrollend", this.onMouseUp.bind(this));
        this.el.removeEventListener("scrollended", this.onMouseUp.bind(this));
      } else {
        this.el.removeEventListener("scroll", this.onScroll.bind(this));
        this.el.removeEventListener("scrollend", this.onScroll.bind(this));
        this.el.removeEventListener("scrollended", this.onScroll.bind(this));
      }

      Gameloop.events.off("render", this.render.bind(this));
      Gameloop.events.off("update", this.updateMove.bind(this));
    }
  }, {
    key: "onMouseIn",
    value: function onMouseIn() {
      if (this.pauseOnHover) {
        this.pause();
      }
    }
  }, {
    key: "onMouseOut",
    value: function onMouseOut() {
      this.resume(200);
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp() {
      this.resume(1000);
    }
  }, {
    key: "onResize",
    value: function onResize() {
      var _this2 = this;

      (0,control/* throttle */.P2)(function () {
        _this2.limit = _this2.getLimit(_this2.el);

        _this2.resume(200);
      })();
    }
  }, {
    key: "onScroll",
    value: function onScroll() {
      var _this3 = this;

      (0,control/* throttle */.P2)(function () {
        (0,control/* debounce */.Ds)(function () {
          _this3.stopResumeTimeout();
        })();
      })();
    }
  }, {
    key: "stopResumeTimeout",
    value: function stopResumeTimeout() {
      if (this.resumeTimer !== null) {
        clearTimeout(this.resumeTimer);
        this.resumeTimer = null;
      }
    }
  }, {
    key: "getPosition",
    value: function getPosition() {
      return (this.angle === "vertical" ? this.el.scrollTop : this.el.scrollLeft) || 0;
    }
  }, {
    key: "setPosition",
    value: function setPosition() {
      this.move = this.getPosition();
    }
  }, {
    key: "getLimit",
    value: function getLimit(el) {
      return this.angle === "vertical" ? utils_service_Utils.getScrollPosition(el).maxY : utils_service_Utils.getScrollPosition(el).maxX;
    }
    /**
     * This Interpolation:
     * ```
     * protected render(interp: number) {
     * ...
     * this.move = (this.lastMove + (this.move - this.lastMove) * interp);
     * ```
     * is not working here for some reasion
     * like it works in the demos/extras-game-loop demo or here:
     * https://isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing
     *
     * Without this the scrollbar scrolls smooth, need to find out why.
     */

  }, {
    key: "render",
    value: function render() {
      if (this._pause) {
        return;
      }

      this.scroll(this.move);
    }
  }, {
    key: "updateMove",
    value: function updateMove(delta) {
      if (this._pause) {
        return;
      }

      this.lastMove = this.move;
      var append = this.velocity * this.direction * delta;
      this.move += append; // Switch directions if we go too far

      if (this.move <= 0 && this.direction !== 1) {
        this.direction = 1;
      }

      if (this.move >= this.limit && this.direction !== -1) {
        this.direction = -1;
      }
    }
  }, {
    key: "scroll",
    value: function scroll(move) {
      if (this.angle === "vertical") {
        this.el.scrollTop = move;
      } else {
        this.el.scrollLeft = move;
      }
    }
  }]);

  return Autoscroll;
}();
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/dragscroll.service.ts






/**
 * Scroll an scrollable element by draging and moving your mouse.
 * inspired by https://github.com/asvd/dragscroll
 */
var Dragscroll = /*#__PURE__*/function () {
  function Dragscroll(el) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      detectGlobalMove: true
    };

    classCallCheck_default()(this, Dragscroll);

    defineProperty_default()(this, "options", void 0);

    defineProperty_default()(this, "lastClientX", 0);

    defineProperty_default()(this, "lastClientY", 0);

    defineProperty_default()(this, "el", void 0);

    defineProperty_default()(this, "pushed", false);

    defineProperty_default()(this, "touchCapable", "ontouchstart" in window);

    this.el = el;
    this.options = options;

    if (this.touchCapable) {
      // Do noting on touch devices
      return this;
    }

    el.removeEventListener("mousedown", this.onMouseDown.bind(this), false);
    el.addEventListener("mousedown", this.onMouseDown.bind(this), {
      passive: true
    });
    window.addEventListener("resize", this.checkDraggable.bind(this)); // Use global move if your element does not use the full width / height

    if (this.options.detectGlobalMove) {
      window.removeEventListener("mouseup", this.onMouseUp.bind(this), false);
      window.removeEventListener("mousemove", this.onMouseMove.bind(this), false);
      window.addEventListener("mouseup", this.onMouseUp.bind(this), {
        passive: true
      });
      window.addEventListener("mousemove", this.onMouseMove.bind(this), {
        passive: true
      });
    } else {
      el.removeEventListener("mouseup", this.onMouseUp.bind(this), false);
      el.removeEventListener("mousemove", this.onMouseMove.bind(this), false);
      el.addEventListener("mouseup", this.onMouseUp.bind(this), {
        passive: true
      });
      el.addEventListener("mousemove", this.onMouseMove.bind(this), {
        passive: true
      });
    } // initial


    this.checkDraggable();
  }

  createClass_default()(Dragscroll, [{
    key: "destroy",
    value: function destroy() {
      this.removeEventListeners();
      this.el.classList.remove("draggable");
    }
  }, {
    key: "checkDraggable",
    value: function checkDraggable() {
      var _this = this;

      return (0,control/* throttle */.P2)(function () {
        if (utils_service_Utils.isScrollable(_this.el)) {
          _this.el.classList.add("draggable");
        }

        _this.el.classList.remove("draggable");
      })();
    }
  }, {
    key: "onMouseDown",
    value: function onMouseDown(e) {
      this.pushed = true;
      this.lastClientX = e.clientX;
      this.lastClientY = e.clientY;
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp() {
      this.pushed = false;
    }
  }, {
    key: "onMouseMove",
    value: function onMouseMove(e) {
      var newScrollX = 0;
      var newScrollY = 0;

      if (this.pushed) {
        this.el.scrollLeft -= newScrollX = -this.lastClientX + (this.lastClientX = e.clientX);
        this.el.scrollTop -= newScrollY = -this.lastClientY + (this.lastClientY = e.clientY);

        if (this.el === document.body) {
          if (document.documentElement) {
            this.el = document.documentElement;
          }

          this.el.scrollLeft -= newScrollX;
          this.el.scrollTop -= newScrollY;
        }
      }
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      window.removeEventListener("resize", this.checkDraggable);
      this.el.removeEventListener("mousedown", this.onMouseDown.bind(this), false);
      this.el.removeEventListener("mouseup", this.onMouseUp.bind(this), false);
      this.el.removeEventListener("mousemove", this.onMouseMove.bind(this), false);
    }
  }]);

  return Dragscroll;
}();
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/fullscreen.service.ts



var FullscreenService = /*#__PURE__*/function () {
  function FullscreenService() {
    classCallCheck_default()(this, FullscreenService);

    defineProperty_default()(this, "enterK", "requestFullscreen");

    defineProperty_default()(this, "exitK", "exitFullscreen");

    defineProperty_default()(this, "elementK", "fullscreenElement");

    defineProperty_default()(this, "eventK", "fullscreenchange");

    var dE = document.documentElement;
    var tF = "fullscreenchange";

    if (dE.requestFullscreen) {
      this.enterK = "requestFullscreen";
      this.exitK = "exitFullscreen";
      this.elementK = "fullscreenElement";
      this.eventK = tF;
    } else if (dE.mozRequestFullScreen) {
      this.enterK = "mozRequestFullScreen";
      this.exitK = "mozCancelFullScreen";
      this.elementK = "mozFullScreenElement";
      this.eventK = "moz" + tF;
    } else if (dE.webkitRequestFullscreen) {
      this.enterK = "webkitRequestFullscreen";
      this.exitK = "webkitExitFullscreen";
      this.elementK = "webkitFullscreenElement";
      this.eventK = "webkit" + tF;
    } else if (dE.msRequestFullscreen) {
      this.enterK = "msRequestFullscreen";
      this.exitK = "msExitFullscreen";
      this.elementK = "msFullscreenElement";
      this.eventK = "MSFullscreenChange";
    }
  }

  createClass_default()(FullscreenService, [{
    key: "enter",
    value: function enter(el) {
      if (!el) {
        el = document.body;
      }

      if (this.isFullscreen()) {
        return;
      }

      if (this.enterK === "webkitRequestFullscreen") {
        el[this.enterK](Element.ALLOW_KEYBOARD_INPUT);
      } else {
        el[this.enterK]();
      }
    }
  }, {
    key: "exit",
    value: function exit() {
      if (this.isFullscreen()) {
        document[this.exitK]();
      }
    }
  }, {
    key: "isFullscreen",
    value: function isFullscreen() {
      return document[this.elementK];
    }
  }, {
    key: "toggle",
    value: function toggle(el) {
      if (this.isFullscreen()) {
        this.exit();
        return;
      } else {
        this.enter(el);
      }
    }
  }], [{
    key: "getSingleton",
    value: function getSingleton() {
      if (FullscreenService.instance) {
        return FullscreenService.instance;
      }

      FullscreenService.instance = new FullscreenService();
      return FullscreenService.instance;
    }
  }, {
    key: "supported",
    value: function supported() {
      var d = document;
      return !!(d.exitFullscreen || d.mozCancelFullScreen || d.webkitExitFullscreen || d.msExitFullscreen);
    }
  }]);

  return FullscreenService;
}();

defineProperty_default()(FullscreenService, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/touch-events/base-touch-events.service.ts



var BaseTouchEventsService = /*#__PURE__*/function () {
  createClass_default()(BaseTouchEventsService, [{
    key: "isTouchCapable",

    /** The element to trigger the events on */
    get: function get() {
      return this.touchCapable;
    }
  }]);

  function BaseTouchEventsService(el) {
    classCallCheck_default()(this, BaseTouchEventsService);

    defineProperty_default()(this, "touchCapable", "ontouchstart" in window);

    defineProperty_default()(this, "el", void 0);

    this.el = el;
  }

  createClass_default()(BaseTouchEventsService, [{
    key: "triggerCustomEvent",
    value: function triggerCustomEvent(eventName, originalEvent) {
      var extraParameters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      extraParameters.originalEvent = originalEvent;
      extraParameters.target = originalEvent.target; // create and dispatch the event

      var event = new CustomEvent(eventName, {
        detail: extraParameters
      });
      this.el.dispatchEvent(event);
    }
  }]);

  return BaseTouchEventsService;
}();
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/touch-events/scroll-events.service.ts








function scroll_events_service_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = scroll_events_service_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function scroll_events_service_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return scroll_events_service_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return scroll_events_service_arrayLikeToArray(o, minLen); }

function scroll_events_service_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function scroll_events_service_createSuper(Derived) { var hasNativeReflectConstruct = scroll_events_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function scroll_events_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

// import { Utils as ExtraUtils } from '../utils.service';

var ScrollEventsService = /*#__PURE__*/function (_BaseTouchEventsServi) {
  inherits_default()(ScrollEventsService, _BaseTouchEventsServi);

  var _super = scroll_events_service_createSuper(ScrollEventsService);

  /** The element to trigger the events on */
  function ScrollEventsService(el) {
    var _this;

    classCallCheck_default()(this, ScrollEventsService);

    _this = _super.call(this, el);

    defineProperty_default()(assertThisInitialized_default()(_this), "isScrolling", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "_scrollEvent", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scrollTimer", null);

    _this.el = el; // Watch also native scrollend to not trigger scrollended before scrollend was triggered

    _this._scrollEvent = _this.touchCapable ? ["touchmove", "scrollend", "scroll"] : ["scroll", "scrollend"];

    _this.addEventListeners();

    return _this;
  }

  createClass_default()(ScrollEventsService, [{
    key: "destroy",
    value: function destroy() {
      this.removeEventListeners();
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      var _iterator = scroll_events_service_createForOfIteratorHelper(this._scrollEvent),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var eventName = _step.value;
          this.el.removeEventListener(eventName, this.onScrollEvent.bind(this));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      var _iterator2 = scroll_events_service_createForOfIteratorHelper(this._scrollEvent),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var eventName = _step2.value;
          this.el.addEventListener(eventName, this.onScrollEvent.bind(this), {
            passive: true
          });
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "onScrollEvent",
    value: function onScrollEvent(event) {
      this.scrollstart(event);
      return true;
    }
    /**
     * scrollstart Event
     * (also handles `scrollended`)
     */

  }, {
    key: "scrollstart",
    value: function scrollstart(event) {
      var _this2 = this;

      if (!event.target) {
        return false;
      } // const scrollPosition = ExtraUtils.getScrollPosition(event.target as HTMLElement);


      if (!this.isScrolling) {
        this.isScrolling = true;
        this.triggerCustomEvent("scrollstart", event, {});
      } // console.debug('scroll timer is ', this.scrollTimer);


      if (this.scrollTimer !== null) {
        clearTimeout(this.scrollTimer);
        this.scrollTimer = null;
      }

      this.scrollTimer = window.setTimeout(function () {
        _this2.triggerCustomEvent("scrollended", event, {});

        _this2.isScrolling = false;
      }, 200);
    }
  }, {
    key: "scrollEvent",
    get: function get() {
      return this._scrollEvent;
    }
  }]);

  return ScrollEventsService;
}(BaseTouchEventsService);
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/touch-events/touch-events.service.ts








function touch_events_service_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = touch_events_service_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function touch_events_service_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return touch_events_service_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return touch_events_service_arrayLikeToArray(o, minLen); }

function touch_events_service_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function touch_events_service_createSuper(Derived) { var hasNativeReflectConstruct = touch_events_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function touch_events_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


// import { ScrollEventsService } from './scroll-events.service';

/**
 * Vanilla version of jQuery Mobile Events
 * @see https://github.com/benmajor/jQuery-Touch-Events
 *
 * Copyright 2011-2019, Ben Major
 * Copyright 2019, Pascal Garber
 * Licensed under the MIT License:
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

var TouchType;

(function (TouchType) {
  TouchType[TouchType["DEFAULT"] = 0] = "DEFAULT";
  TouchType[TouchType["TARGET"] = 1] = "TARGET";
  TouchType[TouchType["CHANGED"] = 2] = "CHANGED";
})(TouchType || (TouchType = {}));

var TouchEventsService = /*#__PURE__*/function (_BaseTouchEventsServi) {
  inherits_default()(TouchEventsService, _BaseTouchEventsServi);

  var _super = touch_events_service_createSuper(TouchEventsService);

  createClass_default()(TouchEventsService, [{
    key: "isTouchCapable",
    // GETTERS:
    get: function get() {
      return this.settings.touchCapable;
    }
  }, {
    key: "startEvent",
    get: function get() {
      return this.settings.startevent;
    }
  }, {
    key: "endEvent",
    get: function get() {
      return this.settings.endevent;
    }
  }, {
    key: "moveEvent",
    get: function get() {
      return this.settings.moveevent;
    }
  }, {
    key: "tapEvent",
    get: function get() {
      return this.settings.tapevent;
    } // public get scrollEvent() {
    //   return this.scrollEvents.scrollEvent;
    // }
    // SETTERS:

    /** Set the X threshold of swipe events */

  }, {
    key: "swipeThresholdX",
    set: function set(threshold) {
      if (typeof threshold !== "number") {
        throw new Error("Threshold parameter must be a type of number");
      }

      this.settings.swipeHThreshold = threshold;
    }
    /** Set the Y threshold of swipe events */

  }, {
    key: "swipeThresholdY",
    set: function set(threshold) {
      if (typeof threshold !== "number") {
        throw new Error("Threshold parameter must be a type of number");
      }

      this.settings.swipeVThreshold = threshold;
    }
    /** Set the double tap interval */

  }, {
    key: "doubleTapInt",
    set: function set(interval) {
      if (typeof interval !== "number") {
        throw new Error("Interval parameter must be a type of number");
      }

      this.settings.doubletapInterval = interval;
    }
    /** Set the taphold threshold */

  }, {
    key: "tapHoldThreshold",
    set: function set(threshold) {
      if (typeof threshold !== "number") {
        throw new Error("Threshold parameter must be a type of number");
      }

      this.settings.tapholdThreshold = threshold;
    }
    /** Set the pixel range for tapas */

  }, {
    key: "tapRange",
    set: function set(range) {
      if (typeof range !== "number") {
        throw new Error("Ranger parameter must be a type of number");
      }

      this.settings.tapPixelRange = range;
    } // PROPERTIES:

    /** The element to trigger the events on */

  }]);

  // protected scrollEvents: ScrollEventsService;
  function TouchEventsService(el) {
    var _this;

    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      tapPixelRange: 5,
      swipeHThreshold: 50,
      swipeVThreshold: 50,
      tapholdThreshold: 750,
      doubletapInterval: 500,
      shakeThreshold: 15,
      touchCapable: "ontouchstart" in window,
      startevent: ["touchstart"],
      endevent: ["touchend"],
      moveevent: ["touchmove"],
      tapevent: ["tap"]
    };

    classCallCheck_default()(this, TouchEventsService);

    _this = _super.call(this, el);

    defineProperty_default()(assertThisInitialized_default()(_this), "el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "startPosition", {
      x: 0,
      y: 0
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "endPosition", {
      x: 0,
      y: 0
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "originalCoord", {
      x: 0,
      y: 0
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "finalCoord", {
      x: 0,
      y: 0
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "startEvnt", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "tapheld", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "firstTap", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "cooling", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "doubletapped", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "lastTouch", 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "hasSwiped", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "tapStarted", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "swipeStarted", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "startTime", 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "holdTimer", -1);

    defineProperty_default()(assertThisInitialized_default()(_this), "tapTimer", -1);

    defineProperty_default()(assertThisInitialized_default()(_this), "actionTimer", -1);

    defineProperty_default()(assertThisInitialized_default()(_this), "settings", void 0);

    _this.el = el; // Set settings by device type (if device is touch capable)

    settings.startevent = settings.touchCapable ? ["touchstart"] : ["mousedown"];
    settings.endevent = settings.touchCapable ? ["touchend"] : ["mouseup"];
    settings.moveevent = settings.touchCapable ? ["touchmove"] : ["mousemove"];
    settings.tapevent = settings.touchCapable ? ["tap"] : ["click"];
    _this.settings = settings; // this.scrollEvents = new ScrollEventsService(this.el);

    _this.addEventListeners();

    return _this;
  }

  createClass_default()(TouchEventsService, [{
    key: "destroy",
    value: function destroy() {
      this.removeEventListeners(); // this.scrollEvents.destroy();
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      var _iterator = touch_events_service_createForOfIteratorHelper(this.settings.startevent),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var eventName = _step.value;
          this.el.removeEventListener(eventName, this.onStartEvent.bind(this));
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var _iterator2 = touch_events_service_createForOfIteratorHelper(this.settings.moveevent),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _eventName = _step2.value;
          this.el.removeEventListener(_eventName, this.onMoveEvent.bind(this));
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      var _iterator3 = touch_events_service_createForOfIteratorHelper(this.settings.endevent),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _eventName2 = _step3.value;
          this.el.removeEventListener(_eventName2, this.onEndEvent.bind(this));
        } // this.scrollEvents.destroy();

      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    } // HELPER METHODS:

  }, {
    key: "getSwipeDir",
    value: function getSwipeDir(startPosition, endPosition) {
      var hThreshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.settings.swipeHThreshold;
      var vThreshold = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.settings.swipeVThreshold;
      var swipeDir = "";

      if (startPosition.y > endPosition.y && startPosition.y - endPosition.y > vThreshold) {
        swipeDir = "swipeup";
      }

      if (startPosition.x < endPosition.x && endPosition.x - startPosition.x > hThreshold) {
        swipeDir = "swiperight";
      }

      if (startPosition.y < endPosition.y && endPosition.y - startPosition.y > vThreshold) {
        swipeDir = "swipedown";
      }

      if (startPosition.x > endPosition.x && startPosition.x - endPosition.x > hThreshold) {
        swipeDir = "swipeleft";
      }

      return swipeDir;
    }
  }, {
    key: "getPostion",
    value: function getPostion(event) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TouchType.DEFAULT;
      var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var touchesTypes;

      switch (type) {
        case TouchType.CHANGED:
          touchesTypes = event.changedTouches;
          break;

        case TouchType.TARGET:
          touchesTypes = event.targetTouches;
          break;

        default:
          touchesTypes = event.touches;
          break;
      }

      var position = {
        x: this.settings.touchCapable ? touchesTypes[index].pageX : event.pageX,
        y: this.settings.touchCapable ? touchesTypes[index].pageY : event.pageY
      };
      return position;
    }
  }, {
    key: "getOffset",
    value: function getOffset(event) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TouchType.DEFAULT;
      var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var boundingClientRect = this.el.getBoundingClientRect();
      var touchesTypes;

      switch (type) {
        case TouchType.CHANGED:
          touchesTypes = event.changedTouches;
          break;

        case TouchType.TARGET:
          touchesTypes = event.targetTouches;
          break;

        default:
          touchesTypes = event.touches;
          break;
      }

      var offset = {
        x: this.settings.touchCapable ? Math.round(touchesTypes[index].pageX - (boundingClientRect ? boundingClientRect.left : 0)) : Math.round(event.pageX - (boundingClientRect ? boundingClientRect.left : 0)),
        y: this.settings.touchCapable ? Math.round(touchesTypes[index].pageY - (boundingClientRect ? boundingClientRect.top : 0)) : Math.round(event.pageY - (boundingClientRect ? boundingClientRect.top : 0))
      };
      return offset;
    }
  }, {
    key: "getTouchData",
    value: function getTouchData(event) {
      var withIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var positionType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TouchType.DEFAULT;
      var offsetType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : TouchType.CHANGED;
      var touchData = {
        position: this.getPostion(event, positionType),
        offset: this.getOffset(event, offsetType),
        time: Date.now()
      };

      if (withIndex) {
        touchData.index = utils_service_Utils.getElementIndex(event.target);
      }

      return touchData;
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      var _iterator4 = touch_events_service_createForOfIteratorHelper(this.settings.startevent),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var eventName = _step4.value;
          this.el.addEventListener(eventName, this.onStartEvent.bind(this), {
            passive: true
          });
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      var _iterator5 = touch_events_service_createForOfIteratorHelper(this.settings.moveevent),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var _eventName3 = _step5.value;
          this.el.addEventListener(_eventName3, this.onMoveEvent.bind(this), {
            passive: true
          });
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }

      var _iterator6 = touch_events_service_createForOfIteratorHelper(this.settings.endevent),
          _step6;

      try {
        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
          var _eventName4 = _step6.value;
          this.el.addEventListener(_eventName4, this.onEndEvent.bind(this), {
            passive: true
          });
        }
      } catch (err) {
        _iterator6.e(err);
      } finally {
        _iterator6.f();
      }
    } // EVENT HANDLERS:

  }, {
    key: "onStartEvent",
    value: function onStartEvent(event) {
      if (event.which && event.which !== 1) {
        return false;
      }

      this.startPosition = this.getPostion(event, TouchType.TARGET);
      this.endPosition = {
        x: this.startPosition.x,
        y: this.startPosition.y
      };
      this.startTime = Date.now(); // For `doubletap`

      this.doubletapped = false;

      if (!this.firstTap) {
        this.firstTap = this.getTouchData(event, true, TouchType.DEFAULT, TouchType.CHANGED);
      } // For `tap`, `swipe`


      this.tapStarted = true;
      this.swipeStarted = true; // For `swipe`

      this.originalCoord = this.getPostion(event, TouchType.TARGET);
      this.finalCoord = this.getPostion(event, TouchType.TARGET);
      this.startEvnt = this.getTouchData(event, false, TouchType.DEFAULT, TouchType.CHANGED);
      this.tapstart(event);
      this.taphold(event);
      return true;
    }
  }, {
    key: "onEndEvent",
    value: function onEndEvent(event) {
      this.endPosition = this.getPostion(event, TouchType.CHANGED);
      this.tapheld = false;
      window.clearTimeout(this.holdTimer);
      this.tapend(event);
      this.swipeend(event);
      this.tap(event);
      this.doubletap(event);
      this.singletap(event);
      this.tapStarted = false;
      this.swipeStarted = false;
      this.hasSwiped = false;
      return true;
    }
  }, {
    key: "onMoveEvent",
    value: function onMoveEvent(event) {
      this.endPosition = this.getPostion(event, TouchType.TARGET);
      this.finalCoord = this.getPostion(event, TouchType.TARGET);
      this.tapmove(event);
      this.swipe(event);
      return true;
    } // CUSTOM EVENT METHODS:

    /** tapstart Event */

  }, {
    key: "tapstart",
    value: function tapstart(event) {
      this.triggerCustomEvent("tapstart", event, this.getTouchData(event, false, TouchType.DEFAULT, TouchType.CHANGED));
      return true;
    }
    /** tapmove Event */

  }, {
    key: "tapmove",
    value: function tapmove(event) {
      this.triggerCustomEvent("tapmove", event, this.getTouchData(event, false, TouchType.DEFAULT, TouchType.CHANGED));
      return true;
    }
    /** tapend Event */

  }, {
    key: "tapend",
    value: function tapend(event) {
      this.triggerCustomEvent("tapend", event, this.getTouchData(event, false, TouchType.CHANGED, TouchType.CHANGED));
      return true;
    }
    /** taphold Event */

  }, {
    key: "taphold",
    value: function taphold(event) {
      var _this2 = this;

      this.holdTimer = window.setTimeout(function () {
        var diffPosition = {
          x: _this2.startPosition.x - _this2.endPosition.x,
          y: _this2.startPosition.y - _this2.endPosition.y
        }; // helded?

        if (_this2.startPosition.x === _this2.endPosition.x && _this2.startPosition.y === _this2.endPosition.y || diffPosition.x >= -_this2.settings.tapPixelRange && diffPosition.x <= _this2.settings.tapPixelRange && diffPosition.y >= -_this2.settings.tapPixelRange && diffPosition.y <= _this2.settings.tapPixelRange) {
          _this2.tapheld = true;
          var endTime = Date.now();
          var duration = endTime - _this2.startTime;
          var touchesLength = event.targetTouches ? event.targetTouches.length : 1;
          var touches = new Array();

          for (var i = 0; i < touchesLength; i++) {
            var elOffset = _this2.el.getBoundingClientRect();

            var touch = {
              position: {
                x: _this2.settings.touchCapable ? event.changedTouches[i].pageX : event.pageX,
                y: _this2.settings.touchCapable ? event.changedTouches[i].pageY : event.pageY
              },
              offset: {
                x: _this2.settings.touchCapable ? Math.round(event.changedTouches[i].pageX - (elOffset ? elOffset.left : 0)) : Math.round(event.pageX - (elOffset ? elOffset.left : 0)),
                y: _this2.settings.touchCapable ? Math.round(event.changedTouches[i].pageY - (elOffset ? elOffset.top : 0)) : Math.round(event.pageY - (elOffset ? elOffset.top : 0))
              }
            };
            touches.push(touch);
          }

          var eventName = touchesLength > 1 ? "taphold" + touchesLength : "taphold";
          var touchData = {
            touches: touches,
            time: Date.now(),
            duration: duration
          };

          _this2.triggerCustomEvent(eventName, event, touchData);
        }
      }, this.settings.tapholdThreshold);
      return true;
    }
    /** doubletap Event */

  }, {
    key: "doubletap",
    value: function doubletap(event) {
      var _this3 = this;

      var now = Date.now();
      var lastTouch = Number(this.lastTouch) || now + 1;
      var delta = now - lastTouch;

      if (this.actionTimer !== -1) {
        window.clearTimeout(this.actionTimer);
      }

      if (delta < this.settings.doubletapInterval && delta > 100 && this.firstTap && utils_service_Utils.getElementIndex(event.target) === this.firstTap.index) {
        this.doubletapped = true;
        window.clearTimeout(this.tapTimer);
        var lastTap = this.getTouchData(event, true, TouchType.CHANGED, TouchType.CHANGED);
        var touchData = {
          firstTap: this.firstTap,
          secondTap: lastTap,
          interval: lastTap.time - this.firstTap.time
        };

        if (!this.cooling) {
          this.triggerCustomEvent("doubletap", event, touchData);
          this.firstTap = null;
        }

        this.cooling = true;
        window.setTimeout(function () {
          _this3.cooling = false;
        }, this.settings.doubletapInterval);
      } else {
        this.actionTimer = window.setTimeout(function () {
          _this3.firstTap = null;
          window.clearTimeout(_this3.actionTimer);
        }, this.settings.doubletapInterval, [event]);
      }

      this.lastTouch = now;
    }
    /**
     * singletap Event
     * This is used in conjuction with doubletap when both events are needed on the same element
     */

  }, {
    key: "singletap",
    value: function singletap(event) {
      var _this4 = this;

      this.tapTimer = window.setTimeout(function () {
        var diffPosition = {
          x: _this4.startPosition.x - _this4.endPosition.x,
          y: _this4.startPosition.y - _this4.endPosition.y
        };

        if (!_this4.doubletapped && !_this4.tapheld && (_this4.startPosition.x === _this4.endPosition.x && _this4.startPosition.y === _this4.endPosition.y || diffPosition.x >= -_this4.settings.tapPixelRange && diffPosition.x <= _this4.settings.tapPixelRange && diffPosition.y >= -_this4.settings.tapPixelRange && diffPosition.y <= _this4.settings.tapPixelRange)) {
          var touchData = _this4.getTouchData(event, false, TouchType.CHANGED, TouchType.CHANGED); // Was it a taphold?


          if (touchData.time - _this4.startTime < _this4.settings.tapholdThreshold) {
            _this4.triggerCustomEvent("singletap", event, touchData);
          }
        }
      }, this.settings.doubletapInterval);
    }
    /** tap Event */

  }, {
    key: "tap",
    value: function tap(event) {
      var diffPosition = {
        x: this.startPosition.x - this.endPosition.x,
        y: this.startPosition.y - this.endPosition.y
      };

      if (this.tapStarted && Date.now() - this.startTime < this.settings.tapholdThreshold && (this.startPosition.x === this.endPosition.x && this.startPosition.y === this.endPosition.y || diffPosition.x >= -this.settings.tapPixelRange && diffPosition.x <= this.settings.tapPixelRange && diffPosition.y >= -this.settings.tapPixelRange && diffPosition.y <= this.settings.tapPixelRange)) {
        var touchesLength = event.targetTouches ? event.targetTouches.length : 1;
        var touches = new Array();

        for (var i = 0; i < touchesLength; i++) {
          var elOffset = this.el.getBoundingClientRect();
          var touch = {
            position: {
              x: this.settings.touchCapable ? event.changedTouches[i].pageX : event.pageX,
              y: this.settings.touchCapable ? event.changedTouches[i].pageY : event.pageY
            },
            offset: {
              x: this.settings.touchCapable ? Math.round(event.changedTouches[i].pageX - (elOffset ? elOffset.left : 0)) : Math.round(event.pageX - (elOffset ? elOffset.left : 0)),
              y: this.settings.touchCapable ? Math.round(event.changedTouches[i].pageY - (elOffset ? elOffset.top : 0)) : Math.round(event.pageY - (elOffset ? elOffset.top : 0))
            }
          };
          touches.push(touch);
        }

        var touchData = {
          touches: touches,
          time: Date.now()
        };
        var eventName = touchesLength > 1 ? "tap" + touchesLength : "tap";
        this.triggerCustomEvent(eventName, event, touchData);
      }
    }
    /**
     * swipe Event
     * (also handles swipeup, swiperight, swipedown and swipeleft)
     *
     * (similar to `touchMove` method in jquery touch events)
     */

  }, {
    key: "swipe",
    value: function swipe(event) {
      var swipeDir = this.getSwipeDir(this.originalCoord, this.finalCoord);

      if (swipeDir && this.swipeStarted && this.startEvnt) {
        this.originalCoord.x = 0;
        this.originalCoord.y = 0;
        this.finalCoord.x = 0;
        this.finalCoord.y = 0;
        this.swipeStarted = false;
        var endEvnt = this.getTouchData(event, false, TouchType.DEFAULT, TouchType.CHANGED); // Calculate the swipe amount (normalized):

        var xAmount = Math.abs(this.startEvnt.position.x - endEvnt.position.x);
        var yAmount = Math.abs(this.startEvnt.position.y - endEvnt.position.y);
        var touchData = {
          startEvnt: this.startEvnt,
          endEvnt: endEvnt,
          direction: swipeDir.replace("swipe", ""),
          xAmount: xAmount,
          yAmount: yAmount,
          duration: endEvnt.time - this.startEvnt.time
        };
        this.hasSwiped = true;
        this.triggerCustomEvent("swipe", event, touchData);
        this.triggerCustomEvent(swipeDir, event, touchData);
      }
    }
    /**
     * swipeend Event
     * (similar `touchEnd` method in jquery touch events)
     */

  }, {
    key: "swipeend",
    value: function swipeend(event) {
      var endEvnt = this.getTouchData(event, false, TouchType.CHANGED, TouchType.CHANGED);

      if (this.hasSwiped && this.startEvnt) {
        var swipeDir = this.getSwipeDir(this.startEvnt.position, endEvnt.position); // Calculate the swipe amount (normalized):

        var xAmount = Math.abs(this.startEvnt.position.x - endEvnt.position.x);
        var yAmount = Math.abs(this.startEvnt.position.y - endEvnt.position.y);
        var touchData = {
          startEvnt: this.startEvnt,
          endEvnt: endEvnt,
          direction: swipeDir.replace("swipe", ""),
          xAmount: xAmount,
          yAmount: yAmount,
          duration: endEvnt.time - this.startEvnt.time
        };
        this.triggerCustomEvent("swipeend", event, touchData);
      }
    }
  }]);

  return TouchEventsService;
}(BaseTouchEventsService);
// CONCATENATED MODULE: ../../riba/packages/extras/src/services/index.ts







// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/data-scroll-position-y.binder.ts

var DEFAULT_OFFSET = 10;
/**
 * rv-data-scroll-position
 * Sets the scroll position to the element as a data attribute,
 * useful if you want to define styles depending on the scroll position.
 * ```
 * html:not([[data-scroll-position-y='top']) {
 *    padding-top: 3em;
 * }
 * ```
 * @see https://css-tricks.com/styling-based-on-scroll-position/
 */

var dataScrollPositionYBinder = {
  name: "data-scroll-position-y",
  customData: {},
  bind: function bind() {
    var _this = this;

    if (!this.customData) {
      this.customData = {};
    }

    this.customData.onScroll = function () {
      if (_this.customData.elementSelector === "window") {
        var element = _this.customData.watchScrollOnElement;

        if (element.scrollY <= 0 + _this.customData.offsetTop) {
          _this.el.dataset.scrollPositionY = "top";
        } else if (element.innerHeight + element.pageYOffset + _this.customData.offsetBottom >= document.body.offsetHeight) {
          _this.el.dataset.scrollPositionY = "bottom";
        } else {
          _this.el.dataset.scrollPositionY = "scrolled";
        }
      } else {
        var _element = _this.customData.watchScrollOnElement;

        if (_element.scrollTop <= 0 + _this.customData.offsetTop) {
          _this.el.dataset.scrollPositionY = "top";
        } else if (_element.scrollTop + _this.customData.offsetBottom >= _element.scrollHeight - _element.clientHeight) {
          _this.el.dataset.scrollPositionY = "bottom";
        } else {
          _this.el.dataset.scrollPositionY = "scrolled";
        }
      }
    };
  },
  routine: function routine(el) {
    var elementSelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "window";

    // Remove old scroll event
    if (this.customData.watchScrollOnElement) {
      this.customData.watchScrollOnElement.removeEventListener("scroll", control/* debounce.bind */.Ds.bind(this, this.customData.onScroll.bind(this)));
    } // Set new element to watch for the scroll event


    if (elementSelector === "window") {
      this.customData.watchScrollOnElement = window;
    } else if (elementSelector === "this") {
      this.customData.watchScrollOnElement = this.el;
    } else {
      this.customData.watchScrollOnElement = document.querySelector(elementSelector);
    } // Watch new element for scroll event


    if (this.customData.watchScrollOnElement) {
      // console.debug('addEventListener', this.customData.watchScrollOnElement);
      this.customData.watchScrollOnElement.addEventListener("scroll", (0,control/* debounce */.Ds)(this.customData.onScroll.bind(this)), {
        passive: true
      });
    }

    this.customData.offsetTop = Number(this.el.dataset.offsetTop) || DEFAULT_OFFSET;
    this.customData.offsetBottom = Number(this.el.dataset.offsetBottom) || DEFAULT_OFFSET;
    this.customData.elementSelector = elementSelector; // inital scroll position

    this.customData.onScroll();
  },
  unbind: function unbind() {
    // Remove old scroll event
    if (this.customData.watchScrollOnElement) {
      this.customData.watchScrollOnElement.removeEventListener("scroll", (0,control/* debounce */.Ds)(this.customData.onScroll.bind(this)));
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/touch-events.binder.ts

var touchEventsBinder = {
  name: "touch-events",
  bind: function bind(el) {
    if (!this.customData) {
      this.customData = {};
    }

    this.customData.touchEventService = new TouchEventsService(el);
  },
  unbind: function unbind() {
    if (this.customData.touchEventService) {
      this.customData.touchEventService.destroy();
    }
  },
  routine: function routine() {// nothing
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/scroll-events.binder.ts

var scrollEventsBinder = {
  name: "scroll-events",
  bind: function bind(el) {
    if (!this.customData) {
      this.customData = {};
    }

    this.customData.touchEventService = new ScrollEventsService(el);
  },
  unbind: function unbind() {
    if (this.customData.touchEventService) {
      this.customData.touchEventService.destroy();
    }
  },
  routine: function routine() {// nothing
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/scrollbar-autoscroll.binder.ts


/**
 * Slideout click event to toggle the slideout
 */

var autoscrollBinder = {
  name: "autoscroll",
  routine: function routine(el, options) {
    var _this = this;

    this.customData = this.customData || {};

    if (options && options.width && (0,type/* isString */.HD)(options.width)) {
      if (options.width === "100vw") {
        el.style.width = options.width;
      } else {
        el.style.width = options.width;
      }
    }

    el.classList.add("rv-autoscroll-".concat(options.angle));
    setTimeout(function () {
      if (_this.customData.autoscroll) {
        _this.customData.autoscroll.destroy();
      }

      _this.customData.autoscroll = new Autoscroll(el, options);
    }, 1000);
  },
  unbind: function unbind() {
    if (this.customData.autoscroll) {
      this.customData.autoscroll.destroy();
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/scrollbar-draggable.binder.ts

/**
 * dragscroll
 */

var scrollbarDraggableBinder = {
  name: "scrollbar-draggable",
  routine: function routine(el, options) {
    this.customData = this.customData || {};

    if (this.customData.dragscroll) {
      this.customData.dragscroll.destroy();
    }

    this.customData.dragscroll = new Dragscroll(el, options);
  },
  unbind: function unbind() {
    if (this.customData.dragscroll) {
      this.customData.dragscroll.destroy();
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/sync-element-property.binder.ts

/**
 * Binds an event handler on the element.
 * either copy-element-width or copy-element-height
 */

var syncElementPropertyBinder = {
  name: "sync-element-*",
  "function": true,
  priority: 1000,
  bind: function bind() {
    /**/
  },
  unbind: function unbind()
  /*el: HTMLElement*/
  {
    /**/
  },
  routine: function routine(el, value) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    var propertyName = this.args[0];
    var elementToSync = document.getElementById(value);

    if (elementToSync) {
      switch (propertyName) {
        case "height":
          el.style.height = elementToSync.clientHeight + "px";
          window.addEventListener("resize", (0,control/* throttle */.P2)(function () {
            el.style.height = elementToSync.clientHeight + "px";
          }));
          break;

        case "width":
          el.style.width = elementToSync.clientWidth + "px";
          window.addEventListener("resize", (0,control/* throttle */.P2)(function () {
            el.style.width = elementToSync.clientWidth + "px";
          }));
          break;

        default:
          console.warn("[syncElementPropertyBinder] Unknown property: " + propertyName);
      }
    } else {
      console.warn("[syncElementPropertyBinder] Could not find element with id: " + value);
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/binders/index.ts






// CONCATENATED MODULE: ../../riba/packages/extras/src/types/index.ts


// CONCATENATED MODULE: ../../riba/packages/extras/src/extras.module.ts
 // import * as formatters from './formatters';

 // import * as components from './components';

var extrasModule = {
  formatters: {},
  binders: src_binders_namespaceObject,
  services: src_services_namespaceObject,
  components: {}
};
// CONCATENATED MODULE: ../../riba/packages/extras/src/index.ts




// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-slideshow/bs4-slideshow-slides.component.html
var bs4_slideshow_slides_component = __webpack_require__(3948);
var bs4_slideshow_slides_component_default = /*#__PURE__*/__webpack_require__.n(bs4_slideshow_slides_component);

// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-slideshow/bs4-slideshow-controls.component.html
var bs4_slideshow_controls_component = __webpack_require__(3499);
var bs4_slideshow_controls_component_default = /*#__PURE__*/__webpack_require__.n(bs4_slideshow_controls_component);

// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-slideshow/bs4-slideshow-indicators.component.html
var bs4_slideshow_indicators_component = __webpack_require__(1896);
var bs4_slideshow_indicators_component_default = /*#__PURE__*/__webpack_require__.n(bs4_slideshow_indicators_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-slideshow/bs4-slideshow.component.ts











function bs4_slideshow_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function bs4_slideshow_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { bs4_slideshow_component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { bs4_slideshow_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function bs4_slideshow_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_slideshow_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_slideshow_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }










var SLIDESHOW_INNER_SELECTOR = ".slideshow-inner";
var SLIDES_SELECTOR = "".concat(SLIDESHOW_INNER_SELECTOR, " > .slide");
var Bs4SlideshowComponent = /*#__PURE__*/function (_TemplatesComponent) {
  inherits_default()(Bs4SlideshowComponent, _TemplatesComponent);

  var _super = bs4_slideshow_component_createSuper(Bs4SlideshowComponent);

  createClass_default()(Bs4SlideshowComponent, [{
    key: "slideshowInner",
    get: function get() {
      if (!this._slideshowInner) {
        this._slideshowInner = this.el.querySelector(SLIDESHOW_INNER_SELECTOR);
      }

      if (!this._slideshowInner) {
        throw new Error("Child element with selecto ".concat(SLIDESHOW_INNER_SELECTOR, " not found!"));
      }

      return this._slideshowInner;
    }
  }, {
    key: "slideElements",
    get: function get() {
      if (!this._slideElements) {
        this._slideElements = this.el.querySelectorAll(SLIDES_SELECTOR);
      }

      if (!this._slideElements) {
        throw new Error("Child element with selecto ".concat(SLIDES_SELECTOR, " not found!"));
      }

      return this._slideElements;
    }
  }, {
    key: "controlsElements",
    get: function get() {
      if (!this._controlsElements) {
        this._controlsElements = this.el.querySelectorAll(".slideshow-control-prev, .slideshow-control-next");
      }

      return this._controlsElements;
    }
  }, {
    key: "indicatorsElement",
    get: function get() {
      if (!this._indicatorsElement) {
        this._indicatorsElement = this.el.querySelector(".slideshow-indicators");
      }

      return this._indicatorsElement;
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["min-width", "slides-to-show", "slides-to-scroll", "controls", "controls-position", "draggable", "autoplay", "autoplay-interval", "autoplay-velocity", "control-prev-icon-src", "control-next-icon-src", "indicator-inactive-icon-src", "indicator-active-icon-src", "angle", "set-active-slide", "pause-on-hover", "sticky", "indicators", "indicators-position", "pause", "sm-min-width", "sm-slides-to-show", "sm-slides-to-scroll", "sm-controls", "sm-controls-position", "sm-draggable", "sm-autoplay", "sm-autoplay-interval", "sm-autoplay-velocity", "sm-control-prev-icon-src", "sm-control-next-icon-src", "sm-indicator-inactive-icon-src", "sm-indicator-active-icon-src", "sm-angle", "sm-set-active-slide", "sm-pause-on-hover", "sm-sticky", "sm-indicators", "sm-indicators-position", "sm-pause", "md-min-width", "md-slides-to-show", "md-slides-to-scroll", "md-controls", "md-controls-position", "md-draggable", "md-autoplay", "md-autoplay-interval", "md-autoplay-velocity", "md-control-prev-icon-src", "md-control-next-icon-src", "md-indicator-inactive-icon-src", "md-indicator-active-icon-src", "md-angle", "md-set-active-slide", "md-pause-on-hover", "md-sticky", "md-indicators", "sm-indicators-position", "md-pause", "lg-min-width", "lg-slides-to-show", "lg-slides-to-scroll", "lg-controls", "lg-controls-position", "lg-draggable", "lg-autoplay", "lg-autoplay-interval", "lg-autoplay-velocity", "lg-control-prev-icon-src", "lg-control-next-icon-src", "lg-indicator-inactive-icon-src", "lg-indicator-active-icon-src", "lg-angle", "lg-set-active-slide", "lg-pause-on-hover", "lg-sticky", "lg-indicators", "lg-indicators-position", "lg-pause", "xl-min-width", "xl-slides-to-show", "xl-slides-to-scroll", "xl-controls", "xl-controls-position", "xl-draggable", "xl-autoplay", "xl-autoplay-interval", "xl-autoplay-velocity", "xl-control-prev-icon-src", "xl-control-next-icon-src", "xl-indicator-inactive-icon-src", "xl-indicator-active-icon-src", "xl-angle", "xl-set-active-slide", "xl-pause-on-hover", "xl-sticky", "xl-indicators", "xl-indicators-position", "xl-pause"];
    }
  }]);

  function Bs4SlideshowComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4SlideshowComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateAttributes", [{
      name: "class",
      required: false
    }, {
      name: "handle",
      required: false
    }, {
      name: "type",
      required: true
    }, {
      name: "active",
      type: "boolean",
      required: false
    }, {
      name: "index",
      type: "number",
      required: false
    }]);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "dragscrollService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "continuousAutoplayService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scrollEventsService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "_slideshowInner", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "_slideElements", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "_controlsElements", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "_indicatorsElement", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateControls", (bs4_slideshow_controls_component_default()));

    defineProperty_default()(assertThisInitialized_default()(_this), "templateIndicators", (bs4_slideshow_indicators_component_default()));

    defineProperty_default()(assertThisInitialized_default()(_this), "autoplayIntervalIndex", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "continuousAutoplayIntervalIndex", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "resumeTimer", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "routerEvents", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "breakpoint", "xs");

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      // Template methods
      next: _this.next.bind(assertThisInitialized_default()(_this)),
      prev: _this.prev.bind(assertThisInitialized_default()(_this)),
      goTo: _this.goTo.bind(assertThisInitialized_default()(_this)),
      // Template properties
      items: new Array(),
      // Options
      slidesToScroll: 1,
      controls: true,
      controlsPosition: "insite-middle",
      pauseOnHover: true,
      sticky: false,
      indicators: true,
      indicatorsPosition: "insite-bottom",
      pause: false,
      draggable: true,
      autoplay: false,
      autoplayInterval: 0,
      autoplayVelocity: 0.8,
      controlPrevIconSrc: "",
      controlNextIconSrc: "",
      indicatorActiveIconSrc: "",
      indicatorInactiveIconSrc: "",
      angle: "horizontal",
      // Responsive options
      xs: {
        minWidth: 0
      },
      sm: {
        minWidth: 576
      },
      md: {
        minWidth: 768
      },
      lg: {
        minWidth: 992
      },
      xl: {
        minWidth: 1200
      },
      // Classes
      controlsPositionClass: "",
      indicatorsPositionClass: ""
    });

    return _this;
  }
  /**
   * Go to next slide
   */


  createClass_default()(Bs4SlideshowComponent, [{
    key: "next",
    value: function next() {
      this.scrollToNextSlide();
    }
    /**
     * Go to prev slide
     */

  }, {
    key: "prev",
    value: function prev() {
      this.scrollToPrevSlide();
    }
    /**
     * Go to slide by index
     * @param index
     */

  }, {
    key: "goTo",
    value: function goTo(index) {
      this.setSlidePositions();
      var top = 0;
      var left = 0;

      if (!this.scope.items[index]) {
        console.error("Slide with index \"".concat(index, "\" not found!"), this.scope.items[index]);
        return;
      }

      if (this.scope.angle === "vertical") {
        // Check if we do not need to slide
        if (this.scope.items[index].position.centerY === 0) {
          // We do not need to scroll
          return;
        }

        top = this.slideshowInner.scrollTop + this.scope.items[index].position.centerY;
      } else {
        // Check if we do not need to slide
        if (this.scope.items[index].position.centerX === 0) {
          // We do not need to scroll
          return;
        }

        left = this.slideshowInner.scrollLeft + this.scope.items[index].position.centerX;
      } // TODO new scrollservice based on https://pawelgrzybek.com/page-scroll-in-vanilla-javascript/


      if (this.slideElements[index]) {
        // if is is window to scroll
        if (typeof this.slideshowInner.scroll === "function") {
          this.slideshowInner.scroll({
            behavior: "smooth",
            left: left,
            top: top
          });
        } else {
          if (this.scope.angle === "vertical") {
            this.slideshowInner.scrollTop = top;
          } else {
            this.slideshowInner.scrollLeft = left;
          }
        }
      }
    }
  }, {
    key: "setOptions",
    value: function setOptions(dest, source) {
      dest.slidesToScroll = typeof source.slidesToScroll !== "undefined" ? (0,type/* clone */.d9)(false, source.slidesToScroll) : dest.slidesToScroll;
      dest.controls = typeof source.controls !== "undefined" ? (0,type/* clone */.d9)(false, source.controls) : dest.controls;
      dest.controlsPosition = typeof source.controlsPosition !== "undefined" ? (0,type/* clone */.d9)(false, source.controlsPosition) : dest.controlsPosition;
      dest.draggable = typeof source.draggable !== "undefined" ? (0,type/* clone */.d9)(false, source.draggable) : dest.draggable;
      dest.autoplay = typeof source.autoplay !== "undefined" ? (0,type/* clone */.d9)(false, source.autoplay) : dest.autoplay;
      dest.autoplayInterval = typeof source.autoplayInterval !== "undefined" ? (0,type/* clone */.d9)(false, source.autoplayInterval) : dest.autoplayInterval;
      dest.autoplayVelocity = typeof source.autoplayVelocity !== "undefined" ? (0,type/* clone */.d9)(false, source.autoplayVelocity) : dest.autoplayVelocity;
      dest.controlPrevIconSrc = typeof source.controlPrevIconSrc !== "undefined" ? (0,type/* clone */.d9)(false, source.controlPrevIconSrc) : dest.controlPrevIconSrc;
      dest.controlNextIconSrc = typeof source.controlNextIconSrc !== "undefined" ? (0,type/* clone */.d9)(false, source.controlNextIconSrc) : dest.controlNextIconSrc;
      dest.indicatorActiveIconSrc = typeof source.indicatorActiveIconSrc !== "undefined" ? (0,type/* clone */.d9)(false, source.indicatorActiveIconSrc) : dest.indicatorActiveIconSrc;
      dest.indicatorInactiveIconSrc = typeof source.indicatorInactiveIconSrc !== "undefined" ? (0,type/* clone */.d9)(false, source.indicatorInactiveIconSrc) : dest.indicatorInactiveIconSrc;
      dest.angle = typeof source.angle !== "undefined" ? (0,type/* clone */.d9)(false, source.angle) : dest.angle;
      dest.pauseOnHover = typeof source.pauseOnHover !== "undefined" ? (0,type/* clone */.d9)(false, source.pauseOnHover) : dest.pauseOnHover;
      dest.sticky = typeof source.sticky !== "undefined" ? (0,type/* clone */.d9)(false, source.sticky) : dest.sticky;
      dest.indicators = typeof source.indicators !== "undefined" ? (0,type/* clone */.d9)(false, source.indicators) : dest.indicators;
      dest.indicatorsPosition = typeof source.indicatorsPosition !== "undefined" ? (0,type/* clone */.d9)(false, source.indicatorsPosition) : dest.indicatorsPosition;
      dest.pause = typeof source.pause !== "undefined" ? (0,type/* clone */.d9)(false, source.pause) : dest.pause;
    }
  }, {
    key: "setOptionsIfUndefined",
    value: function setOptionsIfUndefined(dest, source) {
      dest.slidesToScroll = typeof dest.slidesToScroll === "undefined" ? source.slidesToScroll : dest.slidesToScroll;
      dest.controls = typeof dest.controls === "undefined" ? source.controls : dest.controls;
      dest.controlsPosition = typeof dest.controlsPosition === "undefined" ? source.controlsPosition : dest.controlsPosition;
      dest.draggable = typeof dest.draggable === "undefined" ? source.draggable : dest.draggable;
      dest.autoplay = typeof dest.autoplay === "undefined" ? source.autoplay : dest.autoplay;
      dest.autoplayInterval = typeof dest.autoplayInterval === "undefined" ? source.autoplayInterval : dest.autoplayInterval;
      dest.autoplayVelocity = typeof dest.autoplayVelocity === "undefined" ? source.autoplayVelocity : dest.autoplayVelocity;
      dest.controlPrevIconSrc = typeof dest.controlPrevIconSrc === "undefined" ? source.controlPrevIconSrc : dest.controlPrevIconSrc;
      dest.controlNextIconSrc = typeof dest.controlNextIconSrc === "undefined" ? source.controlNextIconSrc : dest.controlNextIconSrc;
      dest.indicatorActiveIconSrc = typeof dest.indicatorActiveIconSrc === "undefined" ? source.indicatorActiveIconSrc : dest.indicatorActiveIconSrc;
      dest.indicatorInactiveIconSrc = typeof dest.indicatorInactiveIconSrc === "undefined" ? source.indicatorInactiveIconSrc : dest.indicatorInactiveIconSrc;
      dest.angle = typeof dest.angle === "undefined" ? source.angle : dest.angle;
      dest.pauseOnHover = typeof dest.pauseOnHover === "undefined" ? source.pauseOnHover : dest.pauseOnHover;
      dest.sticky = typeof dest.sticky === "undefined" ? source.sticky : dest.sticky;
      dest.indicators = typeof dest.indicators === "undefined" ? source.indicators : dest.indicators;
      dest.indicatorsPosition = typeof dest.indicatorsPosition === "undefined" ? source.indicatorsPosition : dest.indicatorsPosition;
      dest.pause = typeof dest.pause === "undefined" ? source.pause : dest.pause;
    }
  }, {
    key: "initResponsiveOptions",
    value: function initResponsiveOptions() {
      this.setOptions(this.scope.xs, this.scope);
      this.setOptionsIfUndefined(this.scope.sm, this.scope.xs);
      this.setOptionsIfUndefined(this.scope.md, this.scope.sm);
      this.setOptionsIfUndefined(this.scope.lg, this.scope.md);
      this.setOptionsIfUndefined(this.scope.xl, this.scope.lg);
      this.breakpoint = this.getBreakpoint();
      this.setOptionsByBreakpoint(this.breakpoint);
    }
  }, {
    key: "setControlsOptions",
    value: function setControlsOptions() {
      var _this$scope$xs$contro, _this$scope$sm$contro, _this$scope$md$contro, _this$scope$lg$contro, _this$scope$xl$contro;

      var xsControlsPosition = (_this$scope$xs$contro = this.scope.xs.controlsPosition) === null || _this$scope$xs$contro === void 0 ? void 0 : _this$scope$xs$contro.split("-");
      var smControlsPosition = (_this$scope$sm$contro = this.scope.sm.controlsPosition) === null || _this$scope$sm$contro === void 0 ? void 0 : _this$scope$sm$contro.split("-");
      var mdControlsPosition = (_this$scope$md$contro = this.scope.md.controlsPosition) === null || _this$scope$md$contro === void 0 ? void 0 : _this$scope$md$contro.split("-");
      var lgControlsPosition = (_this$scope$lg$contro = this.scope.lg.controlsPosition) === null || _this$scope$lg$contro === void 0 ? void 0 : _this$scope$lg$contro.split("-");
      var xlControlsPosition = (_this$scope$xl$contro = this.scope.xl.controlsPosition) === null || _this$scope$xl$contro === void 0 ? void 0 : _this$scope$xl$contro.split("-");
      this.scope.controlsPositionClass = "control-".concat(xsControlsPosition[0], " control-").concat(xsControlsPosition[1], " control-sm-").concat(smControlsPosition[0], " control-sm-").concat(smControlsPosition[1], " control-md-").concat(mdControlsPosition[0], " control-md-").concat(mdControlsPosition[1], " control-lg-").concat(lgControlsPosition[0], " control-lg-").concat(lgControlsPosition[1], " control-xl-").concat(xlControlsPosition[0], " control-xl-").concat(xlControlsPosition[1]);
    }
  }, {
    key: "setIndicatorsOptions",
    value: function setIndicatorsOptions() {
      var _this$scope$xs$indica, _this$scope$sm$indica, _this$scope$md$indica, _this$scope$lg$indica, _this$scope$xl$indica;

      var xsIndicatorsPosition = (_this$scope$xs$indica = this.scope.xs.indicatorsPosition) === null || _this$scope$xs$indica === void 0 ? void 0 : _this$scope$xs$indica.split("-");
      var smIndicatorsPosition = (_this$scope$sm$indica = this.scope.sm.indicatorsPosition) === null || _this$scope$sm$indica === void 0 ? void 0 : _this$scope$sm$indica.split("-");
      var mdIndicatorsPosition = (_this$scope$md$indica = this.scope.md.indicatorsPosition) === null || _this$scope$md$indica === void 0 ? void 0 : _this$scope$md$indica.split("-");
      var lgIndicatorsPosition = (_this$scope$lg$indica = this.scope.lg.indicatorsPosition) === null || _this$scope$lg$indica === void 0 ? void 0 : _this$scope$lg$indica.split("-");
      var xlIndicatorsPosition = (_this$scope$xl$indica = this.scope.xl.indicatorsPosition) === null || _this$scope$xl$indica === void 0 ? void 0 : _this$scope$xl$indica.split("-");
      this.scope.indicatorsPositionClass = "indicators-".concat(xsIndicatorsPosition[0], " indicators-").concat(xsIndicatorsPosition[1], " indicators-sm-").concat(smIndicatorsPosition[0], " indicators-sm-").concat(smIndicatorsPosition[1], " indicators-md-").concat(mdIndicatorsPosition[0], " indicators-md-").concat(mdIndicatorsPosition[1], " indicators-lg-").concat(lgIndicatorsPosition[0], " indicators-lg-").concat(lgIndicatorsPosition[1], " indicators-xl-").concat(xlIndicatorsPosition[0], " indicators-xl-").concat(xlIndicatorsPosition[1]);
    } // TODO create independent bs4 breakpoint service

  }, {
    key: "getBreakpoint",
    value: function getBreakpoint() {
      var size = window.innerWidth; // XS

      if (size >= this.scope.xs.minWidth && size < this.scope.sm.minWidth) {
        return "xs";
      } // SM


      if (size >= this.scope.sm.minWidth && size < this.scope.md.minWidth) {
        return "sm";
      } // MD


      if (size >= this.scope.md.minWidth && size < this.scope.lg.minWidth) {
        return "md";
      } // LG


      if (size >= this.scope.lg.minWidth && size < this.scope.xl.minWidth) {
        return "lg";
      } // XL


      return "xl";
    }
  }, {
    key: "setOptionsByBreakpoint",
    value: function setOptionsByBreakpoint(breakpoint) {
      this.setOptions(this.scope, this.scope[breakpoint]);

      if (this.scope.autoplay) {
        this.enableAutoplay();
      } else {
        this.disableAutoplay();
      }

      if (this.scope.draggable) {
        this.enableDesktopDragscroll();
      } else {
        this.disableDesktopDragscroll();
      }

      this.setControlsOptions();
      this.setIndicatorsOptions();
    }
  }, {
    key: "onBreakpointChanges",
    value: function onBreakpointChanges() {
      this.setOptionsByBreakpoint(this.breakpoint);
    }
  }, {
    key: "onViewChanges",
    value: function onViewChanges() {
      var _this2 = this;

      (0,control/* throttle */.P2)(function () {
        _this2.debug("onViewChanges");

        var newBreakpoint = _this2.getBreakpoint();

        if (newBreakpoint !== _this2.breakpoint) {
          _this2.breakpoint = newBreakpoint;

          _this2.onBreakpointChanges();
        }

        _this2.setSlidePositions();

        var index = _this2.setCenteredSlideActive();

        if (_this2.scope.sticky) {
          _this2.goTo(index);
        }
      })();
    }
  }, {
    key: "onVisibilityChanged",
    value: function onVisibilityChanged(event) {
      if (event.detail.visibile) {
        var _this$dragscrollServi, _this$continuousAutop;

        (_this$dragscrollServi = this.dragscrollService) === null || _this$dragscrollServi === void 0 ? void 0 : _this$dragscrollServi.checkDraggable();
        (_this$continuousAutop = this.continuousAutoplayService) === null || _this$continuousAutop === void 0 ? void 0 : _this$continuousAutop.update();
      }
    }
  }, {
    key: "onScroll",
    value: function onScroll() {
      var _this3 = this;

      (0,control/* throttle */.P2)(function () {
        (0,control/* debounce */.Ds)(function () {
          // this.setSlidePositions();
          // this.setCenteredSlideActive();
          _this3.resume(1000);
        })();
      })();
    }
  }, {
    key: "onScrollend",
    value: function onScrollend() {
      this.setSlidePositions();
      this.setCenteredSlideActive();

      if (this.scope.sticky) {
        this.scrollToNearestSlide();
      }

      this.resume(1000);
    }
  }, {
    key: "onMouseIn",
    value: function onMouseIn() {
      if (this.scope.pauseOnHover) {
        this.scope.pause = true;
      }
    }
  }, {
    key: "onMouseOut",
    value: function onMouseOut() {
      this.resume(200);
    }
  }, {
    key: "onMouseUp",
    value: function onMouseUp() {
      var _this4 = this;

      (0,control/* throttle */.P2)(function () {
        (0,control/* debounce */.Ds)(function () {
          _this4.resume(1000);
        })();
      })();
    }
    /** Resume if this method was not called up for [delay] milliseconds */

  }, {
    key: "resume",
    value: function resume() {
      var _this5 = this;

      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;

      if (!this.scope.pause) {
        return;
      }

      if (this.resumeTimer !== null) {
        clearTimeout(this.resumeTimer);
        this.resumeTimer = null;
      }

      this.resumeTimer = window.setTimeout(function () {
        _this5.setSlidePositions();

        _this5.scope.pause = false;
      }, delay);
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "connectedCallback", this).call(this);

      return this.init(Bs4SlideshowComponent.observedAttributes);
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      if (!this.routerEvents) {
        this.routerEvents = new src.EventDispatcher("main");
      }

      this.routerEvents.on("newPageReady", this.onBreakpointChanges.bind(this));
      window.addEventListener("resize", this.onViewChanges.bind(this)); // Custom event triggered by some parent components when this component changes his visibility, e.g. triggered in the bs4-tabs component

      this.el.addEventListener("visibility-changed", this.onVisibilityChanged.bind(this));
      this.slideshowInner.addEventListener("scroll", this.onScroll.bind(this), {
        passive: true
      });
      this.slideshowInner.addEventListener("scrollended", this.onScrollend.bind(this), {
        passive: true
      });
      this.el.addEventListener("mouseenter", this.onMouseIn.bind(this), {
        passive: true
      });
      this.el.addEventListener("mouseover", this.onMouseIn.bind(this), {
        passive: true
      });
      this.el.addEventListener("focusin", this.onMouseIn.bind(this), {
        passive: true
      });
      this.el.addEventListener("touchstart", this.onMouseIn.bind(this), {
        passive: true
      });
      this.el.addEventListener("mouseout", this.onMouseOut.bind(this), {
        passive: true
      });
      this.el.addEventListener("mouseleave", this.onMouseOut.bind(this), {
        passive: true
      });
      this.el.addEventListener("focusout", this.onMouseOut.bind(this), {
        passive: true
      });
      this.el.addEventListener("mouseup", this.onMouseUp.bind(this), {
        passive: true
      });
      this.el.addEventListener("touchend", this.onMouseUp.bind(this), {
        passive: true
      });
      this.el.addEventListener("scroll", this.onMouseUp.bind(this), {
        passive: true
      });
      this.el.addEventListener("scrollend", this.onMouseUp.bind(this), {
        passive: true
      }); // See ScrollEventsService for this event

      this.el.addEventListener("scrollended", this.onMouseUp.bind(this), {
        passive: true
      }); // inital

      this.onViewChanges(); // this.onScroll();

      this.onScrollend();
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      // TODO is this removing other throttled resize event listeners?
      window.removeEventListener("resize", this.onViewChanges.bind(this));
      this.el.removeEventListener("visibility-changed", this.onVisibilityChanged.bind(this));
      this.slideshowInner.removeEventListener("scroll", this.onScroll.bind(this));
      this.slideshowInner.removeEventListener("scrollended", this.onScrollend.bind(this));
      this.el.removeEventListener("mouseenter", this.onMouseIn.bind(this));
      this.el.removeEventListener("mouseover", this.onMouseIn.bind(this));
      this.el.removeEventListener("focusin", this.onMouseIn.bind(this));
      this.el.removeEventListener("touchstart", this.onMouseIn.bind(this));
      this.el.removeEventListener("mouseout", this.onMouseOut.bind(this));
      this.el.removeEventListener("mouseleave", this.onMouseOut.bind(this));
      this.el.removeEventListener("focusout", this.onMouseOut.bind(this));
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "beforeBind", this).call(this));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "afterBind", this).call(this);

              case 2:
                this.initSlideshowInner();
                this.initResponsiveOptions(); // this.removeEventListeners();

                this.addEventListeners();

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "initSlideshowInner",
    value: function initSlideshowInner() {
      this.initSlideshowInnerSlides();
      this.scrollEventsService = new ScrollEventsService(this.slideshowInner);
    }
  }, {
    key: "enableDesktopDragscroll",
    value: function enableDesktopDragscroll() {
      if (!this.dragscrollService) {
        var dragscrollOptions = {
          detectGlobalMove: true
        };
        this.dragscrollService = new Dragscroll(this.slideshowInner, dragscrollOptions);
      }
    }
  }, {
    key: "disableDesktopDragscroll",
    value: function disableDesktopDragscroll() {
      if (this.dragscrollService) {
        this.dragscrollService.destroy();
        this.dragscrollService = undefined;
      }
    }
  }, {
    key: "enableContinuousAutoplay",
    value: function enableContinuousAutoplay() {
      if (!this.continuousAutoplayService) {
        var autoscrollOptions = {
          velocity: this.scope.autoplayVelocity,
          angle: this.scope.angle,
          pauseOnHover: this.scope.pauseOnHover
        };
        this.continuousAutoplayService = new Autoscroll(this.slideshowInner, autoscrollOptions);
      } // on continuous autoplay the scrollended event is never triggered, so call this method all `intervalsTimeMs` milliseconds as a WORKAROUND


      if (!this.continuousAutoplayIntervalIndex) {
        // intervals are depending on the autoscrolling speed (autoplayVelocity)
        var intervalsTimeMs = this.scope.autoplayVelocity * 10000; // this.debug('intervalsTimeMs', intervalsTimeMs);

        this.continuousAutoplayIntervalIndex = window.setInterval(this.onScrollend.bind(this), intervalsTimeMs);
      }
    }
  }, {
    key: "disableContinuousAutoplay",
    value: function disableContinuousAutoplay() {
      if (this.continuousAutoplayService) {
        this.continuousAutoplayService.destroy();
        this.continuousAutoplayService = undefined;
      }

      if (this.continuousAutoplayIntervalIndex) {
        window.clearInterval(this.continuousAutoplayIntervalIndex);
        this.continuousAutoplayIntervalIndex = null;
      }
    }
  }, {
    key: "enableIntervalAutoplay",
    value: function enableIntervalAutoplay() {
      var _this6 = this;

      if (this.autoplayIntervalIndex === null) {
        this.autoplayIntervalIndex = window.setInterval(function () {
          if (!_this6.scope.pause) {
            _this6.next();
          }
        }, this.scope.autoplayInterval);
      }
    }
  }, {
    key: "disableIntervalAutoplay",
    value: function disableIntervalAutoplay() {
      if (this.autoplayIntervalIndex) {
        window.clearInterval(this.autoplayIntervalIndex);
        this.autoplayIntervalIndex = null;
      }
    }
  }, {
    key: "disableAutoplay",
    value: function disableAutoplay() {
      this.disableIntervalAutoplay();
      this.disableContinuousAutoplay();
    }
  }, {
    key: "enableAutoplay",
    value: function enableAutoplay() {
      // continuous scrolling
      if (this.scope.autoplayInterval <= 0) {
        this.enableContinuousAutoplay();
      } else {
        this.enableIntervalAutoplay();
      }
    }
  }, {
    key: "initSlideshowInnerSlides",
    value: function initSlideshowInnerSlides() {
      if (!this.slideElements) {
        throw new Error("No slides found!");
      } // If slides not added by template


      if (this.scope.items.length === 0) {
        this.addItemsByChilds();
      }
    }
  }, {
    key: "transformTemplateAttributes",
    value: function transformTemplateAttributes(attributes, index) {
      attributes = get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "transformTemplateAttributes", this).call(this, attributes, index);
      attributes.handle = attributes.handle || index.toString();
      attributes.index = index;
      attributes["class"] = attributes["class"] || "";
      attributes["class"] += " slide";
      return attributes;
    }
    /**
     * Add slide by template element
     * @param tpl template element
     */

  }, {
    key: "addItemByTemplate",
    value: function addItemByTemplate(tpl, index) {
      var attributes = this.getTemplateAttributes(tpl, index);
      var content = tpl.innerHTML;

      if (attributes.type) {
        if (attributes.type === "slide") {
          this.scope.items.push(bs4_slideshow_component_objectSpread(bs4_slideshow_component_objectSpread({}, attributes), {}, {
            content: content
          }));
        }

        if (attributes.type === "controls") {
          this.templateControls = content;
        }

        if (attributes.type === "indicators") {
          this.templateIndicators = content;
        }
      }
    }
    /**
     * Add slides by child elements (not as template elements)
     * @param tpl template element
     */

  }, {
    key: "addItemsByChilds",
    value: function addItemsByChilds() {
      var _this7 = this;

      if (!this.slideElements) {
        return;
      }

      this.slideElements.forEach(function (slideElement, index) {
        var handle = slideElement.getAttribute("handle") || slideElement.getAttribute("id") || index.toString();
        slideElement.setAttribute("index", index.toString());
        var attributes = {
          handle: handle,
          active: false,
          content: slideElement.innerHTML,
          index: index,
          position: bs4_slideshow_component_objectSpread(bs4_slideshow_component_objectSpread({}, slideElement.getBoundingClientRect()), {}, {
            centerY: 0,
            centerX: 0
          })
        };

        _this7.scope.items.push(attributes);
      });
    }
  }, {
    key: "getScrollPosition",
    value: function getScrollPosition() {
      var scrollPosition = utils_service_Utils.getScrollPosition(this.slideshowInner);
      return scrollPosition;
    }
    /**
     * get closest number
     * @see https://stackoverflow.com/a/35000557
     * @param goal the number which this number should be closest to
     * @param curr current number in loop
     * @param prev previous number or closest value found so far
     */

  }, {
    key: "getCurrentClosestNumber",
    value: function getCurrentClosestNumber(goal, curr, prev) {
      return Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev;
    }
  }, {
    key: "getMostCenteredSlideIndex",
    value: function getMostCenteredSlideIndex() {
      if (this.scope.items.length <= 0) {
        return -1;
      }

      var nearZero = Math.abs(this.scope.angle === "vertical" ? this.scope.items[0].position.centerY : this.scope.items[0].position.centerX);
      var minIndex = 0;

      for (var i = 1; i < this.scope.items.length; i++) {
        var position = Math.abs(this.scope.angle === "vertical" ? this.scope.items[i].position.centerY : this.scope.items[i].position.centerX);
        nearZero = this.getCurrentClosestNumber(0, position, nearZero);

        if (nearZero === position) {
          minIndex = i;
        }
      }

      return minIndex;
    }
  }, {
    key: "setAllSlidesUnactive",
    value: function setAllSlidesUnactive() {
      var excludeIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;

      if (!this.slideElements) {
        return;
      }

      for (var index = 0; index < this.scope.items.length; index++) {
        if (index !== excludeIndex) {
          if (this.scope.items[index]) {
            this.scope.items[index].active = false;
          }

          if (this.slideElements[index] && this.slideElements[index].classList.remove) {
            this.slideElements[index].classList.remove("active");
          }
        }
      }
    }
  }, {
    key: "setCenteredSlideActive",
    value: function setCenteredSlideActive() {
      var index = this.getMostCenteredSlideIndex();
      this.setAllSlidesUnactive(index);

      if (!this.scope.items[index]) {
        return -1;
      }

      this.scope.items[index].active = true;

      if (this.slideElements && this.slideElements[index].classList.add) {
        this.slideElements[index].classList.add("active");
      }

      return index;
    }
  }, {
    key: "isScrollableToIndex",
    value: function isScrollableToIndex(index) {
      if (!this.scope.items[index]) {
        return false;
      }

      var maxScrollTo = this.scope.angle === "vertical" ? this.getScrollPosition().maxY : this.getScrollPosition().maxX;
      var scrollTo = this.scope.angle === "vertical" ? this.slideshowInner.scrollTop + this.scope.items[index].position.centerY : this.slideshowInner.scrollLeft + this.scope.items[index].position.centerX;
      return scrollTo <= maxScrollTo && scrollTo >= 0;
    }
  }, {
    key: "scrollToNextSlide",
    value: function scrollToNextSlide() {
      this.setSlidePositions();
      var currentIndex = this.getMostCenteredSlideIndex();
      var nextIndex = currentIndex + this.scope.slidesToScroll;

      if (nextIndex >= this.slideElements.length) {
        nextIndex = nextIndex - this.slideElements.length;
      } // if (!this.isScrollableToIndex(nextIndex)) {
      //   nextIndex++;
      // }
      // if (nextIndex >= this.slideElements.length) {
      //   nextIndex = nextIndex - this.slideElements.length;
      // }


      return this.goTo(nextIndex);
    }
  }, {
    key: "scrollToPrevSlide",
    value: function scrollToPrevSlide() {
      this.setSlidePositions();
      var currentIndex = this.getMostCenteredSlideIndex();
      var prevIndex = currentIndex - this.scope.slidesToScroll;

      if (prevIndex < 0) {
        prevIndex = this.slideElements.length - 1 + (prevIndex + 1);
      }

      return this.goTo(prevIndex);
    }
  }, {
    key: "scrollToNearestSlide",
    value: function scrollToNearestSlide() {
      this.setSlidePositions();
      var nearestIndex = this.getMostCenteredSlideIndex();
      return this.goTo(nearestIndex);
    }
  }, {
    key: "setSlidePositions",
    value: function setSlidePositions() {
      var _this$slideElements;

      if (this.scope.items.length !== ((_this$slideElements = this.slideElements) === null || _this$slideElements === void 0 ? void 0 : _this$slideElements.length)) {
        var _this$slideElements2;

        console.warn("The slide objects must be the same size as the slide elements! ".concat(this.scope.items.length, " !== ").concat((_this$slideElements2 = this.slideElements) === null || _this$slideElements2 === void 0 ? void 0 : _this$slideElements2.length));
        return;
      }

      var mainBoundingClient = this.slideshowInner.getBoundingClientRect();

      for (var i = 0; i < this.scope.items.length; i++) {
        var slideElement = this.slideElements[i];
        var slideObject = this.scope.items[i];
        var rect = slideElement.getBoundingClientRect();
        rect.x -= mainBoundingClient.x;
        rect.y -= mainBoundingClient.y;
        slideObject.position = {
          x: rect.x,
          y: rect.y,
          width: rect.width,
          height: rect.height,
          bottom: rect.bottom,
          left: rect.left,
          right: rect.right,
          top: rect.top,
          toJSON: rect.toJSON,
          // 0 if element is in the middle / center
          centerY: rect.y + rect.height / 2 - mainBoundingClient.height / 2,
          // 0 if element is in the middle / center
          centerX: rect.x + rect.width / 2 - mainBoundingClient.width / 2
        };
      }
    }
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
    /**
     * Default custom Element method
     * Invoked when an attribute on the custom element changes.
     * @param attributeName
     * @param oldValue
     * @param newValue
     * @param namespace
     */

  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      var optionForSize = "xs";
      var responsiveScope = this.scope;

      if (this.observedAttributesToCheck && this.observedAttributesToCheck[attributeName]) {
        this.observedAttributesToCheck[attributeName].initialized = true;
      }

      newValue = this.parseAttribute(newValue);

      if (attributeName.startsWith("sm-")) {
        optionForSize = "sm";
        responsiveScope = this.scope.sm;
        attributeName = attributeName.slice(3);
      } else if (attributeName.startsWith("md-")) {
        optionForSize = "md";
        responsiveScope = this.scope.md;
        attributeName = attributeName.slice(3);
      } else if (attributeName.startsWith("lg-")) {
        optionForSize = "lg";
        responsiveScope = this.scope.lg;
        attributeName = attributeName.slice(3);
      } else if (attributeName.startsWith("xl-")) {
        optionForSize = "xl";
        responsiveScope = this.scope.xl;
        attributeName = attributeName.slice(3);
      }

      var parsedAttributeName = (0,type/* camelCase */.eV)(attributeName);

      if (responsiveScope && responsiveScope[parsedAttributeName]) {
        oldValue = responsiveScope[parsedAttributeName];
      } // automatically inject observed attributes to view responsiveScope


      responsiveScope[parsedAttributeName] = newValue; // call custom attribute changed callback with parsed values

      this.parsedAttributeChangedCallback(optionForSize + parsedAttributeName, oldValue, newValue, namespace);
      this.bindIfReady();
    }
    /**
     * Similar to attributeChangedCallback but attribute arguments are already parsed as they are stored in the scope
     * @param attributeName
     * @param oldValue
     * @param newValue
     * @param namespace
     */

  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      return get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      var _this$scrollEventsSer;

      this.removeEventListeners();
      (_this$scrollEventsSer = this.scrollEventsService) === null || _this$scrollEventsSer === void 0 ? void 0 : _this$scrollEventsSer.destroy();
      this.disableAutoplay();
      this.disableDesktopDragscroll();
      return get_default()(getPrototypeOf_default()(Bs4SlideshowComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs or the childs are templates
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el) || this.hasOnlyTemplateChilds()) {
        // ('Full template!', this.templateIndicators);
        return (bs4_slideshow_slides_component_default()) + this.templateControls + this.templateIndicators;
      } else {
        // this.debug('Append to template!');
        // Prepend control elements if no custom control elements in template are found
        if (this.controlsElements.length <= 0) {
          this.el.innerHTML += this.templateControls;
        }

        if (!this.indicatorsElement) {
          this.el.innerHTML += this.templateIndicators;
        }

        return null;
      }
    }
  }]);

  return Bs4SlideshowComponent;
}(TemplatesComponent);

defineProperty_default()(Bs4SlideshowComponent, "tagName", "bs4-slideshow");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-toggle-button/bs4-toggle-button.component.ts











function bs4_toggle_button_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_toggle_button_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_toggle_button_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * This components is used to trigger a toggle event used in other components or parts of your project. This site itself uses the bs4-toggle-button to open or close the sidebar.
 * @attribute "target-id" (Required) The id with which the toggle event is triggered
 * @method toggle	 Triggeres the toggle event
 * @property state Can be 'hidden' or something else
 * @property isClosed Is true if the state is 'hidden'
 * @property targetId Passed attribute value, see `target-id` attribute
 */



// TODO extend from Bs4ButtonComponent
var Bs4ToggleButtonComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4ToggleButtonComponent, _Component);

  var _super = bs4_toggle_button_component_createSuper(Bs4ToggleButtonComponent);

  createClass_default()(Bs4ToggleButtonComponent, [{
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["targetId"];
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["target-id"];
    }
  }]);

  function Bs4ToggleButtonComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ToggleButtonComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "eventDispatcher", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      targetId: undefined,
      toggle: _this.toggle,
      state: "undefined",
      isActive: true,
      isClosed: false
    });

    return _this;
  }

  createClass_default()(Bs4ToggleButtonComponent, [{
    key: "toggle",
    value: function toggle() {
      // console.debug('toggle', this.eventDispatcher);
      if (this.eventDispatcher) {
        this.eventDispatcher.trigger(TOGGLE_BUTTON.eventNames.toggle, this.scope.targetId);
      }
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _this$eventDispatcher;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4ToggleButtonComponent.prototype), "afterBind", this).call(this);

              case 2:
                return _context.abrupt("return", (_this$eventDispatcher = this.eventDispatcher) === null || _this$eventDispatcher === void 0 ? void 0 : _this$eventDispatcher.trigger(TOGGLE_BUTTON.eventNames.init, this.scope.targetId));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ToggleButtonComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ToggleButtonComponent.observedAttributes);
    }
  }, {
    key: "onToggledEvent",
    value: function onToggledEvent(state) {
      this.scope.state = state;
      this.scope.isActive = state !== "hidden" && state !== "removed";
      this.scope.isClosed = !this.scope.isActive;
    }
  }, {
    key: "initEventDispatcher",
    value: function initEventDispatcher(id) {
      if (this.eventDispatcher) {
        this.eventDispatcher.off(TOGGLE_BUTTON.eventNames.toggled, this.onToggledEvent);
      }

      this.eventDispatcher = new src.EventDispatcher(TOGGLE_BUTTON.nsPrefix + id);
      this.eventDispatcher.on(TOGGLE_BUTTON.eventNames.toggled, this.onToggledEvent.bind(this)); // Triggered state triggered by `..trigger('init', ...`

      this.eventDispatcher.on(TOGGLE_BUTTON.eventNames.state, this.onToggledEvent.bind(this));
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4ToggleButtonComponent.prototype), "attributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4ToggleButtonComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);

      if (attributeName === "targetId" && newValue) {
        this.initEventDispatcher(newValue);
      }
    } // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ToggleButtonComponent.prototype), "disconnectedCallback", this).call(this);

      if (this.eventDispatcher) {
        this.eventDispatcher.off(TOGGLE_BUTTON.eventNames.toggled, this.onToggledEvent);
      }
    }
  }, {
    key: "template",
    value: function template() {
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        console.warn("No child elements found, this component as no template so you need to define your own as child of this component.");
      }

      return null;
    }
  }]);

  return Bs4ToggleButtonComponent;
}(src.Component);

defineProperty_default()(Bs4ToggleButtonComponent, "tagName", "bs4-toggle-button");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-navbar/bs4-navbar.component.ts











function bs4_navbar_component_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = bs4_navbar_component_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function bs4_navbar_component_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return bs4_navbar_component_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return bs4_navbar_component_arrayLikeToArray(o, minLen); }

function bs4_navbar_component_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function bs4_navbar_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_navbar_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_navbar_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var Bs4NavbarComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4NavbarComponent, _Component);

  var _super = bs4_navbar_component_createSuper(Bs4NavbarComponent);

  createClass_default()(Bs4NavbarComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["collapse-selector"];
    }
  }]);

  function Bs4NavbarComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4NavbarComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      toggle: _this.toggle,
      show: _this.show,
      hide: _this.hide,
      isCollapsed: true,
      collapseSelector: ".navbar-collapse"
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "collapseElements", []);

    defineProperty_default()(assertThisInitialized_default()(_this), "collapseServices", []);

    defineProperty_default()(assertThisInitialized_default()(_this), "routerEvents", void 0);

    return _this;
  }

  createClass_default()(Bs4NavbarComponent, [{
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(Bs4NavbarComponent.prototype), "afterBind", this).call(this);

              case 2:
                this.hide();

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "toggle",
    value: function toggle(event) {
      var _iterator = bs4_navbar_component_createForOfIteratorHelper(this.collapseServices),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var collapseService = _step.value;
          collapseService.toggle();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }
    }
  }, {
    key: "show",
    value: function show(event) {
      var _iterator2 = bs4_navbar_component_createForOfIteratorHelper(this.collapseServices),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var collapseService = _step2.value;
          collapseService.show();
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }
    }
  }, {
    key: "hide",
    value: function hide(event) {
      var _iterator3 = bs4_navbar_component_createForOfIteratorHelper(this.collapseServices),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var collapseService = _step3.value;
          collapseService.hide();
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4NavbarComponent.prototype), "connectedCallback", this).call(this);

      this.routerEvents = new src.EventDispatcher("main");
      this.routerEvents.on("newPageReady", this.onNewPageReady.bind(this));
      this.setCollapseElement();
      this.onStateChange();
      this.init(Bs4NavbarComponent.observedAttributes);
    }
  }, {
    key: "setCollapseElement",
    value: function setCollapseElement() {
      // Remove old event listeners
      this.removeCollapseEventListeners();
      this.collapseElements = this.el.querySelectorAll(this.scope.collapseSelector) || []; // Add new event listeners

      this.addCollapseEventListeners();

      if (this.collapseElements) {
        for (var _i = 0, _Array$from = Array.from(this.collapseElements); _i < _Array$from.length; _i++) {
          var collapseElement = _Array$from[_i];
          this.collapseServices.push(new CollapseService(collapseElement, [this.el], {
            toggle: false
          }));
        }
      }

      this.hide();
    }
  }, {
    key: "addCollapseEventListeners",
    value: function addCollapseEventListeners() {
      var _this2 = this;

      if (this.collapseElements) {
        this.collapseElements.forEach(function (collapseElement) {
          collapseElement.addEventListener(EVENT_SHOWN, _this2.onStateChange.bind(_this2));
          collapseElement.addEventListener(EVENT_HIDDEN, _this2.onStateChange.bind(_this2));
        });
      }
    }
  }, {
    key: "removeCollapseEventListeners",
    value: function removeCollapseEventListeners() {
      var _this3 = this;

      if (this.collapseElements) {
        this.collapseElements.forEach(function (collapseElement) {
          collapseElement.removeEventListener(EVENT_SHOWN, _this3.onStateChange.bind(_this3));
          collapseElement.removeEventListener(EVENT_HIDDEN, _this3.onStateChange.bind(_this3));
        });
      }
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4NavbarComponent.prototype), "disconnectedCallback", this).call(this);

      this.removeCollapseEventListeners();

      if (this.routerEvents) {
        this.routerEvents.off("newPageReady", this.onNewPageReady);
      }
    }
  }, {
    key: "onStateChange",
    value: function onStateChange() {
      var _this$collapseService;

      this.scope.isCollapsed = !!((_this$collapseService = this.collapseServices[0]) === null || _this$collapseService === void 0 ? void 0 : _this$collapseService.isCollapsed());

      if (this.scope.isCollapsed) {
        this.el.classList.add(CLASS_NAME_COLLAPSED);
        this.el.setAttribute("aria-expanded", "false");
      } else {
        this.el.classList.remove(CLASS_NAME_COLLAPSED);
        this.el.setAttribute("aria-expanded", "true");
      }
    }
  }, {
    key: "onNewPageReady",
    value: function onNewPageReady() {
      this.hide();
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4NavbarComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);

      if (attributeName === "collapseSelector") {
        this.setCollapseElement();
      }
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return Bs4NavbarComponent;
}(src.Component);

defineProperty_default()(Bs4NavbarComponent, "tagName", "bs4-navbar");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-tabs/bs4-tabs-horizontal.component.html
var bs4_tabs_horizontal_component = __webpack_require__(5747);
var bs4_tabs_horizontal_component_default = /*#__PURE__*/__webpack_require__.n(bs4_tabs_horizontal_component);

// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-tabs/bs4-tabs-vertical.component.html
var bs4_tabs_vertical_component = __webpack_require__(5510);
var bs4_tabs_vertical_component_default = /*#__PURE__*/__webpack_require__.n(bs4_tabs_vertical_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-tabs/bs4-tabs.component.ts











function bs4_tabs_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_tabs_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_tabs_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }







var bs4_tabs_component_handleize = src.handleizeFormatter.read;
var Bs4TabsComponent = /*#__PURE__*/function (_TemplatesComponent) {
  inherits_default()(Bs4TabsComponent, _TemplatesComponent);

  var _super = bs4_tabs_component_createSuper(Bs4TabsComponent);

  createClass_default()(Bs4TabsComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["option-tabs-auto-height", "option-tabs-angle", "tab-0-title", "tab-0-content", "tab-0-handle", "tab-1-title", "tab-1-content", "tab-1-handle", "tab-2-title", "tab-2-content", "tab-2-handle", "tab-3-title", "tab-3-content", "tab-3-handle", "tab-4-title", "tab-4-content", "tab-4-handle", "tab-5-title", "tab-5-content", "tab-5-handle", "tab-6-title", "tab-6-content", "tab-6-handle", "tab-7-title", "tab-7-content", "tab-7-handle", "tab-8-title", "tab-8-content", "tab-8-handle", "tab-9-title", "tab-9-content", "tab-9-handle", "tab-10-title", "tab-10-content", "tab-10-handle", "tab-11-title", "tab-11-content", "tab-11-handle", "tab-12-title", "tab-12-content", "tab-12-handle", "tab-13-title", "tab-13-content", "tab-13-handle", "tab-14-title", "tab-14-content", "tab-14-handle", "tab-15-title", "tab-15-content", "tab-15-handle", "tab-16-title", "tab-16-content", "tab-16-handle", "tab-17-title", "tab-17-content", "tab-17-handle", "tab-18-title", "tab-18-content", "tab-18-handle", "tab-19-title", "tab-19-content", "tab-19-handle"];
    }
  }]);

  function Bs4TabsComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4TabsComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateAttributes", [{
      name: "title",
      required: true
    }, {
      name: "handle",
      required: false
    }, {
      name: "type",
      required: false
    }, {
      name: "active",
      required: false
    }, {
      name: "index",
      required: false
    }]);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      items: new Array(),
      activate: _this.activate,
      deactivate: _this.deactivate,
      deactivateAll: _this.deactivateAll,
      optionTabsAutoHeight: false,
      optionTabsAngle: "horizontal"
    });

    defineProperty_default()(assertThisInitialized_default()(_this), "tabs", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "tabPanes", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scrollable", void 0);

    return _this;
  }
  /**
   * Make all tabs panes as height as the heighest tab pane
   */


  createClass_default()(Bs4TabsComponent, [{
    key: "setHeight",
    value: function setHeight() {
      if (this.scope.optionTabsAutoHeight) {
        return;
      } // Bind static template


      this.setElements();
      var heigest = 0;

      if (!this.tabPanes) {
        return;
      }

      this.tabPanes.forEach(function (tabPane) {
        if (!tabPane.style) {
          return;
        }

        tabPane.style.height = "auto";
        tabPane.style.display = "block";
        var height = tabPane.offsetHeight || 0;

        if (height > heigest) {
          heigest = height;
        }
      });
      this.tabPanes.forEach(function (tabPane) {
        if (!tabPane.style) {
          return;
        } // Reset display style property


        tabPane.style.display = "";

        if (heigest > 0) {
          tabPane.style.height = heigest + "px";
        }
      });
    }
  }, {
    key: "deactivateAll",
    value: function deactivateAll() {
      for (var index = 0; index < this.scope.items.length; index++) {
        var tab = this.scope.items[index];
        this.deactivate(tab);
      }
    }
  }, {
    key: "deactivate",
    value: function deactivate(tab) {
      tab.active = false;
      var firstTabContentChild = this.getTabContentChildByIndex(tab.index);

      if (firstTabContentChild) {
        this.triggerVisibilityChangedForElement(firstTabContentChild, tab.active);
      }
    }
  }, {
    key: "activate",
    value: function activate(tab) {
      this.deactivateAll();
      tab.active = true;
      var firstTabContentChild = this.getTabContentChildByIndex(tab.index);

      if (firstTabContentChild) {
        this.triggerVisibilityChangedForElement(firstTabContentChild, tab.active);
      }

      if (event) {
        event.preventDefault();
      }
    }
  }, {
    key: "activateFirstTab",
    value: function activateFirstTab() {
      if (this.scope.items.length > 0) {
        this.activate(this.scope.items[0]);
      }
    }
  }, {
    key: "getTabContentChildByIndex",
    value: function getTabContentChildByIndex(index) {
      return this.el.querySelector(".tab-content .tab-pane:nth-child(".concat(index + 1, ") > *")) || undefined;
    }
    /**
     * Trigger `visibility-changed` for components that need to update if visibility changes.
     * E.g. this event is used the bs4-slideshow component
     * @param element
     * @param visibile
     */

  }, {
    key: "triggerVisibilityChangedForElement",
    value: function triggerVisibilityChangedForElement(element, visibile) {
      setTimeout(function () {
        // Use this event to update any custom element when it becomes visibile
        element.dispatchEvent(new CustomEvent("visibility-changed", {
          detail: {
            visibile: visibile
          }
        }));
      }, 200);
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4TabsComponent.prototype), "connectedCallback", this).call(this);

      this.initTabs();
      this.activateFirstTab();
      this.init(Bs4TabsComponent.observedAttributes);
    }
  }, {
    key: "setElements",
    value: function setElements() {
      this.tabs = this.el.querySelectorAll('[role="tab"]');
      this.tabPanes = this.el.querySelectorAll('[role="tabpanel"]');
      this.scrollable = this.el.querySelector("[scrollable]");
    }
  }, {
    key: "resizeTabsArray",
    value: function resizeTabsArray(newSize) {
      while (newSize > this.scope.items.length) {
        this.scope.items.push({
          handle: "",
          title: "",
          content: "",
          active: false,
          index: this.scope.items.length - 1
        });
      }
    }
  }, {
    key: "onTabShownEventHandler",
    value: function onTabShownEventHandler(event) {
      var curTab = event.target || event.srcElement;

      if (!curTab) {
        return;
      }

      if (this.scrollable) {
        var tabScrollPosition = curTab.getBoundingClientRect();
        var scrollLeftTo = this.scrollable.scrollLeft || 0 + tabScrollPosition.left; // TODO animate
        // this.scrollable.animate({ scrollLeft: scrollLeftTo}, 'slow');

        this.scrollable.scrollLeft = scrollLeftTo;
      }
    }
  }, {
    key: "onResizeEventHandler",
    value: function onResizeEventHandler() {
      this.setHeight();
    }
  }, {
    key: "initTabs",
    value: function initTabs() {
      var _this2 = this;

      // Bind static template
      this.setElements();

      if (this.tabs) {
        this.tabs.forEach(function (tab) {
          tab.removeEventListener("shown.bs.tab", _this2.onTabShownEventHandler);
          tab.addEventListener("shown.bs.tab", _this2.onTabShownEventHandler);
        });
      }

      var onResize = function onResize() {
        (0,control/* throttle */.P2)(_this2.onResizeEventHandler.bind(_this2))();
      };

      if (this.scope.optionTabsAutoHeight) {
        window.removeEventListener("resize", onResize);
        window.addEventListener("resize", onResize);
        this.onResizeEventHandler();
      }
    }
  }, {
    key: "addTabByAttribute",
    value: function addTabByAttribute(attributeName, newValue) {
      var index = Number(attributeName.replace(/[^0-9]/g, ""));

      if (index >= this.scope.items.length) {
        this.resizeTabsArray(index + 1);
      }

      this.scope.items[index].index = index;

      if (attributeName.endsWith("Content")) {
        this.scope.items[index].content = newValue;
      }

      if (attributeName.endsWith("Title")) {
        this.scope.items[index].title = newValue;
        this.scope.items[index].handle = this.scope.items[index].handle || bs4_tabs_component_handleize(this.scope.items[index].title);
      }

      if (attributeName.endsWith("Handle")) {
        this.scope.items[index].handle = newValue;
      } // if is first tab


      if (this.scope.items.length > 0 && this.scope.items[0] && this.scope.items[0].content.length > 0 && this.scope.items[0].title.length > 0 && this.scope.items[0].handle.length > 0) {
        this.activateFirstTab();
      }
    }
    /**
     * Extends TemplatesComponent.transformTemplateAttributes to set the handle by the title if no handle is set
     */

  }, {
    key: "transformTemplateAttributes",
    value: function transformTemplateAttributes(attributes, index) {
      attributes = get_default()(getPrototypeOf_default()(Bs4TabsComponent.prototype), "transformTemplateAttributes", this).call(this, attributes, index);

      if (!attributes.handle && attributes.title) {
        attributes.handle = bs4_tabs_component_handleize(attributes.title);
      }

      attributes.active = attributes.active || false;
      return attributes;
    }
  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      get_default()(getPrototypeOf_default()(Bs4TabsComponent.prototype), "parsedAttributeChangedCallback", this).call(this, attributeName, oldValue, newValue, namespace);

      if (attributeName.startsWith("tab")) {
        this.addTabByAttribute(attributeName, newValue);
        this.initTabs();
      }
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _this3 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // Workaround
                setTimeout(function () {
                  if (_this3.scope.optionTabsAutoHeight) {
                    _this3.setHeight();
                  }
                }, 500);

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs or the childs are templates
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el) || this.hasOnlyTemplateChilds()) {
        if (this.scope.optionTabsAngle === "horizontal") {
          return (bs4_tabs_horizontal_component_default());
        } else {
          return (bs4_tabs_vertical_component_default());
        }
      } else {
        return null;
      }
    }
  }]);

  return Bs4TabsComponent;
}(TemplatesComponent);

defineProperty_default()(Bs4TabsComponent, "tagName", "bs4-tabs");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-form/bs4-form.component.html
var bs4_form_component = __webpack_require__(5038);
var bs4_form_component_default = /*#__PURE__*/__webpack_require__.n(bs4_form_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-form/bs4-form.component.ts











function bs4_form_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_form_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_form_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var Bs4FormComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4FormComponent, _Component);

  var _super = bs4_form_component_createSuper(Bs4FormComponent);

  createClass_default()(Bs4FormComponent, [{
    key: "getDefaultScope",
    value: function getDefaultScope() {
      var scope = {
        id: (0,dom/* getUID */.Kr)("form"),
        form: {
          fields: {},
          valid: false,
          error: undefined
        },
        disableSubmitUntilChange: false,
        submitDisabled: false,
        onSubmit: this.onSubmit,
        useAjax: true,
        ajaxRequestType: "form",
        autoSetFormData: true,
        stripHtml: true
      };
      return scope;
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["id", "disable-submit-until-change", "use-ajax", "ajax-request-type", "auto-set-form-data", "strip-html"];
    }
  }]);

  function Bs4FormComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4FormComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "formEl", null);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", _this.getDefaultScope());

    return _this;
  }

  createClass_default()(Bs4FormComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4FormComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4FormComponent.observedAttributes);
      this.addEventListeners();
    }
  }, {
    key: "addEventListeners",
    value: function addEventListeners() {
      var _this2 = this;

      if (this.scope.disableSubmitUntilChange) {
        this.el.addEventListener("input", function () {
          _this2.scope.submitDisabled = false;
        });
      }
    }
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                get_default()(getPrototypeOf_default()(Bs4FormComponent.prototype), "beforeBind", this).call(this);

                this.el.id = this.scope.id;

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                get_default()(getPrototypeOf_default()(Bs4FormComponent.prototype), "afterBind", this).call(this);

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "stripHtml",
    value: function stripHtml() {
      for (var key in this.scope.form.fields) {
        if (this.scope.form.fields[key] && typeof this.scope.form.fields[key] === "string") {
          this.scope.form.fields[key] = (0,type/* stripHtml */.Vt)(this.scope.form.fields[key]);
        }
      }
    }
  }, {
    key: "onSubmit",
    value: function onSubmit(event, el) {
      this.debug("onSubmit", event, el);

      if (!this.formEl) {
        console.warn("No form found");
        return false;
      }

      if (this.scope.autoSetFormData) {
        this.getFormValues();
      }

      if (this.scope.stripHtml) {
        this.stripHtml();
      }

      this.validate(this.formEl, this.scope.form);

      if (!this.scope.form.valid) {
        console.info("form not valid", this.scope); // stop native submit

        event.preventDefault();
        event.stopPropagation();
        return;
      }

      var submitSettings = this.getSubmitSettings(event);

      if ((submitSettings === null || submitSettings === void 0 ? void 0 : submitSettings.target) === "_blank") {
        return true;
      }

      if (this.scope.useAjax) {
        // stop native submit because we submit the data using javascript
        event.preventDefault();
        event.stopPropagation();
        this.ajaxSubmit(event, el);
      }
    }
    /**
     * TODO Not tested in the wild, may need to be adjusted. Also the error handling is untested
     */

  }, {
    key: "ajaxSubmit",
    value: function ajaxSubmit(event, el) {
      var _this3 = this;

      this.debug("onSubmit", event, el, this.scope);
      var submitSettings = this.getSubmitSettings(event);

      if (!submitSettings) {
        console.warn("Can't get submit settings");
        return;
      }

      if (this.scope.autoSetFormData) {
        this.getFormValues();
      } // This method is untested in the wild


      src.HttpService.fetch(submitSettings.action, submitSettings.method, this.scope.form.fields, submitSettings.type).then(function (res) {
        var message = res.body && res.body.message ? res.body.message : "";

        if (Number(res.status) >= 400) {
          // TODO generate message by status
          _this3.onErrorSubmit(res.status, message, res.body);
        }

        _this3.onSuccessSubmit(res.status, message, res.body);
      })["catch"](function (err) {
        console.error(err); //

        _this3.onErrorSubmit(err.status, err.body.message, err.body);
      });
    }
  }, {
    key: "getSubmitSettings",
    value: function getSubmitSettings(event) {
      var _originalEvent;

      if (!this.formEl) {
        console.warn("No form found");
        return null;
      }

      var action = this.formEl.action;
      var method = this.formEl.method;
      var target = this.formEl.method; // Overwrite action by formaction attribute: <button type="submit" formaction="/foobar">
      // TODO submitter from vanilla event
      // If this is a jquery event

      if (event === null || event === void 0 ? void 0 : (_originalEvent = event.originalEvent) === null || _originalEvent === void 0 ? void 0 : _originalEvent.submitter) {
        var _originalEvent2;

        var submitter = event === null || event === void 0 ? void 0 : (_originalEvent2 = event.originalEvent) === null || _originalEvent2 === void 0 ? void 0 : _originalEvent2.submitter;
        action = (submitter === null || submitter === void 0 ? void 0 : submitter.formAction) || action;
        method = (submitter === null || submitter === void 0 ? void 0 : submitter.formMethod) || method;
        target = (submitter === null || submitter === void 0 ? void 0 : submitter.formTarget) || target;
      }

      var settings = {
        action: action,
        method: method.toUpperCase(),
        target: target,
        type: this.scope.ajaxRequestType
      };
      return settings;
    }
  }, {
    key: "onErrorSubmit",
    value: function onErrorSubmit(status, message, response) {
      this.debug("onErrorSubmit");
      this.el.dispatchEvent(new CustomEvent("submit-error", {
        detail: {
          status: status,
          message: message,
          response: response
        }
      }));
    }
  }, {
    key: "onSuccessSubmit",
    value: function onSuccessSubmit(status, message, response) {
      this.debug("onSuccessSubmit");

      if (this.scope.disableSubmitUntilChange) {
        this.scope.submitDisabled = true;
      }

      this.el.dispatchEvent(new CustomEvent("submit-success", {
        detail: {
          status: status,
          message: message,
          response: response
        }
      }));
    }
  }, {
    key: "validate",
    value: function validate(form, validationScope) {
      validationScope.valid = form.checkValidity();
      validationScope.error = form.validationMessage; // only show validation if we want to give a hint to the user that something is wrong

      if (!validationScope.valid) {
        this.el.dispatchEvent(new CustomEvent("validation-error"));
        form.classList.add("was-validated");
      }
    }
  }, {
    key: "getFormValues",
    value: function getFormValues() {
      if (!this.formEl) {
        console.warn("No form found");
        return null;
      } // this.formEl.querySelectorAll("input").forEach((element) => {
      //   this.scope.form.fields[camelCase(element.name)] = getInputValue(element);
      // });


      this.scope.form.fields = new FormData(this.formEl);
      return this.scope.form.fields;
    }
  }, {
    key: "initForm",
    value: function initForm() {
      var formEl = this.el.querySelector("form");

      if (formEl && formEl.length > 0) {
        this.formEl = formEl;
        this.formEl.classList.add("needs-validation");
        this.formEl.setAttribute("novalidate", "");
      } else {
        console.warn("bs4 form without children found");
      }
    }
  }, {
    key: "template",
    value: function template() {
      if ((0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        this.initForm();
        return null;
      } else {
        return (bs4_form_component_default());
      }
    }
  }]);

  return Bs4FormComponent;
}(src.Component);

defineProperty_default()(Bs4FormComponent, "tagName", "bs4-form");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-notification-container/bs4-notification-container.component.html
var bs4_notification_container_component = __webpack_require__(2818);
var bs4_notification_container_component_default = /*#__PURE__*/__webpack_require__.n(bs4_notification_container_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-notification-container/bs4-notification-container.component.ts











function bs4_notification_container_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_notification_container_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_notification_container_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




var Bs4NotificationContainerComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4NotificationContainerComponent, _Component);

  var _super = bs4_notification_container_component_createSuper(Bs4NotificationContainerComponent);

  createClass_default()(Bs4NotificationContainerComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["icon-url", "position-class", "channel-name"];
    }
  }]);

  function Bs4NotificationContainerComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4NotificationContainerComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "notificationDispatcher", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      notifications: [],
      positionClass: "absolute-bottom absolute-center",
      channelName: "toast",
      onItemHide: _this.onItemHide
    });

    return _this;
  }

  createClass_default()(Bs4NotificationContainerComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4NotificationContainerComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4NotificationContainerComponent.observedAttributes);
    } // Called by child if notification item wants to be removed

  }, {
    key: "onItemHide",
    value: function onItemHide(event, el, index, notification) {
      if (index > -1) {
        this.notifications.splice(index, 1);
      } else {
        console.warn("Notification not found", notification);
      }
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var _this2 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                get_default()(getPrototypeOf_default()(Bs4NotificationContainerComponent.prototype), "afterBind", this).call(this); // Add event dispatcher to listen for toast notifications


                this.notificationDispatcher = new src.EventDispatcher(this.scope.channelName);
                this.notificationDispatcher.on("show-notification", function (notification) {
                  _this2.debug("Received notification container on " + _this2.scope.channelName, _this2.scope, notification);

                  _this2.scope.notifications.push(notification);
                });

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "template",
    value: function template() {
      // Only set the component template if there no childs or the childs are templates
      if (!(0,dom/* hasChildNodesTrim */.Np)(this.el)) {
        return (bs4_notification_container_component_default());
      }

      return null;
    }
  }]);

  return Bs4NotificationContainerComponent;
}(src.Component);

defineProperty_default()(Bs4NotificationContainerComponent, "tagName", "bs4-notification-container");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-toast-item/bs4-toast-item.component.html
var bs4_toast_item_component = __webpack_require__(8419);
var bs4_toast_item_component_default = /*#__PURE__*/__webpack_require__.n(bs4_toast_item_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-toast-item/bs4-toast-item.component.ts











function bs4_toast_item_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_toast_item_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_toast_item_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var Bs4ToastItemComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4ToastItemComponent, _Component);

  var _super = bs4_toast_item_component_createSuper(Bs4ToastItemComponent);

  createClass_default()(Bs4ToastItemComponent, [{
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["toast"];
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["toast", "icon-url", "index"];
    }
  }]);

  function Bs4ToastItemComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ToastItemComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "toastService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      onHidden: _this.onHidden,
      index: -1,
      dismiss: _this.dismiss,
      toast: undefined
    });

    return _this;
  }

  createClass_default()(Bs4ToastItemComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ToastItemComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ToastItemComponent.observedAttributes);
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                get_default()(getPrototypeOf_default()(Bs4ToastItemComponent.prototype), "afterBind", this).call(this);

                this.initToastService();

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "initToastService",
    value: function initToastService() {
      var toast = this.scope.toast;
      var toastEl = this.el.firstElementChild;

      if (toast && toastEl) {
        this.toastService = new ToastService(toastEl, {
          delay: toast.delay !== undefined ? toast.delay : ToastService.Default.delay,
          autohide: toast.autoHide !== undefined ? toast.autoHide : ToastService.Default.autohide,
          animation: toast.animation !== undefined ? toast.animation : ToastService.Default.animation
        }); // Call onHidden on hidden event once

        toastEl.addEventListener(toast_service_EVENT_HIDDEN, this.onHidden.bind(this), {
          once: true
        }); // show toast using the toastservice

        this.toastService.show();
      }
    } // can be called if toast should be removed

  }, {
    key: "dismiss",
    value: function dismiss() {
      var _this$toastService;

      (_this$toastService = this.toastService) === null || _this$toastService === void 0 ? void 0 : _this$toastService.hide();
    } // remove toast from dom once shown

  }, {
    key: "onHidden",
    value: function onHidden(event, el) {
      var _this$scope$$parent;

      if (!el) {
        el = (0,dom/* getElementFromEvent */._f)(event);
      }

      var toastContainer = ((_this$scope$$parent = this.scope.$parent) === null || _this$scope$$parent === void 0 ? void 0 : _this$scope$$parent.$parent) || null;

      if (typeof (toastContainer === null || toastContainer === void 0 ? void 0 : toastContainer.onItemHide) === "function" && this.scope.toast) {
        toastContainer.onItemHide(event, el, this.scope.index, this.scope.toast);
      }
    }
  }, {
    key: "template",
    value: function template() {
      return (bs4_toast_item_component_default());
    }
  }]);

  return Bs4ToastItemComponent;
}(src.Component);

defineProperty_default()(Bs4ToastItemComponent, "tagName", "bs4-toast-item");
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-modal-item/bs4-modal-item.component.html
var bs4_modal_item_component = __webpack_require__(3292);
var bs4_modal_item_component_default = /*#__PURE__*/__webpack_require__.n(bs4_modal_item_component);

// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/bs4-modal-item/bs4-modal-item.component.ts











function bs4_modal_item_component_createSuper(Derived) { var hasNativeReflectConstruct = bs4_modal_item_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function bs4_modal_item_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var Bs4ModalItemComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(Bs4ModalItemComponent, _Component);

  var _super = bs4_modal_item_component_createSuper(Bs4ModalItemComponent);

  createClass_default()(Bs4ModalItemComponent, [{
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["modal"];
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["modal", "index"];
    }
  }]);

  function Bs4ModalItemComponent(element) {
    var _this;

    classCallCheck_default()(this, Bs4ModalItemComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "modalService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      onHidden: _this.onHidden,
      index: -1,
      dismiss: _this.dismiss
    });

    return _this;
  }

  createClass_default()(Bs4ModalItemComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(Bs4ModalItemComponent.prototype), "connectedCallback", this).call(this);

      this.init(Bs4ModalItemComponent.observedAttributes);
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                get_default()(getPrototypeOf_default()(Bs4ModalItemComponent.prototype), "afterBind", this).call(this);

                this.initModalService();

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "initModalService",
    value: function initModalService() {
      var modal = this.scope.modal;
      var modalEl = this.el.firstElementChild;

      if (modal && modalEl) {
        this.modalService = new ModalService(modalEl, {
          focus: modal.focus !== undefined ? modal.focus : ModalService.Default.focus,
          keyboard: modal.keyboard !== undefined ? modal.keyboard : ModalService.Default.keyboard,
          backdrop: modal.backdrop !== undefined ? modal.backdrop : ModalService.Default.backdrop,
          show: modal.show !== undefined ? modal.show : ModalService.Default.show
        }); // Call onHidden on hidden event once

        modalEl.addEventListener(modal_service_EVENT_HIDDEN, this.onHidden.bind(this), {
          once: true
        }); // show modal using the modalservice

        this.modalService.show(this.el);
      }
    } // Can be called if modal should be removed

  }, {
    key: "dismiss",
    value: function dismiss(event) {
      var _this$modalService;

      (_this$modalService = this.modalService) === null || _this$modalService === void 0 ? void 0 : _this$modalService.hide(event);
    } // Remove modal from dom once shown

  }, {
    key: "onHidden",
    value: function onHidden(event, el) {
      var _this$scope$$parent;

      if (!el) {
        el = (0,dom/* getElementFromEvent */._f)(event);
      }

      var notificationContainer = ((_this$scope$$parent = this.scope.$parent) === null || _this$scope$$parent === void 0 ? void 0 : _this$scope$$parent.$parent) || null;

      if (typeof (notificationContainer === null || notificationContainer === void 0 ? void 0 : notificationContainer.onItemHide) === "function" && this.scope.modal) {
        notificationContainer.onItemHide(event, el, this.scope.index, this.scope.modal);
      }
    }
  }, {
    key: "template",
    value: function template() {
      return (bs4_modal_item_component_default());
    }
  }]);

  return Bs4ModalItemComponent;
}(src.Component);

defineProperty_default()(Bs4ModalItemComponent, "tagName", "bs4-modal-item");
// CONCATENATED MODULE: ../../riba/packages/bs4/src/components/index.ts

















// CONCATENATED MODULE: ../../riba/packages/bs4/src/bs4.module.ts

 // import * as formatters from './formatters/bs4.formatters';


var bs4Module = {
  binders: binders_namespaceObject,
  services: services_namespaceObject,
  formatters: {},
  components: components_namespaceObject
};
// CONCATENATED MODULE: ../../riba/packages/bs4/src/index.ts


 // export * as formatters from './formatters/bs4.formatters';

 // export * from './interfaces/interfaces';




/***/ }),

/***/ 6020:
/***/ (() => {



/***/ }),

/***/ 65:
/***/ (() => {



/***/ }),

/***/ 8869:
/***/ (() => {



/***/ }),

/***/ 3986:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Toast": () => /* reexport safe */ _toast__WEBPACK_IMPORTED_MODULE_8__.F
/* harmony export */ });
/* harmony import */ var _carousel_class_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6020);
/* harmony import */ var _carousel_class_name__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_carousel_class_name__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_carousel_class_name__WEBPACK_IMPORTED_MODULE_0__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _carousel_class_name__WEBPACK_IMPORTED_MODULE_0__.Toast; } });
/* harmony import */ var _carousel_direction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(65);
/* harmony import */ var _carousel_direction__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_carousel_direction__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_carousel_direction__WEBPACK_IMPORTED_MODULE_1__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _carousel_direction__WEBPACK_IMPORTED_MODULE_1__.Toast; } });
/* harmony import */ var _carousel_option__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8869);
/* harmony import */ var _carousel_option__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_carousel_option__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_carousel_option__WEBPACK_IMPORTED_MODULE_2__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _carousel_option__WEBPACK_IMPORTED_MODULE_2__.Toast; } });
/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8591);
/* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1733);
/* harmony import */ var _placement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1579);
/* harmony import */ var _placement__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_placement__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_placement__WEBPACK_IMPORTED_MODULE_5__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _placement__WEBPACK_IMPORTED_MODULE_5__.Toast; } });
/* harmony import */ var _popover_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(26);
/* harmony import */ var _popover_options__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_popover_options__WEBPACK_IMPORTED_MODULE_6__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_popover_options__WEBPACK_IMPORTED_MODULE_6__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _popover_options__WEBPACK_IMPORTED_MODULE_6__.Toast; } });
/* harmony import */ var _share_item__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6102);
/* harmony import */ var _share_item__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_share_item__WEBPACK_IMPORTED_MODULE_7__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_share_item__WEBPACK_IMPORTED_MODULE_7__, "Toast")) __webpack_require__.d(__webpack_exports__, { "Toast": function() { return _share_item__WEBPACK_IMPORTED_MODULE_7__.Toast; } });
/* harmony import */ var _toast__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(9317);











/***/ }),

/***/ 8591:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* unused harmony export Modal */
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1733);







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var Modal = /*#__PURE__*/(/* unused pure expression or super */ null && (function (_Notification) {
  _inherits(Modal, _Notification);

  var _super = _createSuper(Modal);

  function Modal(_ref) {
    var _this;

    var title = _ref.title,
        message = _ref.message,
        iconUrl = _ref.iconUrl,
        focus = _ref.focus,
        keyboard = _ref.keyboard,
        backdrop = _ref.backdrop,
        show = _ref.show,
        buttons = _ref.buttons,
        modalService = _ref.modalService,
        contextualClass = _ref.contextualClass,
        channel = _ref.channel,
        $event = _ref.$event,
        $context = _ref.$context;

    _classCallCheck(this, Modal);

    _this = _super.call(this, "modal", title);

    _defineProperty(_assertThisInitialized(_this), "message", void 0);

    _defineProperty(_assertThisInitialized(_this), "iconUrl", void 0);

    _defineProperty(_assertThisInitialized(_this), "focus", void 0);

    _defineProperty(_assertThisInitialized(_this), "keyboard", void 0);

    _defineProperty(_assertThisInitialized(_this), "backdrop", void 0);

    _defineProperty(_assertThisInitialized(_this), "show", void 0);

    _defineProperty(_assertThisInitialized(_this), "buttons", []);

    _defineProperty(_assertThisInitialized(_this), "modalService", void 0);

    _defineProperty(_assertThisInitialized(_this), "contextualClass", void 0);

    _this.message = message;
    _this.iconUrl = iconUrl;
    _this.focus = focus;
    _this.keyboard = keyboard;
    _this.backdrop = backdrop;
    _this.show = show;
    _this.buttons = buttons || [];
    _this.modalService = modalService;
    _this.contextualClass = contextualClass;
    _this.channel = channel;
    _this.$event = $event;
    _this.$context = $context;
    return _this;
  }

  return Modal;
}(Notification)));

/***/ }),

/***/ 1733:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "P": () => /* binding */ Notification
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);


var Notification = function Notification(type, title) {
  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Notification);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "type", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "title", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "channel", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "$event", void 0);

  _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "$context", void 0);

  this.type = type;
  this.title = title;
};

/***/ }),

/***/ 1579:
/***/ (() => {



/***/ }),

/***/ 26:
/***/ (() => {



/***/ }),

/***/ 6102:
/***/ (() => {



/***/ }),

/***/ 9317:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "F": () => /* binding */ Toast
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _notification__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(1733);







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var Toast = /*#__PURE__*/function (_Notification) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(Toast, _Notification);

  var _super = _createSuper(Toast);

  function Toast(_ref) {
    var _this;

    var title = _ref.title,
        message = _ref.message,
        iconUrl = _ref.iconUrl,
        delay = _ref.delay,
        autoHide = _ref.autoHide,
        animation = _ref.animation,
        toastService = _ref.toastService,
        contextualClass = _ref.contextualClass,
        channel = _ref.channel,
        $event = _ref.$event,
        $context = _ref.$context;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Toast);

    _this = _super.call(this, "toast", title);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "message", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "iconUrl", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "delay", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "autoHide", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "animation", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "toastService", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default()(_this), "contextualClass", void 0);

    _this.message = message;
    _this.iconUrl = iconUrl;
    _this.delay = delay;
    _this.autoHide = autoHide;
    _this.animation = animation;
    _this.toastService = toastService;
    _this.contextualClass = contextualClass;
    _this.channel = channel;
    _this.$event = $event;
    _this.$context = $context;
    return _this;
  }

  return Toast;
}(_notification__WEBPACK_IMPORTED_MODULE_6__/* .Notification */ .P);

/***/ }),

/***/ 2754:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "dotAdapter": () => /* reexport */ dotAdapter
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ../../riba/packages/core/src/adapters/dot.adapter.ts



var DotAdapter = /*#__PURE__*/function () {
  function DotAdapter() {
    classCallCheck_default()(this, DotAdapter);

    defineProperty_default()(this, "name", ".");

    defineProperty_default()(this, "counter", 0);

    defineProperty_default()(this, "weakmap", {});
  }

  createClass_default()(DotAdapter, [{
    key: "weakReference",
    value: function weakReference(obj) {
      // eslint-disable-next-line no-prototype-builtins
      if (!obj.hasOwnProperty("__rv")) {
        var id = this.counter++;
        Object.defineProperty(obj, "__rv", {
          value: id
        });
      }

      if (!this.weakmap[obj.__rv]) {
        this.weakmap[obj.__rv] = {
          callbacks: {}
        };
      }

      return this.weakmap[obj.__rv];
    }
  }, {
    key: "cleanupWeakReference",
    value: function cleanupWeakReference(ref, id) {
      if (!Object.keys(ref.callbacks).length) {
        if (!(ref.pointers && Object.keys(ref.pointers).length)) {
          delete this.weakmap[id];
        }
      }
    }
  }, {
    key: "stubFunction",
    value: function stubFunction(obj, fn) {
      var original = obj[fn];
      var map = this.weakReference(obj);
      var weakmap = this.weakmap;

      obj[fn] = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var response = original.apply(obj, args);
        Object.keys(map.pointers).forEach(function (r) {
          var k = map.pointers[r];

          if (weakmap[r]) {
            if (Array.isArray(weakmap[r].callbacks[k])) {
              weakmap[r].callbacks[k].forEach(function (callback) {
                callback.sync();
              });
            }
          }
        });
        return response;
      };
    }
  }, {
    key: "observeMutations",
    value: function observeMutations(obj, ref, keypath) {
      var _this = this;

      if (Array.isArray(obj)) {
        var map = this.weakReference(obj);

        if (!map.pointers) {
          map.pointers = {};
          DotAdapter.ARRAY_METHODS.forEach(function (fn) {
            _this.stubFunction(obj, fn);
          });
        }

        if (!map.pointers[ref]) {
          map.pointers[ref] = [];
        }

        if (map.pointers[ref].indexOf(keypath) === -1) {
          map.pointers[ref].push(keypath);
        }
      }
    }
  }, {
    key: "unobserveMutations",
    value: function unobserveMutations(obj, ref, keypath) {
      if (Array.isArray(obj) && obj.__rv != null) {
        var map = this.weakmap[obj.__rv];

        if (map) {
          var pointers = map.pointers[ref];

          if (pointers) {
            var idx = pointers.indexOf(keypath);

            if (idx > -1) {
              pointers.splice(idx, 1);
            }

            if (!pointers.length) {
              delete map.pointers[ref];
            }

            this.cleanupWeakReference(map, obj.__rv);
          }
        }
      }
    }
  }, {
    key: "observe",
    value: function observe(obj, keypath, callback) {
      var _this2 = this;

      var value;
      var callbacks = this.weakReference(obj).callbacks;

      if (!callbacks[keypath]) {
        callbacks[keypath] = [];
        var desc = Object.getOwnPropertyDescriptor(obj, keypath);

        if (!desc || !(desc.get || desc.set || !desc.configurable)) {
          value = obj[keypath];
          Object.defineProperty(obj, keypath, {
            enumerable: true,
            get: function get() {
              return value;
            },
            set: function set(newValue) {
              if (newValue !== value) {
                _this2.unobserveMutations(value, obj.__rv, keypath);

                value = newValue;
                var map = _this2.weakmap[obj.__rv];

                if (map) {
                  var _callbacks = map.callbacks[keypath];

                  if (_callbacks) {
                    _callbacks.forEach(function (cb) {
                      cb.sync();
                    });
                  }

                  _this2.observeMutations(newValue, obj.__rv, keypath);
                }
              }
            }
          });
        }
      }

      if (callbacks[keypath].indexOf(callback) === -1) {
        callbacks[keypath].push(callback);
      }

      this.observeMutations(obj[keypath], obj.__rv, keypath);
    }
  }, {
    key: "unobserve",
    value: function unobserve(obj, keypath, callback) {
      var map = this.weakmap[obj.__rv];

      if (map) {
        var callbacks = map.callbacks[keypath];

        if (callbacks) {
          var idx = callbacks.indexOf(callback);

          if (idx > -1) {
            callbacks.splice(idx, 1);

            if (!callbacks.length) {
              delete map.callbacks[keypath];
              this.unobserveMutations(obj[keypath], obj.__rv, keypath);
            }
          }

          this.cleanupWeakReference(map, obj.__rv);
        }
      }
    }
  }, {
    key: "get",
    value: function get(obj, keypath) {
      return obj[keypath];
    }
  }, {
    key: "set",
    value: function set(obj, keypath, value) {
      obj[keypath] = value;
    }
  }]);

  return DotAdapter;
}();

defineProperty_default()(DotAdapter, "ARRAY_METHODS", ["push", "pop", "shift", "unshift", "sort", "reverse", "splice"]);

var dotAdapter = new DotAdapter();

// CONCATENATED MODULE: ../../riba/packages/core/src/adapters/index.ts


/***/ }),

/***/ 8858:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A": () => /* binding */ attributeBinder
/* harmony export */ });
/**
 * Sets the attribute on the element. If no binder above is matched it will fall
 * back to using this binder.
 */
var attributeBinder = {
  name: "*",
  bind: function bind()
  /*el*/
  {
    /**/
  },
  unbind: function unbind() {
    delete this.customData;
  },
  routine: function routine(el, newValue) {
    if (!this.type) {
      throw new Error("Can't set attribute of " + this.type);
    }

    var oldValue = el.getAttribute(this.type);

    if (newValue != null) {
      if (oldValue !== newValue) {
        el.setAttribute(this.type, newValue);
        el.dispatchEvent( // E.g. Event used in BinderAttributeChangedEvent
        new CustomEvent("binder-changed", {
          detail: {
            name: this.type,
            newValue: newValue,
            oldValue: oldValue
          }
        }));
      }
    } else {
      el.removeAttribute(this.type);
      el.dispatchEvent( // E.g. Event used in BinderAttributeChangedEvent
      new CustomEvent("binder-changed", {
        detail: {
          name: this.type,
          newValue: newValue,
          oldValue: oldValue
        }
      }));
    }
  }
};

/***/ }),

/***/ 8802:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "addClassBinder": () => /* reexport */ addClassBinder,
  "animateStarBinder": () => /* reexport */ animateStarBinder,
  "assignBinder": () => /* reexport */ assignBinder,
  "assignPropertyBinder": () => /* reexport */ assignPropertyBinder,
  "attributeBinder": () => /* reexport */ attribute_binder/* attributeBinder */.A,
  "blockBinder": () => /* reexport */ blockBinder,
  "checkedBinder": () => /* reexport */ checkedBinder,
  "classStarBinder": () => /* reexport */ classStarBinder,
  "componentAttributeBinder": () => /* reexport */ componentAttributeBinder,
  "cssStarBinder": () => /* reexport */ cssStarBinder,
  "disabledBinder": () => /* reexport */ disabledBinder,
  "eachStarBinder": () => /* reexport */ eachStarBinder,
  "enabledBinder": () => /* reexport */ enabledBinder,
  "flexSortChildsBinder": () => /* reexport */ flexSortChildsBinder,
  "hideBinder": () => /* reexport */ hideBinder,
  "htmlBinder": () => /* reexport */ htmlBinder,
  "ifBinder": () => /* reexport */ ifBinder,
  "maxlengthBinder": () => /* reexport */ maxlengthBinder,
  "onEventBinder": () => /* reexport */ onEventBinder,
  "parentBinder": () => /* reexport */ parentBinder,
  "readonlyBinder": () => /* reexport */ readonlyBinder,
  "removeClassBinder": () => /* reexport */ removeClassBinder,
  "showBinder": () => /* reexport */ showBinder,
  "srcsetSizeBinder": () => /* reexport */ srcsetSizeBinder,
  "templateBinder": () => /* reexport */ templateBinder,
  "textBinder": () => /* reexport */ textBinder,
  "toggleOnEventBinder": () => /* reexport */ toggleOnEventBinder,
  "unlessBinder": () => /* reexport */ unlessBinder,
  "valueBinder": () => /* reexport */ valueBinder
});

// CONCATENATED MODULE: ../../riba/packages/core/src/binders/add-class.binder.ts
/**
 * add-class
 * Adds the value of the attribute to the class.
 * Instead of `class-[classname]` the classname is setted by the
 * attribute value and not by the star value.
 * @example
 * <ul>
 *   <li rv-each-todo="todos">
 *     <div rv-add-class="todo.state"></div>
 *   </li>
 * <ul>
 */
var addClassBinder = {
  name: "add-class",
  "function": true,
  priority: 1000,
  bind: function bind(el) {
    this.customData = {
      staticClasses: el.className.split(" ")
    };
  },
  unbind: function unbind() {
    delete this.customData;
  },
  routine: function routine(el, newValue) {
    if (newValue) {
      if (this.customData.staticClasses.indexOf(newValue) === -1) {
        el.className = this.customData.staticClasses.join(" ") + " " + newValue;
      }
    } else {
      el.className = this.customData.staticClasses.join(" ");
    }

    el.className = el.className.trim();
  }
};
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(9948);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/core/src/view.ts
var src_view = __webpack_require__(5246);
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/animate-classname.binder.ts
/**
 * animate-{class}
 * Add / remove animation class with start and done affix
 */
var animateStarBinder = {
  name: "animate-*",
  "function": true,
  priority: 1000,
  bind: function bind(el) {
    var animateClassName = this.args[0];
    el.classList.add(animateClassName);
  },
  unbind: function unbind() {//
  },
  routine: function routine(el, start) {
    var animateClassName = this.args[0];

    if (start) {
      el.classList.add(animateClassName + "-start");
      el.classList.remove(animateClassName + "-done");
    } else {
      el.classList.remove(animateClassName + "-start");
      el.classList.add(animateClassName + "-done");
    }
  }
};
// EXTERNAL MODULE: ../../riba/packages/utils/src/control.ts
var control = __webpack_require__(2416);
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/assign.binder.ts



/**
 * assign
 * Assign a value in your model.
 * The value you want to assign must be an object and will be concatenate with your model.
 * @example
 * <div rv-assign='{"newValue": "hello", "anotherNewValue": "world"}'>{newValue} {anotherNewValue}!</div>
 */
var assignBinder = {
  name: "assign",
  routine: function routine(el, value) {
    if (typeof_default()(value) === "object") {
      return (0,type/* extend */.l7)(false, this.view.models, value);
    }

    console.warn("Value must be an object or propertyName is required");
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/assign-property.binder.ts

/**
 * assign-*
 * Assign a value in your model.
 * Sets or overwrites a value by his property name (named whatever value is in place of [property]) in your model.
 * @example
 * <div rv-assign-new='"hello"'>{new}</div>
 */

var assignPropertyBinder = {
  name: "assign-*",
  routine: function routine(el, value) {
    var propertyName = (0,type/* camelCase */.eV)(this.args[0].trim());
    var obj = {};
    obj[propertyName] = value;
    this.view.models[propertyName] = value;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/block.binder.ts
/**
 * block
 * Blocks the binding for the current element and his childs.
 * @note Please note that `<script></script>`, `<style type="text/css"></style>`, `<template></template>` and `<code></code>` tags are blocked by default.
 * You can change this by setting the `blockNodeNames` option.
 * @example
 * <div rv-block="">
 *  <!-- After binding you should see `{ value }` because the binding is blocked here -->
 *  { value }
 * </div>
 */
var blockBinder = {
  name: "block",
  block: true,
  routine: function routine() {
    /**/
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/checked.binder.ts
/* eslint-disable @typescript-eslint/no-this-alias */


/**
 * checked
 * Checks a checkbox or radio input when the value is true. Also sets the model
 * property when the input is checked or unchecked (two-way binder).
 */

var checkedBinder = {
  name: "checked",
  publishes: true,
  priority: 2000,
  onChange: function onChange() {
    this.publish();
  },
  bind: function bind(el) {
    var self = this;
    this.customData = this.customData || {};

    if (!this.customData.onChange) {
      this.customData.onChange = function () {
        self.publish();
      };
    }

    el.addEventListener("change", this.customData.onChange, false); // el.addEventListener("click", this.customData.onChange, false);
    // el.addEventListener("input", this.customData.onChange, false);
    // el.addEventListener("focus", this.customData.onChange, false);
    // el.addEventListener("blur", this.customData.onChange, false);

    el.checked = !!el.checked;
  },
  unbind: function unbind(el) {
    el.removeEventListener(this.customData.event, this.customData.onChange); // el.addEventListener("click", this.customData.onChange);
    // el.addEventListener("input", this.customData.onChange);
    // el.addEventListener("focus", this.customData.onChange);
    // el.addEventListener("blur", this.customData.onChange);
  },
  routine: function routine(el, newValue) {
    var oldValue = this.getValue(el);

    if (el.type === "radio") {
      el.checked = (0,type/* getString */.KF)(oldValue) === (0,type/* getString */.KF)(newValue);
    } else {
      if (oldValue !== newValue) {
        el.checked = !!newValue;
      }
    }
  },
  getValue: dom/* getInputValue */.d9
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/class-name.binder.ts
/**
 * class-*
 * class-[classname]
 *
 * Adds a class (whatever value is in place of [classname]) on the element
 * when the value evaluates to true and removes that class if the value
 * evaluates to false.
 * @example
 * <li rv-class-completed="todo.done">{ todo.name }</li>
 */
var classStarBinder = {
  name: "class-*",
  routine: function routine(el, value) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    var classList = el.className.split(" ").filter(function (ele) {
      return ele !== "";
    });
    var arg = this.args[0].trim();
    var idx = classList.indexOf(arg);

    if (idx === -1) {
      if (value) {
        el.className += " ".concat(arg);
      }
    } else if (!value) {
      el.className = classList.filter(function (_, i) {
        return i !== idx;
      }).join(" ");
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/co-attribute.binder.ts
/**
 * parent
 * Passses a riba model / scope value to your component without first converting it as an attribute
 */
var componentAttributeBinder = {
  name: "co-*",
  routine: function routine(el, value) {
    console.debug("componentAttributeBinder routine this", this);
    console.debug("componentAttributeBinder routine value", value);
    this.binder.triggerAttributeValue.call(this, el, value);
  },
  bind: function bind(el) {
    // const attrName = (this.args[0] as string).trim();
    var attrName = this.keypath;
    var eventName = "ask-for-attribute:" + attrName;
    console.debug("bind eventName", eventName);
    el.addEventListener(eventName, this.binder.onAskForAttributeValue.bind(this, el), false);
  },
  unbind: function unbind(el) {
    // const attrName = (this.args[0] as string).trim();
    var attrName = this.keypath;
    el.removeEventListener("ask-for-attribute:" + attrName, this.binder.onAskForAttributeValue.bind(this), false);
  },
  onAskForAttributeValue: function onAskForAttributeValue(el) {
    if (this.getValue) {
      // const attrName = (this.args[0] as string).trim();
      var attrName = this.keypath;
      this.binder.triggerAttributeValue.call(this, el, this.view.models[attrName]);
    } else {
      console.warn("[componentAttributeBinder] this.getValue is not defined");
    }
  },
  triggerAttributeValue: function triggerAttributeValue(el, value) {
    var attrName = this.args[0].trim();
    var eventName = "attribute:" + attrName;
    console.debug("triggerAttributeValue newValue", value);
    console.debug("triggerAttributeValue eventName", eventName);
    el.dispatchEvent(new CustomEvent(eventName, {
      detail: {
        name: attrName,
        oldValue: undefined,
        newValue: value,
        namespace: null
      }
    }));
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/style-css-property.binder.ts
/**
 * style-*
 * Adds a style to the element.
 *
 * ```html
 * <div rv-style-background-color="'blue'"></div>
 * ```
 */
var cssStarBinder = {
  name: "style-*",
  routine: function routine(el, value) {
    var propertyName = this.args[0];

    if (value === null || value === undefined || value === "") {
      el.style.removeProperty(propertyName);
    } else {
      el.style.setProperty(propertyName, value);
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/enabled.binder.ts
/**
 * Enables the element when value is true.
 */
var enabledBinder = {
  name: "enabled",
  routine: function routine(el, value) {
    el.disabled = !value;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/flex-sort-childs.binder.ts
/**
 * sort-childs using flex order
 */
var flexSortChildsBinder = {
  name: "flex-sort-childs",
  priority: 90000,
  // bind(el: HTMLUnknownElement) {
  // },
  routine: function routine(el, descending) {
    var childrens = Array.from(el.children);
    childrens.sort(function (a, b) {
      if (!a.dataset.sortBy || !b.dataset.sortBy) {
        return 0;
      }

      if (a.dataset.sortBy < b.dataset.sortBy) {
        return descending ? 1 : -1;
      }

      if (a.dataset.sortBy > b.dataset.sortBy) {
        return descending ? -1 : 1;
      }

      return 0;
    });

    for (var i = 0; i < childrens.length; i++) {
      var child = childrens[i];
      child.style.order = i.toString();
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/disabled.binder.ts
/**
 * Disables the element when value is true (negated version of `enabled` binder).
 */
var disabledBinder = {
  name: "disabled",
  routine: function routine(el, value) {
    el.disabled = !!value;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/maxlength.binder.ts
/**
 * maxlength
 */
var maxlengthBinder = {
  name: "maxlength",
  bind: function bind() {
    this.customData = {};
  },
  routine: function routine(el, maxLength) {
    if (typeof maxLength === "number") {
      el.setAttribute("maxlength", maxLength.toString());
      el.maxLength = maxLength;
    } else {
      el.removeAttribute("maxlength");
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/on-event.binder.ts
/**
 * Binds an event handler on the element.
 */
var onEventBinder = {
  name: "on-*",
  "function": true,
  priority: 1000,
  bind: function bind() {
    if (!this.customData) {
      this.customData = {
        handler: null
      };
    }
  },
  unbind: function unbind(el) {
    if (this.customData.handler) {
      if (this.args === null) {
        throw new Error("args is null");
      }

      var eventName = this.args[0];
      el.removeEventListener(eventName, this.customData.handler);
    }
  },
  routine: function routine(el, value) {
    var _this = this;

    if (this.args === null) {
      throw new Error("args is null");
    }

    var eventName = this.args[0];

    if (this.customData.handler) {
      el.removeEventListener(eventName, this.customData.handler);
    }

    this.customData.handler = this.eventHandler(value, el);
    var passive = this.el.dataset.passive === "true"; // data-passive="true"

    try {
      el.addEventListener(eventName, this.customData.handler, {
        passive: passive
      });
    } catch (error) {
      console.warn(error);
      el.addEventListener(eventName, function (event) {
        _this.customData.handler(event);
      });
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/parent.binder.ts
/**
 * parent
 * Binds the parent scope to your component
 */
var parentBinder = {
  name: "parent",
  routine: function routine()
  /*el: HTMLElement, value: object*/
  {
    /**/
  },
  bind: function bind(el) {
    el.addEventListener("ask-for-parent", this.binder.onAskForParent.bind(this, el), false);
    this.binder.onAskForParent.bind(this)(el);
  },
  unbind: function unbind(el) {
    el.removeEventListener("ask-for-parent", this.binder.onAskForParent, false);
  },
  onAskForParent: function onAskForParent(el) {
    // console.debug("onAskForParent", el, this.view.models);
    el.dispatchEvent(new CustomEvent("parent", {
      detail: this.view.models
    }));
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/readonly.binder.ts
/**
 * readonly
 */
var readonlyBinder = {
  name: "readonly",
  bind: function bind() {
    this.customData = {};
  },
  routine: function routine(el, readOnly) {
    readOnly = !!readOnly;
    el.readOnly = readOnly;

    if (readOnly) {
      el.setAttribute("readonly", "");
    } else {
      el.removeAttribute("readonly");
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/remove-class.binder.ts
/**
 * remove-class
 * Removes the given class string the class attibute.
 * Instead of `class-[classname]` the classname is removed by the
 * given attribute and not by the star value,
 * @example
 * <img class="loading" rv-src="img.src" rv-remove-class="loadingClass">
 */
var removeClassBinder = {
  name: "remove-class",
  bind: function bind(el) {
    this.customData = {
      staticClassesString: el.className
    };
  },
  routine: function routine(el, value) {
    var regex = new RegExp("\\b".concat(value, "\\b"), "g");
    el.className = this.customData.staticClassesString.replace(regex, "").trim();
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/if.binder.ts

/**
 * if
 * Inserts and binds the element and it's child nodes into the DOM when true.
 */

var ifBinder = {
  name: "if",
  block: true,
  priority: 4000,
  bind: function bind(el) {
    this.customData = {};

    if (!this.marker) {
      this.marker = document.createComment(" riba: " + this.type + " " + this.keypath + " ");
      this.customData.attached = false;

      if (!el.parentNode) {// console.warn('Element has no parent node');
      } else {
        el.parentNode.insertBefore(this.marker, el);
        el.parentNode.removeChild(el);
      }
    } else if (this.customData.nested) {
      this.customData.nested.bind();
    }
  },
  unbind: function unbind() {
    if (this.customData.nested) {
      this.customData.nested.unbind();
    }
  },
  routine: function routine(el, value) {
    value = !!value;

    if (value !== this.customData.attached) {
      if (value) {
        if (!this.customData.nested) {
          this.customData.nested = new src_view/* View */.G(el, this.view.models, this.view.options);
          this.customData.nested.bind();
        }

        if (!this.marker || !this.marker.parentNode) {// console.warn('Marker has no parent node');
        } else {
          this.marker.parentNode.insertBefore(el, this.marker.nextSibling);
        }

        this.customData.attached = true;
      } else {
        if (!el.parentNode) {// console.warn('Element has no parent node');
        } else {
          el.parentNode.removeChild(el);
        }

        this.customData.attached = false;
      }
    }
  },
  update: function update(models) {
    if (this.customData.nested) {
      this.customData.nested.update(models);
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/each-item.binder.ts


/**
 * each-*
 * Appends bound instances of the element in place for each item in the array.
 */

var eachStarBinder = {
  name: "each-*",
  block: true,
  priority: 4000,
  bind: function bind(el) {
    if (!this.marker) {
      this.marker = document.createComment(" riba: ".concat(this.type, " "));
      this.customData = {
        iterated: []
      };

      if (!el.parentNode) {// console.warn('No parent node!');
      } else {
        el.parentNode.insertBefore(this.marker, el);
        el.parentNode.removeChild(el);
      }
    } else {
      this.customData.iterated.forEach(function (view) {
        view.bind();
      });
    }
  },
  unbind: function unbind() {
    if (this.customData.iterated) {
      this.customData.iterated.forEach(function (view) {
        view.unbind();
      });
    }
  },
  routine: function routine(el, collection) {
    var _this = this;

    if (this.args === null) {
      throw new Error("args is null");
    }

    var modelName = this.args[0];
    collection = collection || []; // TODO support object keys to iterate over

    if (!Array.isArray(collection)) {
      throw new Error("each-" + modelName + " needs an array to iterate over, but it is");
    } // if index name is seted by `index-property` use this name, otherwise `%[modelName]%`


    var indexProp = el.getAttribute("index-property") || this.getIterationAlias(modelName);
    collection.forEach(function (model, index) {
      var scope = {
        $parent: _this.view.models
      };
      scope[indexProp] = index;
      scope[modelName] = model;
      var view = _this.customData.iterated[index];

      if (!view) {
        var previous;

        if (_this.customData.iterated.length) {
          previous = _this.customData.iterated[_this.customData.iterated.length - 1].els[0];
        } else if (_this.marker) {
          previous = _this.marker;
        } else {
          throw new Error("previous not defined");
        }

        view = src_view/* View.create */.G.create(_this, scope, previous.nextSibling);

        _this.customData.iterated.push(view);
      } else {
        if (view.models[modelName] !== model) {
          // search for a view that matches the model
          var matchIndex;
          var nextView;

          for (var nextIndex = index + 1; nextIndex < _this.customData.iterated.length; nextIndex++) {
            nextView = _this.customData.iterated[nextIndex];

            if (nextView.models[modelName] === model) {
              matchIndex = nextIndex;
              break;
            }
          }

          if (matchIndex !== undefined) {
            // model is in other position
            // todo: consider avoiding the splice here by setting a flag
            // profile performance before implementing such change
            _this.customData.iterated.splice(matchIndex, 1);

            if (!_this.marker || !_this.marker.parentNode) {
              throw new Error("Marker has no parent node");
            }

            _this.marker.parentNode.insertBefore(nextView.els[0], view.els[0]);

            nextView.models[indexProp] = index;
          } else {
            // new model
            nextView = src_view/* View.create */.G.create(_this, scope, view.els[0]);
          }

          _this.customData.iterated.splice(index, 0, nextView);
        } else {
          view.models[indexProp] = index;
        }
      }
    });

    if (this.customData.iterated.length > collection.length) {
      (0,control/* times */.DZ)(this.customData.iterated.length - collection.length, function () {
        var view = _this.customData.iterated.pop();

        view.unbind();

        if (!_this.marker || !_this.marker.parentNode) {
          throw new Error("Marker has no parent node");
        }

        _this.marker.parentNode.removeChild(view.els[0]);
      });
    }

    if (el.nodeName === "OPTION" && this.view.bindings) {
      this.view.bindings.forEach(function (binding) {
        if (_this.marker && binding.el === _this.marker.parentNode && binding.type === "value" && binding.sync) {
          binding.sync();
        }
      });
    }
  },
  update: function update(models) {
    var _this2 = this;

    var data = {}; // TODO: add test and fix if necessary

    Object.keys(models).forEach(function (key) {
      if (_this2.args === null) {
        throw new Error("args is null");
      }

      if (key !== _this2.args[0]) {
        data[key] = models[key];
      }
    });
    this.customData.iterated.forEach(function (view) {
      view.update(data);
    });
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/html.binder.ts
/**
 * Sets the element's text value.
 */
var htmlBinder = {
  name: "html",
  routine: function routine(el, value) {
    el.innerHTML = typeof value !== "undefined" ? value : "";
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/hide.binder.ts
/**
 * Hides the element when value is true (negated version of `show` binder).
 */
var hideBinder = {
  name: "hide",
  routine: function routine(el, value) {
    el.style.display = value ? "none" : "";

    if (value) {
      el.setAttribute("hidden", "true");
    } else {
      el.removeAttribute("hidden");
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/show.binder.ts
/**
 * Shows the element when value is true.
 */
var showBinder = {
  name: "show",
  routine: function routine(el, value) {
    el.style.display = value ? "" : "none";

    if (value) {
      el.removeAttribute("hidden");
    } else {
      el.setAttribute("hidden", "true");
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/text.binder.ts
/**
 * Sets the element's text value.
 */
var textBinder = {
  name: "text",
  routine: function routine(el, value) {
    el.textContent = value != null ? value : "";
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/toggle-on-event.binder.ts
/**
 * Togggles a boolean variable to true/false if the event is triggered.
 */
var toggleOnEventBinder = {
  name: "toggle-on-*",
  "function": true,
  bind: function bind() {
    if (!this.customData) {
      this.customData = {
        handler: null,
        propertyKey: null
      };
    }
  },
  unbind: function unbind(el) {
    if (this.customData.handler) {
      if (this.args === null) {
        throw new Error("args is null");
      }

      var eventName = this.args[0];
      el.removeEventListener(eventName, this.binder.toggle);
    }
  },
  toggle: function toggle() {
    if (this.customData.propertyKey) {
      this.view.models[this.customData.propertyKey] = !this.view.models[this.customData.propertyKey];
    }
  },
  routine: function routine(el, propertyKey) {
    if (this.args === null) {
      throw new Error("args is null");
    }

    this.customData.propertyKey = propertyKey;
    var eventName = this.args[0];
    var passive = this.el.dataset.passive === "true"; // data-passive="true"

    el.addEventListener(eventName, this.binder.toggle.bind(this), {
      passive: passive
    });
  }
};
// EXTERNAL MODULE: ../../riba/packages/core/src/binders/attribute.binder.ts
var attribute_binder = __webpack_require__(8858);
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/srcset-size.binder.ts
/**
 * srcset-size
 * Sets an url with size to the `srcset` attribute
 */
var srcsetSizeBinder = {
  name: "srcset-*",
  routine: function routine(el, url) {
    var size = this.args[0];
    var srcset = el.getAttribute("srcset");

    if (typeof srcset !== "string") {
      srcset = "";
    }

    if (typeof url === "string" && url.length > 0) {
      var seperator = srcset.length > 0 ? ", " : ""; // Add size to srcset attribute

      srcset += "".concat(seperator).concat(url, " ").concat(size);
    } else {
      // Remove size from srcset attribute
      var sizes = srcset.split(",");
      sizes = sizes.map(function (iterSize) {
        return iterSize.trim();
      });
      sizes = sizes.filter(function (iterSize) {
        return !(iterSize.indexOf(size) !== -1);
      });
      srcset = sizes.join(", ") || "";
    }

    el.setAttribute("srcset", srcset);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/template.binder.ts

/**
 * template
 * Similar to rv-html but also binds the html with riba, so you can also use binders and componentes in this templates.
 */

var templateBinder = {
  name: "template",
  bind: function bind(el) {
    this.customData = {
      nested: new src_view/* View */.G(el, this.view.models, this.view.options)
    };
  },
  routine: function routine(el, value) {
    var _this$customData$nest, _this$customData$nest2;

    (_this$customData$nest = this.customData.nested) === null || _this$customData$nest === void 0 ? void 0 : _this$customData$nest.unbind();
    el.innerHTML = value ? value : "";
    this.customData.nested = new src_view/* View */.G(el, this.view.models, this.view.options);
    (_this$customData$nest2 = this.customData.nested) === null || _this$customData$nest2 === void 0 ? void 0 : _this$customData$nest2.bind();
  },
  unbind: function unbind() {
    var _this$customData$nest3;

    (_this$customData$nest3 = this.customData.nested) === null || _this$customData$nest3 === void 0 ? void 0 : _this$customData$nest3.unbind();
  },
  update: function update(models) {
    var _this$customData$nest4;

    (_this$customData$nest4 = this.customData.nested) === null || _this$customData$nest4 === void 0 ? void 0 : _this$customData$nest4.update(models);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/unless.binder.ts

/**
 * unless
 * Removes and unbinds the element and it's child nodes into the DOM when true
 * (negated version of `if` binder).
 */

var unlessBinder = {
  name: "unless",
  block: true,
  priority: 4000,
  bind: ifBinder.bind,
  unbind: ifBinder.unbind,
  routine: function routine(el, value) {
    return ifBinder.routine.call(this, el, !value);
  },
  update: ifBinder.update
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/value.binder.ts



var getData = function getData(el) {
  var customData = {};
  customData.type = el.type;
  customData.tagName = el.tagName;
  customData.contenteditable = el.getAttribute("contenteditable") ? true : false;
  customData.isRadio = customData.tagName === "INPUT" && customData.type === "radio";
  return customData;
};
/**
 * Sets the element's value. Also sets the model property when the input changes
 * (two-way binder).
 */


var valueBinder = {
  name: "value",
  publishes: true,
  priority: 3000,
  onChange: function onChange() {
    this.publish();
  },
  bind: function bind(el) {
    if (!this.customData) {
      this.customData = getData(el);
    }

    if (!this.customData.isRadio) {
      this.customData.event = el.getAttribute("event-name") || (el.tagName === "SELECT" ? "change" : "input"); // eslint-disable-next-line @typescript-eslint/no-this-alias

      var self = this;

      if (!this.customData.onChange) {
        this.customData.onChange = function () {
          self.publish();
        };
      }

      el.addEventListener("change", this.customData.onChange, false);
      el.addEventListener("input", this.customData.onChange, false);
      el.addEventListener("keyup", this.customData.onChange, false);
      el.addEventListener("paste", this.customData.onChange, false);
      el.addEventListener("blur", this.customData.onChange, false);
      el.addEventListener("focus", this.customData.onChange, false);
    }
  },
  unbind: function unbind(el) {
    el.removeEventListener("change", this.customData.onChange);
    el.removeEventListener("input", this.customData.onChange);
    el.removeEventListener("keyup", this.customData.onChange);
    el.removeEventListener("paste", this.customData.onChange);
    el.removeEventListener("blur", this.customData.onChange);
    el.removeEventListener("focus", this.customData.onChange);
  },
  routine: function routine(el, value) {
    var oldValue = this.getValue(el);

    if (!this.customData) {
      this.customData = getData(el);
    }

    if (this.customData.isRadio) {
      el.setAttribute("value", value);
    } else {
      if (el.type === "select-multiple") {
        if (Array.isArray(value)) {
          for (var i = 0; i < el.options.length; i++) {
            var option = el.options[i];
            option.selected = value.indexOf(option.value) > -1;
          } // TODO check if the value was really changed


          el.dispatchEvent(new Event("change"));
        }
      } else if (el.getAttribute("contenteditable")) {
        if ((0,type/* getString */.KF)(value) !== oldValue) {
          el.innerHTML = value; // TODO write test for contenteditable

          el.dispatchEvent(new Event("change"));
        }
      } else {
        if ((0,type/* getString */.KF)(value) !== oldValue) {
          el.value = value != null ? value : "";
          el.dispatchEvent(new Event("change"));
        }
      }
    }
  },
  getValue: dom/* getInputValue */.d9
};
// CONCATENATED MODULE: ../../riba/packages/core/src/binders/index.ts






























/***/ }),

/***/ 2445:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "K": () => /* binding */ Binding
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7474);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3655);
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3596);
/* harmony import */ var _ribajs_utils_src_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(4783);







/**
 *  A single binding between a model attribute and a DOM element.
 */

var Binding = /*#__PURE__*/function () {
  /**
   * Name of the binder without the prefix
   */

  /**
   * Arguments parsed from star binders, e.g. on foo-*-* args[0] is the first star, args[1] the second-
   */

  /**
   *
   */

  /**
   * HTML Comment to mark a binding in the DOM
   */

  /**
   * just to have a value where we could store custom data
   */

  /**
   * All information about the binding is passed into the constructor; the
   * containing view, the DOM node, the type of binding, the model object and the
   * keypath at which to listen for changes.
   * @param {*} view
   * @param {*} el
   * @param {*} type
   * @param {*} keypath
   * @param {*} binder
   * @param {*} args The start binders, on `class-*` args[0] wil be the classname.
   * @param {*} formatters
   */
  function Binding(view, el, type, keypath, binder, formatters, identifier) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Binding);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "value", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "observer", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "view", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "el", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "type", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "binder", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "formatters", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "formatterObservers", {});

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "keypath", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "args", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "model", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "marker", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(this, "customData", void 0);

    this.view = view;
    this.el = el;
    this.type = type;
    this.keypath = keypath;
    this.binder = binder;
    this.formatters = formatters;
    this.model = undefined;
    this.customData = {};

    if (identifier && type) {
      this.args = this.getStarArguments(identifier, type);
    } else {
      this.args = new Array();
    }
  }
  /**
   * Observes the object keypath
   * @param obj
   * @param keypath
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Binding, [{
    key: "observe",
    value: function observe(obj, keypath, callback) {
      return new _observer__WEBPACK_IMPORTED_MODULE_5__/* .Observer */ .Q(obj, keypath, callback);
    }
  }, {
    key: "parseTarget",
    value: function parseTarget() {
      if (this.keypath) {
        var token = (0,_parsers__WEBPACK_IMPORTED_MODULE_4__/* .parseType */ .gZ)(this.keypath);

        if (token.type === _parsers__WEBPACK_IMPORTED_MODULE_4__/* .PRIMITIVE */ .uk) {
          this.value = token.value;
        } else if (token.type === _parsers__WEBPACK_IMPORTED_MODULE_4__/* .KEYPATH */ .pm) {
          this.observer = this.observe(this.view.models, this.keypath, this);
          this.model = this.observer.target;
        } else {
          throw new Error("[".concat(this.binder.name, "] Unknown type in token"));
        }
      } else {
        this.value = undefined;
      }
    }
    /**
     * Get the iteration alias, used in the interation binders like `each-*`
     * @param {*} modelName
     * @see https://github.com/mikeric/rivets/blob/master/dist/rivets.js#L26
     * @see https://github.com/mikeric/rivets/blob/master/dist/rivets.js#L1175
     */

  }, {
    key: "getIterationAlias",
    value: function getIterationAlias(modelName) {
      return "%" + modelName + "%";
    }
  }, {
    key: "parseFormatterArguments",
    value: function parseFormatterArguments(args, formatterIndex) {
      var _this = this;

      return args.map(_parsers__WEBPACK_IMPORTED_MODULE_4__/* .parseType */ .gZ).map(function (_ref, ai) {
        var type = _ref.type,
            value = _ref.value;

        if (type === _parsers__WEBPACK_IMPORTED_MODULE_4__/* .PRIMITIVE */ .uk) {
          var primitiveValue = value;
          return primitiveValue;
        } else if (type === _parsers__WEBPACK_IMPORTED_MODULE_4__/* .KEYPATH */ .pm) {
          // keypath is string
          var keypath = value;

          if (!_this.formatterObservers[formatterIndex]) {
            _this.formatterObservers[formatterIndex] = {};
          }

          var observer = _this.formatterObservers[formatterIndex][ai];

          if (!observer) {
            observer = _this.observe(_this.view.models, keypath, _this);
            _this.formatterObservers[formatterIndex][ai] = observer;
          }

          return observer.value();
        } else {
          throw new Error("[".concat(_this.binder.name, "] Unknown argument type"));
        }
      });
    }
    /**
     * Applies all the current formatters to the supplied value and returns the
     * formatted value.
     */

  }, {
    key: "formattedValue",
    value: function formattedValue(value) {
      var _this2 = this;

      if (this.formatters === null) {
        throw new Error("[".concat(this.binder.name, " formatters is null"));
      }

      return this.formatters.reduce(function (result, declaration, index) {
        var args = declaration.match(Binding.FORMATTER_ARGS);

        if (args === null) {
          console.warn(new Error("[".concat(_this2.binder.name, "] No args matched with regex \"FORMATTER_ARGS\"!\nvalue: ").concat(value, "\nresult: ").concat(result, "\ndeclaration: ").concat(declaration, "\nindex: ").concat(index, "\n")));
          return result;
        }

        var id = args.shift();

        if (!id) {
          throw new Error("[".concat(_this2.binder.name, "] No formatter id found in args!"));
        }

        if (!_this2.view.options.formatters) {
          throw new Error("[".concat(_this2.binder.name, "] No formatters are defined!"));
        }

        var formatter = _this2.view.options.formatters[id];

        if (!formatter) {
          throw new Error("[".concat(_this2.binder.name, "] No formatters with id \"").concat(id, "\" found!"));
        }

        var processedArgs = _this2.parseFormatterArguments(args, index); // get formatter read funcion


        if (formatter && typeof formatter.read === "function") {
          result = formatter.read.apply(_this2.model, [result].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(processedArgs)));
        }

        return result;
      }, value);
    }
    /**
     * Returns an event handler for the binding around the supplied function.
     * Tihs event Handler is mainly used by the on-* binder
     * @param fn The function to call by the handler
     * @param el The element the event was triggered from
     */

  }, {
    key: "eventHandler",
    value: function eventHandler(fn, el) {
      var _this3 = this;

      // eslint-disable-next-line @typescript-eslint/no-this-alias
      var binding = this;
      var handler = binding.view.options.handler;
      return function (ev) {
        if (!handler) {
          throw new Error("No handler defined in binding.view.options.handler");
        }

        handler.call(fn, _this3, ev, binding, el);
      };
    }
    /**
     * Sets the value for the binding. This Basically just runs the binding routine
     * with the supplied value formatted.
     */

  }, {
    key: "set",
    value: function set(value) {
      var _this4 = this;

      if (this.binder === null) {
        console.warn(new Error("Binder is null"), this);
        return;
      }

      try {
        value = this.formattedValue(value);
      } catch (error) {
        console.error(error);
        return value;
      }

      if (this.binder && typeof this.binder.routine === "function") {
        // If value is a promise
        if (value && typeof value.then === "function" && typeof value["catch"] === "function") {
          value.then(function (realValue) {
            _this4.binder.routine.call(_this4, _this4.el, realValue);
          })["catch"](function (error) {
            console.error(error);
          });
        } else {
          this.binder.routine.call(this, this.el, value);
        }
      }
    }
    /**
     * Syncs up the view binding with the model.
     */

  }, {
    key: "sync",
    value: function sync() {
      if (this.observer) {
        this.model = this.observer.target;
        this.set(this.observer.value());
      } else {
        this.set(this.value);
      }
    }
    /**
     * Publishes the value currently set on the input element back to the model.
     */

  }, {
    key: "publish",
    value: function publish() {
      var _this5 = this;

      if (this.observer) {
        if (this.formatters === null) {
          throw new Error("formatters is null");
        }

        var value = this.formatters.reduceRight(function (result, declaration, index) {
          var args = declaration.split(Binding.FORMATTER_SPLIT);
          var id = args.shift();

          if (!id) {
            throw new Error("id not defined");
          }

          if (!_this5.view.options.formatters) {
            return undefined;
          }

          var formatter = _this5.view.options.formatters[id];

          var processedArgs = _this5.parseFormatterArguments(args, index);

          if (formatter && typeof formatter.publish === "function") {
            result = formatter.publish.apply(formatter, [result].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(processedArgs)));
          }

          return result;
        }, this.getValue(this.el));
        this.observer.setValue(value);
      }
    }
    /**
     * Subscribes to the model for changes at the specified keypath. Bi-directional
     * routines will also listen for changes on the element to propagate them back
     * to the model.
     */

  }, {
    key: "bind",
    value: function bind() {
      this.parseTarget();

      if (this.binder && this.binder.bind) {
        if (typeof this.binder.bind !== "function") {
          throw new Error("the method bind is not a function");
        }

        this.binder.bind.call(this, this.el);
      }

      if (this.view.options.preloadData) {
        this.sync();
      }
    }
    /**
     * Unsubscribes from the model and the element.
     */

  }, {
    key: "unbind",
    value: function unbind() {
      var _this6 = this;

      if (!this.binder) {
        console.warn(new Error("Binder is not defined"), this);
        return;
      }

      if (this.binder.unbind) {
        this.binder.unbind.call(this, this.el);
      }

      if (this.observer) {
        this.observer.unobserve();
      }

      Object.keys(this.formatterObservers).forEach(function (fi) {
        var args = _this6.formatterObservers[fi];
        Object.keys(args).forEach(function (ai) {
          args[ai].unobserve();
        });
      });
      this.formatterObservers = {};
    }
    /**
     * Updates the binding's model from what is currently set on the view. Unbinds
     * the old model first and then re-binds with the new model.
     * @param {any} models
     */

  }, {
    key: "update",
    value: function update() {
      var models = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (this.observer) {
        this.model = this.observer.target;
      }

      if (this.binder === null) {
        throw new Error("binder is null");
      }

      if (typeof this.binder.update === "function") {
        this.binder.update.call(this, models);
      }
    }
    /**
     * Returns elements value
     * @param el
     */

  }, {
    key: "getValue",
    value: function getValue(el) {
      if (this.binder === null) {
        throw new Error("binder is null");
      }

      if (typeof this.binder.getValue === "function") {
        return this.binder.getValue.call(this, el);
      } else {
        return (0,_ribajs_utils_src_dom__WEBPACK_IMPORTED_MODULE_6__/* .getInputValue */ .d9)(el);
      }
    }
  }, {
    key: "getStarArguments",
    value: function getStarArguments(identifier, type) {
      var regexp = new RegExp("^".concat(identifier.replace(/\*/g, "(.+)"), "$"));
      var match = type.match(regexp);
      return match && match.slice(1) || [];
    }
  }]);

  return Binding;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(Binding, "FORMATTER_ARGS", /[^\s']+|'([^']|'[^\s])*'|"([^"]|"[^\s])*"/g);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_3___default()(Binding, "FORMATTER_SPLIT", /\s+/);

/***/ }),

/***/ 2603:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "w": () => /* binding */ Component
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ../../riba/packages/core/src/view.ts
var view = __webpack_require__(5246);
// EXTERNAL MODULE: ../../riba/packages/core/src/riba.ts + 2 modules
var riba = __webpack_require__(1542);
// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// CONCATENATED MODULE: ../../riba/packages/utils/src/color.ts
/**
 * Generates a random color
 * @see https://stackoverflow.com/a/1484514/1465919
 */
var getRandomColor = function getRandomColor() {
  var letters = "0123456789ABCDEF";
  var color = "#";

  for (var i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }

  return color;
};
// CONCATENATED MODULE: ../../riba/packages/core/src/component/fake-html-element.ts


/**
 * This fake html element makes it possible to use custom elements with prototype classes for backward compatibility on old browsers
 */
var FakeHTMLElement
/*implements HTMLElement*/
= // tslint:disable-next-line
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function FakeHTMLElement(element) {
  classCallCheck_default()(this, FakeHTMLElement);

  if (window.customElements && !window.forceComponentFallback) {
    return Reflect.construct(HTMLElement, [], this.constructor);
  }
};

if (window.customElements && !window.forceComponentFallback) {
  try {
    FakeHTMLElement.prototype = Object.create(HTMLElement.prototype, {
      constructor: {
        value: HTMLElement,
        configurable: true,
        writable: true
      }
    });
  } catch (error) {
    console.error(error);
  }

  Object.setPrototypeOf(FakeHTMLElement, HTMLElement);
}


// CONCATENATED MODULE: ../../riba/packages/core/src/component/component.ts










function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/* eslint-disable @typescript-eslint/no-unused-vars */

/**
 * This implementation of components replaces the old components of rivets following the Web Components v1 specs
 *
 * @see https://developer.mozilla.org/de/docs/Web/Web_Components/Using_custom_elements
 */







var Component = /*#__PURE__*/function (_FakeHTMLElement) {
  inherits_default()(Component, _FakeHTMLElement);

  var _super = _createSuper(Component);

  /**
   * Used to check if all passed observedAttributes are initialized
   */

  /**
   * If true the component will automatically bind the component to riba if all required attributes are set.
   */
  function Component(element) {
    var _this;

    classCallCheck_default()(this, Component);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "_color", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "_fallback", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "view", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "templateLoaded", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "observedAttributesToCheck", {});

    defineProperty_default()(assertThisInitialized_default()(_this), "observedAttributes", []);

    defineProperty_default()(assertThisInitialized_default()(_this), "riba", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "el", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "bound", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "attributeObserverFallback", void 0);

    if (_this._debug) {
      _this._color = getRandomColor();
    }

    if (element) {
      _this.el = element;
    } else if (window.customElements) {
      _this.el = assertThisInitialized_default()(_this);
    } else {
      throw new Error("element is required on browsers without custom elements support");
    }

    return _this;
  }
  /**
   * Remove this custom element
   */


  createClass_default()(Component, [{
    key: "remove",
    value: function remove() {
      if (this.el && this.el.parentElement) {
        this.el.parentElement.removeChild(this.el);

        if (!window.customElements || this._fallback) {
          this.disconnectedFallbackCallback();
        }
      }
    }
  }, {
    key: "connectedFallbackCallback",
    value: function connectedFallbackCallback() {
      // this.debug(`Called connectedFallbackCallback`);
      this.connectedCallback();
    }
  }, {
    key: "disconnectedFallbackCallback",
    value: function disconnectedFallbackCallback() {
      // this.debug(`Called disconnectedFallbackCallback`);
      this.disconnectedCallback();
    }
  }, {
    key: "debug",
    value: function debug() {
      var _console;

      if (!this._debug) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (typeof args[0] === "string") {
        var name = this.constructor.name || this.el.tagName;

        if (this._color) {
          args[0] = "%c[".concat(name, "] ").concat(args[0]);
          args.splice(1, 0, "color: ".concat(this._color, ";"));
        } else {
          args[0] = "[".concat(name, "] ").concat(args[0]);
        }
      }

      (_console = console).debug.apply(_console, args);
    }
    /**
     * returns a list of attributes wich are required until the riba binding starts
     */

  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(observedAttributes) {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this.initAttributeObserver(observedAttributes);
                this.initRibaAttributeObserver(observedAttributes);
                this.getPassedObservedAttributes(observedAttributes);
                return _context.abrupt("return", this.bindIfReady());

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "ready",
    value: function ready() {
      return this.allPassedObservedAttributesAreInitialized() && this.checkRequiredAttributes();
    }
    /**
     * If `autobind` is true this component will bind riba automatically in this component if all all passed observed and required attributes are initialized
     */

  }, {
    key: "bindIfReady",
    value: function () {
      var _bindIfReady = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var _template;

        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!this.ready()) {
                  _context2.next = 14;
                  break;
                }

                _context2.next = 3;
                return this.beforeTemplate();

              case 3:
                _context2.next = 5;
                return this.loadTemplate();

              case 5:
                _template = _context2.sent;
                _context2.next = 8;
                return this.afterTemplate(_template);

              case 8:
                if (!this.autobind) {
                  _context2.next = 11;
                  break;
                }

                _context2.next = 11;
                return this.bind();

              case 11:
                _context2.next = 13;
                return this.onReady();

              case 13:
                return _context2.abrupt("return");

              case 14:
                this.debug("Not all required or passed attributes are set to load and bind the template", this.observedAttributesToCheck, this.scope);
                return _context2.abrupt("return", null);

              case 16:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function bindIfReady() {
        return _bindIfReady.apply(this, arguments);
      }

      return bindIfReady;
    }()
    /**
     * Check if the attribute (e.g. `src`) is passed to this custom element
     * @param observedAttribute
     */

  }, {
    key: "attributeIsPassed",
    value: function attributeIsPassed(observedAttribute) {
      return this.el.hasAttribute(observedAttribute);
    }
    /**
     * Get passed observed attributes, used to check if all passed attributes are initialized
     * @param observedAttributes
     */

  }, {
    key: "getPassedObservedAttributes",
    value: function getPassedObservedAttributes(observedAttributes) {
      var oa2c = this.observedAttributesToCheck;

      var _iterator = _createForOfIteratorHelper(observedAttributes),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var observedAttribute = _step.value;

          if (!oa2c[observedAttribute]) {
            oa2c[observedAttribute] = {
              passed: false,
              initialized: false
            };
          } else {
            if (!oa2c[observedAttribute].passed) {
              oa2c[observedAttribute].passed = this.attributeIsPassed(observedAttribute);
            }
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Checks if all passed observed attributes are initialized
     */

  }, {
    key: "allPassedObservedAttributesAreInitialized",
    value: function allPassedObservedAttributesAreInitialized() {
      var _this2 = this;

      return Object.keys(this.observedAttributesToCheck).every(function (key) {
        var _this2$observedAttrib, _this2$observedAttrib2;

        return !((_this2$observedAttrib = _this2.observedAttributesToCheck[key]) === null || _this2$observedAttrib === void 0 ? void 0 : _this2$observedAttrib.passed) || ((_this2$observedAttrib2 = _this2.observedAttributesToCheck[key]) === null || _this2$observedAttrib2 === void 0 ? void 0 : _this2$observedAttrib2.initialized);
      });
    }
    /**
     * Required attributes before the view is bound
     *
     * The attributeChangedCallback is called for each attribute wich updates the riba view each time
     * which can have a big impact on performance or required attributes are not yet available which can lead to errors.
     * So define required attriutes and the view is ony bind the first time after all this attributes are transmitted.
     */

  }, {
    key: "checkRequiredAttributes",
    value: function checkRequiredAttributes() {
      var _this3 = this;

      return this.requiredAttributes().every( // eslint-disable-next-line no-prototype-builtins
      function (requiredAttribute) {
        return _this3.scope.hasOwnProperty(requiredAttribute);
      });
    }
  }, {
    key: "parseAttribute",
    value: function parseAttribute(attr) {
      var value = attr;

      if (attr === "true") {
        value = true;
      } else if (attr === "false") {
        value = false;
      } else if (attr === "null") {
        value = null;
      } else if (attr === "undefined") {
        value = undefined;
      } else if (attr === "") {
        value = undefined;
      } else if (!isNaN(Number(attr))) {
        value = Number(attr); // If number is too large store the value as string

        if (value >= Number.MAX_SAFE_INTEGER) {
          value = attr;
        }
      } else {
        var jsonString = (0,type/* parseJsonString */.uO)(value);
        value = jsonString ? jsonString : value;
      }

      return value;
    }
    /**
     * Event handler to liste for publish binder event for two-way-binding in web components
     */
    // protected publish(name: string, newValue: any, namespace: string | null) {
    //   this.el.dispatchEvent(
    //     new CustomEvent("publish-binder-change:" + name, {
    //       detail: {
    //         name,
    //         newValue,
    //         namespace: null, // TODO
    //       },
    //     })
    //   );
    // }

    /**
     * Returns an event handler for the bindings (most on-*) inside this component.
     */

  }, {
    key: "eventHandler",
    value: function eventHandler(self) {
      // IMPORTANT this must be a function and not a Arrow Functions
      return function (context, event, binding, el) {
        if (!this || !this.call) {
          var error = new Error("[rv-".concat(binding.type, "=\"").concat(binding.keypath, "\"] Event handler \"").concat(binding.keypath, "\" not found!\""));
          console.error(binding, el);
          throw error;
        }

        this.call(self, event, binding.view.models, el);
      };
    }
    /**
     * Extra call formatter to avoid the "this" context problem
     */

  }, {
    key: "callFormatterHandler",
    value: function callFormatterHandler(self) {
      return {
        name: "call",
        read: function read(fn) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          if (!fn) {
            console.error("[".concat(self.el.tagName, "] Can not use \"call\" formatter: fn is undefined! Arguments: "), args);
            throw new Error("TypeError: fn is undefined");
          }

          return fn.apply(self, args);
        }
      };
    }
    /**
     * Extra args formatter to avoid the "this" context problem
     *
     * Sets arguments to a function without directly call them
     * @param fn The function you wish to call
     * @param args the parameters you wish to call the function with
     */

  }, {
    key: "argsFormatterHandler",
    value: function argsFormatterHandler(self) {
      return {
        name: "args",
        read: function read(fn) {
          for (var _len3 = arguments.length, fnArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
            fnArgs[_key3 - 1] = arguments[_key3];
          }

          return function (event, scope, el, binding) {
            // append the event handler args to passed args
            fnArgs.push(event);
            fnArgs.push(scope);
            fnArgs.push(el);
            fnArgs.push(binding);
            return fn.apply(self, fnArgs);
          };
        }
      };
    }
    /**
     * Default custom Element method
     * Invoked when the custom element is first connected to the document's DOM.
     */

  }, {
    key: "connectedCallback",
    value: function connectedCallback() {// console.warn('connectedCallback called');
    }
    /**
     * Default custom Element method
     * Invoked when the custom element is disconnected from the document's DOM.
     */

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this.bound && this.view) {// IMPORTANT ROUTE FIXME, if we unbind the component then it will no longer work if it is retrieved from the cache and the connectedCallback is called
        // because the riba attributes are removed. We need a solution for that, maybe we do not remove the attributes or we recreate the attributes
        // See view bind / unbind methods for that.
        // only unbind if cache is not enabled?
        // this.unbind();
      }

      if (this.attributeObserverFallback) {
        this.attributeObserverFallback.disconnect();
      }

      this.removeEventListenerForRibaParent();
      this.removeEventListenersForRibaAttributes(this.observedAttributes);
    }
    /**
     * Default custom Element method
     * Invoked when one of the custom element's attributes is added, removed, or changed.
     * @param attributeName
     * @param oldValue
     * @param newValue
     * @param namespace
     */

  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(attributeName, oldValue, newValue, namespace) {
      // this.debug("attributeChangedCallback", attributeName, newValue);
      if (this.observedAttributesToCheck && this.observedAttributesToCheck[attributeName]) {
        this.observedAttributesToCheck[attributeName].initialized = true;
      }

      newValue = this.parseAttribute(newValue);
      var parsedAttributeName = (0,type/* camelCase */.eV)(attributeName);

      if (this.scope && this.scope[parsedAttributeName]) {
        oldValue = this.scope[parsedAttributeName];
      } // automatically inject observed attributes to view scope


      this.scope[parsedAttributeName] = newValue; // call custom attribute changed callback with parsed values

      this.parsedAttributeChangedCallback(parsedAttributeName, oldValue, newValue, namespace);
      this.bindIfReady();
    }
    /**
     * Similar to attributeChangedCallback but attribute arguments are already parsed as they are stored in the scope
     * @param attributeName
     * @param oldValue
     * @param newValue
     * @param namespace
     */

  }, {
    key: "parsedAttributeChangedCallback",
    value: function parsedAttributeChangedCallback(attributeNames, oldValue, newValue, namespace) {// console.warn('parsedAttributeChangedCallback called', attributeNames, oldValue, newValue, namespace);
    }
    /**
     * Default custom Element method
     * Invoked when one of the custom element's attributes is added, removed, or changed.
     * Note: Not supported on polyfill: https://github.com/webcomponents/custom-elements#known-bugs-and-limitations
     * @param oldDocument
     * @param newDocument
     */

  }, {
    key: "adoptedCallback",
    value: function adoptedCallback(oldDocument, newDocument) {// console.warn('adoptedCallback called', oldDocument, newDocument);
    }
  }, {
    key: "loadTemplate",
    value: function () {
      var _loadTemplate = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        var _this4 = this;

        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(this.templateLoaded === true)) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt("return", null);

              case 2:
                if (this.checkRequiredAttributes()) {
                  _context3.next = 5;
                  break;
                }

                this.debug("Not all required attributes are set to load the template");
                return _context3.abrupt("return", null);

              case 5:
                this.templateLoaded = true; // if innerHTML is null this component uses the innerHTML which he already has!

                return _context3.abrupt("return", Promise.resolve(this.template()).then(function (template) {
                  if (template instanceof HTMLElement) {
                    _this4.el.innerHTML = "";

                    _this4.el.appendChild(template);
                  } else if (template !== null) {
                    _this4.el.innerHTML = template;
                  }

                  return template;
                })["catch"](function (error) {
                  console.error(error);
                  _this4.templateLoaded = false;
                  return null;
                }));

              case 7:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function loadTemplate() {
        return _loadTemplate.apply(this, arguments);
      }

      return loadTemplate;
    }()
  }, {
    key: "bind",
    value: function () {
      var _bind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var _this5 = this;

        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(this.bound === true)) {
                  _context4.next = 2;
                  break;
                }

                return _context4.abrupt("return", this.view);

              case 2:
                if (this.checkRequiredAttributes()) {
                  _context4.next = 5;
                  break;
                }

                this.debug("Not all required attributes are set for bind");
                return _context4.abrupt("return");

              case 5:
                this.bound = true;
                _context4.next = 8;
                return this.beforeBind().then(function () {
                  if (!_this5.el) {
                    throw new Error("this.el is not defined");
                  }

                  _this5.debug("Start to bind Riba");

                  _this5.riba = new riba/* Riba */.D();

                  var viewOptions = _this5.riba.getViewOptions({
                    handler: _this5.eventHandler(_this5),
                    formatters: {
                      call: _this5.callFormatterHandler(_this5),
                      args: _this5.argsFormatterHandler(_this5)
                    }
                  });

                  _this5.view = new view/* View */.G(Array.prototype.slice.call(_this5.el.childNodes), _this5.scope, viewOptions);
                  _this5.scope = _this5.view.models;

                  _this5.view.bind();

                  return _this5.view;
                }).then(function () {
                  return _this5.afterBind();
                })["catch"](function (error) {
                  _this5.bound = false;
                  console.error(error);
                });

              case 8:
                return _context4.abrupt("return", this.view);

              case 9:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function bind() {
        return _bind.apply(this, arguments);
      }

      return bind;
    }()
  }, {
    key: "unbind",
    value: function () {
      var _unbind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {
        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (this.view) {
                  this.bound = false;
                  this.view.unbind();
                  delete this.view;
                }

              case 1:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function unbind() {
        return _unbind.apply(this, arguments);
      }

      return unbind;
    }()
  }, {
    key: "build",
    value: function () {
      var _build = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6() {
        return regenerator_default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (this.view) {
                  this.view.build();
                }

              case 1:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function build() {
        return _build.apply(this, arguments);
      }

      return build;
    }()
  }, {
    key: "beforeBind",
    value: function () {
      var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee7() {
        return regenerator_default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                this.debug("beforeBind", this.scope);

              case 1:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function beforeBind() {
        return _beforeBind.apply(this, arguments);
      }

      return beforeBind;
    }()
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee8() {
        return regenerator_default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this.debug("afterBind", this.scope);

              case 1:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
  }, {
    key: "beforeTemplate",
    value: function () {
      var _beforeTemplate = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee9() {
        return regenerator_default().wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));

      function beforeTemplate() {
        return _beforeTemplate.apply(this, arguments);
      }

      return beforeTemplate;
    }()
  }, {
    key: "afterTemplate",
    value: function () {
      var _afterTemplate = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee10(template) {
        return regenerator_default().wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10);
      }));

      function afterTemplate(_x2) {
        return _afterTemplate.apply(this, arguments);
      }

      return afterTemplate;
    }()
  }, {
    key: "onReady",
    value: function () {
      var _onReady = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee11() {
        return regenerator_default().wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11);
      }));

      function onReady() {
        return _onReady.apply(this, arguments);
      }

      return onReady;
    }()
  }, {
    key: "askForRibaParent",
    value: function askForRibaParent() {
      this.el.dispatchEvent(new CustomEvent("ask-for-parent"));
    }
  }, {
    key: "askForRibaAttribute",
    value: function askForRibaAttribute(attrName) {
      //TODO Fix if co-* has different keypath as attribute name
      var eventName = "ask-for-attribute:" + attrName; // this.debug("Trigger " + eventName);

      this.el.dispatchEvent(new CustomEvent(eventName));
    }
  }, {
    key: "askForRibaAttributes",
    value: function askForRibaAttributes(observedAttributes) {
      var _iterator2 = _createForOfIteratorHelper(observedAttributes),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var observedAttribute = _step2.value;
          this.askForRibaAttribute(observedAttribute);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "onParentChanged",
    value: function onParentChanged(event) {
      // this.debug("onParentChanged", event.detail);
      this.scope.$parent = event.detail;
    }
  }, {
    key: "onRibaAttributeChanged",
    value: function onRibaAttributeChanged(event) {
      var data = event.detail;
      this.debug("onRibaAttributeChanged", data);
      var oldValue = this.scope[data.name];
      this.attributeChangedCallback(data.name, oldValue, data.newValue, data.namespace);
    }
  }, {
    key: "listenForRibaParent",
    value: function listenForRibaParent() {
      this.el.addEventListener("parent", this.onParentChanged.bind(this));
    }
  }, {
    key: "removeEventListenerForRibaParent",
    value: function removeEventListenerForRibaParent() {
      this.el.removeEventListener("parent", this.onParentChanged.bind(this));
    }
  }, {
    key: "listenForRibaAttribute",
    value: function listenForRibaAttribute(attrName) {
      var eventName = "attribute:" + attrName;
      this.debug("Listen for " + eventName);
      this.el.addEventListener(eventName, this.onRibaAttributeChanged.bind(this));
    }
  }, {
    key: "removeEventListenerForRibaAttribute",
    value: function removeEventListenerForRibaAttribute(attrName) {
      this.el.removeEventListener("attribute:" + attrName, this.onRibaAttributeChanged.bind(this));
    }
  }, {
    key: "listenForRibaAttributes",
    value: function listenForRibaAttributes(observedAttributes) {
      var _iterator3 = _createForOfIteratorHelper(observedAttributes),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var observedAttribute = _step3.value;
          this.listenForRibaAttribute(observedAttribute);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }, {
    key: "removeEventListenersForRibaAttributes",
    value: function removeEventListenersForRibaAttributes(observedAttributes) {
      var _iterator4 = _createForOfIteratorHelper(observedAttributes),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var observedAttribute = _step4.value;
          this.removeEventListenerForRibaAttribute(observedAttribute);
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }
    }
  }, {
    key: "initRibaAttributeObserver",
    value: function initRibaAttributeObserver(observedAttributes) {
      this.listenForRibaParent();
      this.listenForRibaAttributes(observedAttributes);
      this.askForRibaParent();
      this.askForRibaAttributes(observedAttributes);
    }
    /**
     * Load all attributes and calls the attributeChangedCallback for each attribute.
     * This method is used for fallback implementations, normally the browser calls the attributeChangedCallback for you
     */

  }, {
    key: "loadAttributes",
    value: function loadAttributes(observedAttributes) {
      var attributes = this.el.attributes;

      for (var i in attributes) {
        var attribute = attributes[i];
        var name = attribute.nodeName;

        if (observedAttributes.indexOf(name) !== -1) {
          var newValue = attribute.nodeValue;
          this.attributeChangedCallback(name, undefined, newValue, null);
        }
      }
    }
    /**
     * Event handler to listen attribute change event as fallback for MutationObserver
     */

  }, {
    key: "initAttributeObserver",
    value: function initAttributeObserver(observedAttributes) {
      var _this6 = this;

      this.loadAttributes(observedAttributes);
      this.observedAttributes = observedAttributes;

      if (window.customElements && !this._fallback && !window.forceComponentFallback) {// use native implementaion
        // this.debug("initAttributeObserver: Use native implementaion");
      } else {
        if (window.MutationObserver) {
          // use MutationObserver as fallback
          this.attributeObserverFallback = new MutationObserver(function (mutations) {
            mutations.forEach(function (mutation) {
              if (mutation.type === "attributes") {
                if (mutation.attributeName) {
                  // if this attribute is a watched attribute
                  if (observedAttributes.indexOf(mutation.attributeName) !== -1) {
                    var newValue = _this6.el.getAttribute(mutation.attributeName);

                    _this6.attributeChangedCallback(mutation.attributeName, mutation.oldValue, newValue, mutation.attributeNamespace);
                  }
                }
              }
            });
          });
          this.attributeObserverFallback.observe(this.el, {
            attributes: true
          });
        }
      }
    }
  }]);

  return Component;
}(FakeHTMLElement);

defineProperty_default()(Component, "tagName", void 0);

/***/ }),

/***/ 9148:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "w": () => /* reexport safe */ _component_component__WEBPACK_IMPORTED_MODULE_1__.w
/* harmony export */ });
/* harmony import */ var _services_component_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5163);
/* harmony import */ var _component_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2603);



/***/ }),

/***/ 9456:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "VideoComponent": () => /* reexport */ VideoComponent
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(7857);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ../../riba/packages/core/src/component/component.ts + 2 modules
var component = __webpack_require__(2603);
// CONCATENATED MODULE: ../../riba/packages/core/src/components/video/video.component.ts











function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var VideoComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(VideoComponent, _Component);

  var _super = _createSuper(VideoComponent);

  createClass_default()(VideoComponent, [{
    key: "muted",
    get: function get() {
      return this.video && this.video.muted;
    },
    set: function set(muted) {
      this.video.muted = muted;
      this.scope.muted = this.video.muted;

      if (muted) {
        this.video.setAttribute("muted", "");
      } else {
        this.video.removeAttribute("muted");
      }
    }
    /**
     * * 1.0 is highest volume (100%. This is default)
     * * 0.5 is half volume (50%)
     * * 0.0 is silent (same as mute)
     */

  }, {
    key: "volume",
    get: function get() {
      return this.video ? this.video.volume : 0;
    },
    set: function set(volume) {
      this.video.volume = volume;
      this.scope.volume = this.video.volume;
    }
  }, {
    key: "loop",
    get: function get() {
      return this.video && this.video.loop;
    },
    set: function set(loop) {
      this.video.loop = loop;
      this.scope.loop = this.video.loop;

      if (loop) {
        this.video.setAttribute("loop", "");
      } else {
        this.video.removeAttribute("loop");
      }
    }
  }, {
    key: "controls",
    get: function get() {
      return this.video && this.video.controls;
    },
    set: function set(controls) {
      this.video.controls = controls;
      this.scope.controls = this.video.controls;

      if (controls) {
        this.video.setAttribute("controls", ""); // show controls

        this.video.dispatchEvent(new Event("mouseover"));
        this.video.dispatchEvent(new Event("mouseenter"));
        this.video.dispatchEvent(new Event("mousemove"));
      } else {
        this.video.removeAttribute("controls");
      }
    }
  }, {
    key: "currentTime",
    get: function get() {
      return this.video ? this.video.currentTime : 0;
    },
    set: function set(currentTime) {
      this.video.currentTime = currentTime;
      this.scope.currentTime = this.video.currentTime;
    }
    /**
     * @readonly
     */

  }, {
    key: "paused",
    get: function get() {
      return this.video && this.video.paused;
    }
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["video-src", "autoplay-on-min-buffer", "autoplay-media-query"];
    }
  }]);

  function VideoComponent(element) {
    var _this;

    classCallCheck_default()(this, VideoComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", true);

    defineProperty_default()(assertThisInitialized_default()(_this), "alreadyStartedPlaying", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "wasPaused", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "video", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      // properties
      muted: _this.muted,
      volume: _this.volume,
      loop: _this.loop,
      controls: _this.controls,
      currentTime: _this.currentTime,
      videoSrc: undefined,
      autoplayOnMinBuffer: 0,
      autoplayMediaQuery: "",

      /**
       * @readonly
       */
      paused: _this.paused,
      // methods
      toggleMute: _this.toggleMute,
      toggleControls: _this.toggleControls,
      play: _this.play,
      pause: _this.pause,
      togglePlay: _this.togglePlay
    });

    var video = _this.el.querySelector("video");

    _this.video = video;
    return _this;
  }

  createClass_default()(VideoComponent, [{
    key: "toggleMute",
    value: function toggleMute() {
      this.muted = !this.muted;
    }
  }, {
    key: "toggleControls",
    value: function toggleControls() {
      this.controls = !this.controls;
    }
  }, {
    key: "play",
    value: function play() {
      this.video.play();
    }
  }, {
    key: "pause",
    value: function pause() {
      this.video.pause();
    }
  }, {
    key: "togglePlay",
    value: function togglePlay() {
      if (this.paused) {
        this.play();
      } else {
        this.pause();
      }
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(VideoComponent.prototype), "connectedCallback", this).call(this);

      var video = this.el.querySelector("video");

      if (!video) {
        throw new Error("The video child element is required!");
      }

      this.video = video;
      this.scope.muted = this.video.muted;
      this.scope.volume = this.video.volume;
      this.scope.loop = this.video.loop;
      this.scope.controls = this.video.controls;
      this.scope.currentTime = this.video.currentTime;
      this.scope.paused = this.video.paused;
      this.init(VideoComponent.observedAttributes);
    }
  }, {
    key: "afterBind",
    value: function () {
      var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var sourceElement, mediaQueryList;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(VideoComponent.prototype), "afterBind", this).call(this);

              case 2:
                //video-src attribute
                if (this.scope.videoSrc) {
                  sourceElement = this.video.querySelector("source");

                  if (!sourceElement) {
                    sourceElement = document.createElement("source");
                    this.video.appendChild(sourceElement);
                  }

                  sourceElement.setAttribute("src", this.scope.videoSrc);
                }

                if (this.scope.autoplayMediaQuery) {
                  //autoplay-media-query attribute
                  mediaQueryList = window.matchMedia(this.scope.autoplayMediaQuery);
                  mediaQueryList.addEventListener("change", this.onMediaQueryListEvent.bind(this));

                  if (mediaQueryList.matches) {
                    this.autoplay();
                  }
                } else if (this.scope.autoplayOnMinBuffer) {
                  //autoplay-on-min-buffer attribute
                  this.autoplay();
                }

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function afterBind() {
        return _afterBind.apply(this, arguments);
      }

      return afterBind;
    }()
    /**
     * Loads the media and checks if the autoplay-on-min-buffer is set
     */

  }, {
    key: "autoplay",
    value: function autoplay() {
      if (this.scope.autoplayOnMinBuffer) {
        this.video.addEventListener("progress", this.onVideoProgress.bind(this));
        this.video.addEventListener("canplaythrough", this.forceAutoplay.bind(this) //trust browser more than ourselves
        );
        this.forceLoad();
      } else {
        this.forceAutoplay();
      }
    }
  }, {
    key: "forceLoad",
    value: function forceLoad() {
      this.video.setAttribute("preload", "auto");
      this.video.load();
    }
    /**
     * Forces autoplay without checking for the autoplay-on-min-buffer event
     */

  }, {
    key: "forceAutoplay",
    value: function forceAutoplay() {
      if (!this.alreadyStartedPlaying) {
        this.alreadyStartedPlaying = true;
        this.video.muted = true; //video is required to be muted if autoplay video is supposed to autoplay

        this.forceLoad();
        this.video.play();
      }
    }
    /*********************
     * Event listener start
     *********************/

  }, {
    key: "onMediaQueryListEvent",
    value: function onMediaQueryListEvent(event) {
      if (event.matches) {
        //if mediaquery matches, play video or start autoplay
        if (this.alreadyStartedPlaying) {
          if (!this.wasPaused) {
            this.play();
          }
        } else {
          this.autoplay();
        }
      } else {
        //if mediaquery stops matching, pause video if not already paused
        this.wasPaused = this.video.paused;
        this.pause();
      }
    }
  }, {
    key: "onVideoProgress",
    value: function onVideoProgress() {
      if (this.alreadyStartedPlaying) return;

      if (isNaN(this.video.duration)) {
        console.warn("Video duration is NaN");
        return;
      } //calculate already buffered amount


      var bufferedAmount = 0;

      for (var i = 0; i < this.video.buffered.length; i++) {
        bufferedAmount += this.video.buffered.end(i) - this.video.buffered.start(i);
      } //if buffered amount is over given percentage in scope, force autoplay


      if (bufferedAmount / this.video.duration > this.scope.autoplayOnMinBuffer) {
        this.forceAutoplay();
      }
    }
    /*********************
     * Event listener end
     *********************/

  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(observedAttributes) {
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", get_default()(getPrototypeOf_default()(VideoComponent.prototype), "init", this).call(this, observedAttributes).then(function (view) {
                  return view;
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }() // deconstructor

  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(VideoComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return VideoComponent;
}(component/* Component */.w);

defineProperty_default()(VideoComponent, "tagName", "rv-video");
// CONCATENATED MODULE: ../../riba/packages/core/src/components/index.ts
// Do not export abstract components: export { TemplatesComponent } from "./templates/templates.component";


/***/ }),

/***/ 1247:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "h": () => /* binding */ coreModule
/* harmony export */ });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8802);
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1999);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(504);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9456);
/* harmony import */ var _adapters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2754);





var coreModule = {
  formatters: _formatters__WEBPACK_IMPORTED_MODULE_1__,
  binders: _binders__WEBPACK_IMPORTED_MODULE_0__,
  services: _services__WEBPACK_IMPORTED_MODULE_2__,
  components: _components__WEBPACK_IMPORTED_MODULE_3__,
  adapters: _adapters__WEBPACK_IMPORTED_MODULE_4__
};
window.coreModule = coreModule;


/***/ }),

/***/ 1999:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "MapFormatter": () => /* reexport */ MapFormatter,
  "andFormatter": () => /* reexport */ andFormatter,
  "appendFormatter": () => /* reexport */ appendFormatter,
  "argsFormatter": () => /* reexport */ argsFormatter,
  "betweenFormatter": () => /* reexport */ betweenFormatter,
  "booleanFormatter": () => /* reexport */ booleanFormatter,
  "callFormatter": () => /* reexport */ callFormatter,
  "containsFormatter": () => /* reexport */ containsFormatter,
  "debugFormatter": () => /* reexport */ debugFormatter,
  "defaultFormatter": () => /* reexport */ defaultFormatter,
  "digitsFormatter": () => /* reexport */ digitsFormatter,
  "dividedByFormatter": () => /* reexport */ dividedByFormatter,
  "downcaseFormatter": () => /* reexport */ downcaseFormatter,
  "egtFormatter": () => /* reexport */ egtFormatter,
  "eltFormatter": () => /* reexport */ eltFormatter,
  "emptyFormatter": () => /* reexport */ emptyFormatter,
  "eqFormatter": () => /* reexport */ eqFormatter,
  "evenFormatter": () => /* reexport */ evenFormatter,
  "filledFormatter": () => /* reexport */ filledFormatter,
  "firstFormatter": () => /* reexport */ firstFormatter,
  "gcdFormatter": () => /* reexport */ gcdFormatter,
  "getFormatter": () => /* reexport */ getFormatter,
  "gtFormatter": () => /* reexport */ gtFormatter,
  "handleizeFormatter": () => /* reexport */ handleizeFormatter,
  "isArrayFormatter": () => /* reexport */ isArrayFormatter,
  "isBooleanFormatter": () => /* reexport */ isBooleanFormatter,
  "isDefinedFormatter": () => /* reexport */ isDefinedFormatter,
  "isIntegerFormatter": () => /* reexport */ isIntegerFormatter,
  "isLastFormatter": () => /* reexport */ isLastFormatter,
  "isNumberFormatter": () => /* reexport */ isNumberFormatter,
  "isObjectFormatter": () => /* reexport */ isObjectFormatter,
  "isStringFormatter": () => /* reexport */ isStringFormatter,
  "isUndefinedFormatter": () => /* reexport */ isUndefinedFormatter,
  "jsonFormatter": () => /* reexport */ jsonFormatter,
  "lastFormatter": () => /* reexport */ lastFormatter,
  "ltFormatter": () => /* reexport */ ltFormatter,
  "matchFormatter": () => /* reexport */ matchFormatter,
  "minusFormatter": () => /* reexport */ minusFormatter,
  "moduloFormatter": () => /* reexport */ moduloFormatter,
  "neFormatter": () => /* reexport */ neFormatter,
  "notFormatter": () => /* reexport */ notFormatter,
  "numberFormatFormatter": () => /* reexport */ numberFormatFormatter,
  "orFormatter": () => /* reexport */ orFormatter,
  "padEndFormatter": () => /* reexport */ padEndFormatter,
  "padStartFormatter": () => /* reexport */ padStartFormatter,
  "parseFormatter": () => /* reexport */ parseFormatter,
  "pluralizeFormatter": () => /* reexport */ pluralizeFormatter,
  "plusFormatter": () => /* reexport */ plusFormatter,
  "prependFormatter": () => /* reexport */ prependFormatter,
  "randomFormatter": () => /* reexport */ randomFormatter,
  "rangeFormatter": () => /* reexport */ rangeFormatter,
  "replaceFirstFormatter": () => /* reexport */ replaceFirstFormatter,
  "replaceFormatter": () => /* reexport */ replaceFormatter,
  "setFormatter": () => /* reexport */ setFormatter,
  "sizeFormatter": () => /* reexport */ sizeFormatter,
  "sliceFormatter": () => /* reexport */ sliceFormatter,
  "stringFormatter": () => /* reexport */ stringFormatter,
  "stripFormatter": () => /* reexport */ stripFormatter,
  "stripHtmlFormatter": () => /* reexport */ stripHtmlFormatter,
  "timesFormatter": () => /* reexport */ timesFormatter,
  "toDecimalFormatter": () => /* reexport */ toDecimalFormatter,
  "toFloatFormatter": () => /* reexport */ toFloatFormatter,
  "toIntegerFormatter": () => /* reexport */ toIntegerFormatter,
  "toNumberFormatter": () => /* reexport */ toNumberFormatter,
  "toStringFormatter": () => /* reexport */ toStringFormatter,
  "unevenFormatter": () => /* reexport */ unevenFormatter,
  "upcaseFormatter": () => /* reexport */ upcaseFormatter
});

// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/contains.formatter.ts

/**
 * Returns true if an object, array or string contains an object, property or substring.
 * @see https://gist.github.com/der-On/cdafe908847e2b882691
 */

var containsFormatter = {
  name: "contains",
  read: function read(value, attr, search) {
    if ((0,type/* isString */.HD)(value)) {
      return value.indexOf(attr) > -1;
    } else if ((0,type/* isArray */.kJ)(value)) {
      if ((0,type/* isDefined */.$K)(attr)) {
        if ((0,type/* isDefined */.$K)(search)) {
          return value[attr] === search;
        } else {
          return value.indexOf(attr) !== -1;
        }
      }
    } else if ((0,type/* isObject */.Kn)(value)) {
      if ((0,type/* isDefined */.$K)(attr)) {
        if ((0,type/* isDefined */.$K)(search)) {
          return value[attr] === search;
        } else {
          return Object.keys(value).indexOf(attr) !== -1;
        }
      }
    }

    return false;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/size.formatter.ts
/**
 * Returns the size of a string (the number of characters) or an array (the number of elements).
 * @see https://help.shopify.com/themes/liquid/filters/array-filters#size
 */
var sizeFormatter = {
  name: "size",
  read: function read(value) {
    return value && value.length ? value.length : 0;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/empty.formatter.ts

var emptyFormatter = {
  name: "empty",
  read: function read(a) {
    return sizeFormatter.read(a) <= 0;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/get.formatter.ts

/**
 * Get property of object or array
 * @see https://gist.github.com/der-On/cdafe908847e2b882691
 */

var getFormatter = {
  name: "get",
  read: function read(value, key) {
    if ((0,type/* isObject */.Kn)(value) || (0,type/* isArray */.kJ)(value)) {
      return value[key];
    }

    if ((0,type/* isString */.HD)(value)) {
      if ((0,type/* isNumber */.hj)(key)) {
        return value.charAt(key);
      }
    }

    return null;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/first.formatter.ts

/**
 * Array formatter to get the first element of an array
 */

var firstFormatter = {
  name: "first",
  read: function read(value) {
    return getFormatter.read(value, 0);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/is-last.formatter.ts
/**
 * Returns true if value index is the last index of the array. Returns false if it is not the last index.
 * ```
 *  <div rv-each-image="product.images" rv-hide="product.images | last %image%"></div>
 * ```
 * @see https://help.shopify.com/themes/liquid/objects/for-loops#forloop-last
 */
var isLastFormatter = {
  name: "isLast",
  read: function read(array, i) {
    return array.length === i + 1;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/last.formatter.ts

/**
 * Array formatter to get the last element of an array
 */

var lastFormatter = {
  name: "last",
  read: function read(array) {
    return getFormatter.read(array, array.length - 1);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/random.formatter.ts

/**
 * Gets back random value of array
 * @example <div rv-add-class='"["col-2", "col-3", "col-4", "col-5", "col-6"]" | parse | random'>
 *
 * Or gets back a randon number
 * Random number between 0 and 6:
 * @example <div rv-add-class='6 | random'>
 * Random number between 1 and 6:
 * @example <div rv-add-class='6 | random 1'>
 */

var randomFormatter = {
  name: "random",
  read: function read(arrayOrMaxNumber) {
    var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    // If is array
    if ((0,type/* isArray */.kJ)(arrayOrMaxNumber)) {
      return arrayOrMaxNumber[Math.floor(Math.random() * arrayOrMaxNumber.length)];
    } // If is number


    if ((0,type/* isNumber */.hj)(arrayOrMaxNumber)) {
      var max = arrayOrMaxNumber;
      return Math.floor(Math.random() * (max - min + 1) + min);
    }

    return null;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/range.formatter.ts

/**
 * Array formatter to get a subarray from array
 */

var rangeFormatter = {
  name: "range",
  read: function read(arr, start, end) {
    start = Number((0,type/* isNumber */.hj)(start) ? start : 0);
    end = Number((0,type/* isNumber */.hj)(end) ? end : arr.length - 1);

    if (end > arr.length - 1) {
      end = arr.length - 1;
    }

    if (start > end) {
      return [];
    }

    return arr.slice(Number(start || 0), 1 + end);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/set.formatter.ts

/**
 * Sets property of object, array or value
 * @see https://gist.github.com/der-On/cdafe908847e2b882691
 */

var setFormatter = {
  name: "set",
  read: function read(obj, key, value) {
    // the key is the value if value is not set
    if (!value) {
      value = key;
    }

    if ((0,type/* isObject */.Kn)(obj) || (0,type/* isArray */.kJ)(obj)) {
      obj[key] = value;
    } else {
      obj = value;
    }

    return obj;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/array/index.ts
// property / object / array formatters










// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/and.formatter.ts
/**
 * a && b
 */
var andFormatter = {
  name: "and",
  read: function read(a, b) {
    return a && b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/between.formatter.ts
/**
 * a >= b && a <= c
 */
var betweenFormatter = {
  name: "between",
  read: function read(num) {
    return num >= (arguments.length <= 1 ? undefined : arguments[1]) && num <= (arguments.length <= 2 ? undefined : arguments[2]);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/egt.formatter.ts
/**
 * equal or greater than
 * a >= b
 */
var egtFormatter = {
  name: "egt",
  read: function read(a, b) {
    return a >= b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/eq.formatter.ts
/**
 * a === b
 */
var eqFormatter = {
  name: "eq",
  read: function read(a, b) {
    return a === b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/gt.formatter.ts
/**
 * greater than
 * a > b
 */
var gtFormatter = {
  name: "gt",
  read: function read(a, b) {
    return a > b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/ne.formatter.ts
/**
 * a !== b
 */
var neFormatter = {
  name: "ne",
  read: function read(a, b) {
    return a !== b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/lt.formatter.ts
/**
 * lower than
 * a < b
 */
var ltFormatter = {
  name: "lt",
  read: function read(a, b) {
    return a < b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/elt.formatter.ts
/**
 * euqal or lower than
 * a <= b
 */
var eltFormatter = {
  name: "elt",
  read: function read(a, b) {
    return a <= b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/or.formatter.ts
/**
 * a || b
 */
var orFormatter = {
  name: "or",
  read: function read(a, b) {
    return a || b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/not.formatter.ts
/**
 * !a
 */
var notFormatter = {
  name: "not",
  read: function read(a) {
    return !a;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/compare/index.ts
/**
 * compare functions
 * Add useful general-purpose formatters for Rivets.js
 * Some formatters from cart.js and rivetsjs-stdlib
 * @see https://github.com/discolabs/cartjs/
 * @see https://github.com/matthieuriolo/rivetsjs-stdlib
 * @see https://github.com/JumpLinkNetwork/shopify-productjs
 */










// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/plus.formatter.ts
/**
 * Adds a number to an value.
 * @see https://help.shopify.com/themes/liquid/filters/math-filters#plus
 */
var plusFormatter = {
  name: "plus",
  read: function read(a, b) {
    return Number(a) + Number(b);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/minus.formatter.ts
/**
 * Subtracts a number from an output.
 * @see https://help.shopify.com/themes/liquid/filters/math-filters#minus
 */
var minusFormatter = {
  name: "minus",
  read: function read(a, b) {
    return Number(a) - Number(b);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/times.formatter.ts
/**
 * Multiplies an value by a number.
 * @see https://help.shopify.com/themes/liquid/filters/math-filters#times
 */
var timesFormatter = {
  name: "times",
  read: function read(a, b) {
    return Number(a) * Number(b);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/divided-by.formatter.ts
/**
 * Divides an output by a number. The output is rounded down to the nearest integer.
 * @see https://help.shopify.com/themes/liquid/filters/math-filters#divided_by
 */
var dividedByFormatter = {
  name: "dividedBy",
  read: function read(a, b) {
    return Number(a) / Number(b);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/modulo.formatter.ts
/**
 * Divides an value by a number and returns the remainder.
 * @see https://help.shopify.com/themes/liquid/filters/math-filters#modulo
 */
var moduloFormatter = {
  name: "modulo",
  read: function read(a, b) {
    return Number(a) % Number(b);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/gcd.formatter.ts
/**
 * Greatest common divisor (GCD) useful to calculate a ratio
 * @see https://stackoverflow.com/a/1186465/1465919
 */
var _gcd = function _gcd(a, b) {
  return b === 0 ? a : _gcd(b, a % b);
};

var gcdFormatter = {
  name: "gcd",
  read: _gcd
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/even.formatter.ts
/**
 * Check if a number is even or not
 */
var evenFormatter = {
  name: "even",
  read: function read(num) {
    return num % 2 === 0;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/uneven.formatter.ts
var unevenFormatter = {
  name: "uneven",
  read: function read(num) {
    return num % 2 !== 0;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/digits.formatter.ts

/**
 * Just get the digits of a string, useful to remove px from css value
 * @see http://stackoverflow.com/a/1100653/1465919
 */

var digitsFormatter = {
  name: "digits",
  read: function read(str) {
    if ((0,type/* isNumber */.hj)(str)) {
      return str;
    }

    return (0,type/* justDigits */.XM)(str);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/math/index.ts
// math formatters









// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/args.formatter.ts
/**
 * Sets arguments to a function without directly call them
 * ```html
 * <button rv-on-click="sum | args 1 2"></button>
 * ```
 * @param fn The function the event handler should call
 * @param fnArgs the parameters you wish to get called the function with
 */
var argsFormatter = {
  name: "args",
  read: function read(fn) {
    var _this = this;

    for (var _len = arguments.length, fnArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      fnArgs[_key - 1] = arguments[_key];
    }

    return function (event, scope, el, binding) {
      // append the event handler args to passed args
      fnArgs.push(event);
      fnArgs.push(scope);
      fnArgs.push(el);
      fnArgs.push(binding);
      return fn.apply(_this, fnArgs);
    };
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/debug.formatter.ts
var debugFormatter = {
  name: "debug",
  read: function read(toPrint) {
    var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "debug";
    console[level](toPrint);
    return toPrint;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/default.formatter.ts

/**
 * Sets a default value if the first value is not set
 * @see https://gist.github.com/der-On/cdafe908847e2b882691
 */

var defaultFormatter = {
  name: "default",
  read: function read(value, defaultValue) {
    if ((0,type/* isDefined */.$K)(value)) {
      if ((0,type/* isString */.HD)(value)) {
        if (value.length > 0) {
          return value;
        } else {
          return defaultValue;
        }
      }

      return value;
    }

    return defaultValue;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/call.formatter.ts
// babel misinterprets the "this" fake parameter, so we define it in this interfaces

/**
 * Calls a function with arguments
 * @param fn The function you wish to call
 * @param args the parameters you wish to call the function with
 */
var callFormatter = {
  name: "call",
  read: function read(fn) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return fn.apply(this, args);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/map.formatter.ts
/* eslint-disable prefer-spread */

/* eslint-disable prefer-rest-params */

/**
 * Calls a method on the given object. The first parameters defines the object and the second the methodname.
 * Target will be passed as the first argument to the method.
 * @see https://github.com/matthieuriolo/rivetsjs-stdlib#map
 * @example
 * ```html
 * <span rv-text="10 | map 'Math' 'sin'"></span>
 * ```
 * @returns e.g. as in the example: `<span>-0.5440211108893699</span>`
 */
var MapFormatter = {
  name: "map",

  /**
   * Calls a method on the given object. The first parameters defines the object and the second the methodname.
   * Target will be passed as the first argument to the method.
   * @see https://github.com/matthieuriolo/rivetsjs-stdlib#map
   * @example
   * ```html
   * <span rv-text="10 | map 'Math' 'sin'"></span>
   * ```
   * @returns e.g. as in the example: `<span>-0.5440211108893699</span>`
   * @param target
   * @param obj
   * @param prop
   */
  read: function read(target, obj, prop) {
    var args = Array.prototype.slice.call(arguments);
    args.splice(1, 2);
    return obj[prop].apply(obj, args);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/special/index.ts
// special helper formatters





// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/append.formatter.ts
/**
 * Appends characters to a string.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#append
 */
var appendFormatter = {
  name: "append",
  read: function read(a, b) {
    return a + b;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/downcase.formatter.ts
/**
 * Converts a string into lowercase.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#downcase
 */
var downcaseFormatter = {
  name: "downcase",
  read: function read(str) {
    return str.toLowerCase();
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/filled.formatter.ts


/**
 * Check if value is a string and not empty
 */

var filledFormatter = {
  name: "filled",
  read: function read(str) {
    return (0,type/* isString */.HD)(str) && !emptyFormatter.read(str.replace(/\s/g, ""));
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/strip.formatter.ts
/**
 * Strips tabs, spaces, and newlines (all whitespace) from the left and right side of a string.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#strip
 */
var stripFormatter = {
  name: "strip",
  read: function read(str) {
    return str.trim();
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/handleize.formatter.ts


var strip = stripFormatter.read;
var downcase = downcaseFormatter.read;
/**
 * Formats a string into a handle.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#handle-handleize
 */

var handleizeFormatter = {
  name: "handleize",
  read: function read(str) {
    str = strip(str);
    str = str.replace(/[^\w\s]/gi, ""); // http://stackoverflow.com/a/4374890

    str = downcase(str);
    return str.replace(/ /g, "-");
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/match.formatter.ts
var matchFormatter = {
  name: "match",
  read: function read(a, regexp, flags) {
    if (!a || !regexp) {
      return false;
    }

    return a.match(new RegExp(regexp, flags));
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/pad-start.formatter.ts
/**
 * The padStart formatter pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length.
 * The padding is applied from the start of the current string.
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
 */
var padStartFormatter = {
  name: "padStart",

  /**
   * The padStart formatter pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length.
   * The padding is applied from the start of the current string.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
   * @param target
   * @param length The length of the resulting string once the current `str` has been padded. If the value is less than `str.length`, then `str` is returned as-is.
   * @param padString The string to pad the current `str` with. If `padString` is too long to stay within the `targetLength`, it will be truncated from the end. The default value is `" "` (`U+0020 'SPACE'`).
   */
  read: function read(target) {
    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    var padString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "0";
    return target.padStart(length, padString);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/pad-end.formatter.ts
/**
 * The padEnd formatters pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length.
 * The padding is applied from the end of the current string.
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd
 */
var padEndFormatter = {
  name: "padEnd",

  /**
   *
   * The padEnd formatters pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length.
   * The padding is applied from the end of the current string.
   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd
   *
   * @param target
   * @param length The length of the resulting string once the current `str` has been padded. If the value is lower than `str.length`, the current string will be returned as-is.
   * @param padString The string to pad the current `str` with. If `padString` is too long to stay within `targetLength`, it will be truncated: for left-to-right languages the left-most part and for right-to-left languages the right-most will be applied. The default value for this parameter is " " (`U+0020`).
   */
  read: function read(target) {
    var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    var padString = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "0";
    return target.padEnd(length, padString);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/to-integer.formatter.ts
/**
 * Returns the integer representation of the given target.
 * @see https://github.com/matthieuriolo/rivetsjs-stdlib/blob/master/src/rivetsstdlib.js#L128
 */
var toIntegerFormatter = {
  name: "toInteger",

  /**
   * Returns the integer representation of the given target.
   * @param target
   */
  read: function read(target) {
    var ret = parseInt(target * 1, 10);
    return isNaN(ret) ? 0 : ret;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/to-float.formatter.ts
/**
 * Returns the float representation of the given target
 * @see https://github.com/matthieuriolo/rivetsjs-stdlib/blob/master/src/rivetsstdlib.js#L133
 */
var toFloatFormatter = {
  name: "toFloat",

  /**
   * Returns the integer representation of the given target.
   * @param target
   */
  read: function read(target) {
    var ret = parseFloat(target * 1.0);
    return isNaN(ret) ? 0.0 : ret;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/to-decimal.formatter.ts


var toDecimalFormatter = {
  name: "toDecimal",
  read: function read(target) {
    if (!toIntegerFormatter.read) {
      throw new Error("toIntegerFormatter must have a read function");
    }

    if (!toFloatFormatter.read) {
      throw new Error("toFloatFormatter must have a read function");
    }

    var retI = toIntegerFormatter.read(target * 1);
    var retF = toFloatFormatter.read(target);
    return retI == retF ? retI : retF;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-integer.formatter.ts
/**
 * Checks if value is a number
 * @see https://github.com/matthieuriolo/rivetsjs-stdlib/blob/master/src/rivetsstdlib.js#L82
 */
var isIntegerFormatter = {
  name: "isInteger",
  read: function read(n) {
    /**
     * Thanks a lot to Dagg Nabbit
     * http://stackoverflow.com/questions/3885817/how-to-check-if-a-number-is-float-or-integer
     */
    return n === +n && n === (n | 0);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/number-format.formatter.ts


 // TODO set by current locale

var DEFAULT_DECIMAL_SEPARATOR = ".";
var DEFAULT_THOUSAND_SEPARATOR = "'";
var DEFAULT_PRECISION = 2;
/**
 * Returns a formatted version of the target as string.
 * The number will always be rounded after the DIN 1333 (1.55 => 1.6 and -1.55 => -1.6)
 */

var numberFormatFormatter = {
  name: "numberFormat",

  /**
   * Returns a formatted version of the target as string.
   * The number will always be rounded after the DIN 1333 (1.55 => 1.6 and -1.55 => -1.6)
   * @param target
   * @param precision (default: 2)
   * @param decimalSeparator (default: ".")
   * @param thousandSeparator (default: "'")
   */
  read: function read(target) {
    var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_PRECISION;
    var decimalSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_DECIMAL_SEPARATOR;
    var thousandSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THOUSAND_SEPARATOR;

    if (!toDecimalFormatter.read) {
      throw new Error("toDecimalFormatter must have a read function");
    }

    if (!isIntegerFormatter.read) {
      throw new Error("isIntegerFormatter must have a read function");
    }

    target = (0,type/* isNumber */.hj)(target) ? target : toDecimalFormatter.read(target);

    if (!isIntegerFormatter.read(precision)) {
      precision = DEFAULT_PRECISION;
    }
    /*
     * Thanks to user2823670
     * http://stackoverflow.com/questions/10015027/javascript-tofixed-not-rounding
     */


    var retStr = (+(Math.round(+(Math.abs(target) + "e" + precision)) + "e" + -precision)).toFixed(precision);
    if (target < 0) retStr = "-" + retStr;
    /**
     * Thanks to Elias Zamaria
     * http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript
     */

    var ret = retStr.split(".");

    if (ret.length == 2) {
      return ret[0].replace(/\B(?=(\d{3})+(?!\d))/g, thousandSeparator) + decimalSeparator + ret[1];
    }

    return ret[0].replace(/\B(?=(\d{3})+(?!\d))/g, thousandSeparator);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/pluralize.formatter.ts

var pluralizeFormatter = {
  name: "pluralize",
  read: function read(input, singular, plural) {
    if (plural === null) {
      plural = singular + "s";
    }

    if ((0,type/* isArray */.kJ)(input)) {
      input = input.length;
    }

    if (input === 1) {
      return singular;
    } else {
      return plural;
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/prepend.formatter.ts
/**
 * Prepends characters to a string.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#prepend
 */
var prependFormatter = {
  name: "prepend",
  read: function read(a, b) {
    return b + a;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/upcase.formatter.ts
/**
 * Converts a string into uppercase.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#upcase
 */
var upcaseFormatter = {
  name: "upcase",
  read: function read(str) {
    return str.toUpperCase();
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/replace.formatter.ts
/**
 * Replaces all occurrences of a string with a substring.
 * @see https://help.shopify.com/en/themes/liquid/filters/string-filters#replace
 */
var replaceFormatter = {
  name: "replace",
  read: function read(str, value, replaceValue) {
    return str.replace(new RegExp(value, "g"), replaceValue);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/replace-first.formatter.ts
/* tslint:disable:variable-name */

/**
 * Replaces the first occurrence of a string with a substring.
 * @see https://help.shopify.com/en/themes/liquid/filters/string-filters#replace_first
 */
var replaceFirstFormatter = {
  name: "replaceFirst",
  read: function read(str, value, replaceValue) {
    return str.replace(value, replaceValue);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/slice.formatter.ts
/**
 * The `slice` formatter returns a substring, starting at the specified index.
 * An optional second parameter can be passed to specify the length of the substring.
 * If no second parameter is given, a substring of one character will be returned.
 * @see https://help.shopify.com/themes/liquid/filters/string-filters#slice
 */
var sliceFormatter = {
  name: "slice",
  read: function read(value, start, end) {
    return value.slice(start, end);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/strip-html.formatter.ts

/**
 * Strips all HTML tags from a string.
 * @see https://help.shopify.com/en/themes/liquid/filters/string-filters#strip_html
 */

var stripHtmlFormatter = {
  name: "stripHtml",
  read: function read(html) {
    return (0,type/* stripHtml */.Vt)(html);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/string/index.ts
// string formatters
















// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/boolean.formatter.ts
/**
 * Converts a variable to boolean
 */
var booleanFormatter = {
  name: "boolean",
  read: function read(value) {
    if (value === "true") {
      return true;
    } else if (value === "false") {
      return false;
    } else {
      return !!value;
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-array.formatter.ts

/**
 * Checks if value is an array
 */

var isArrayFormatter = {
  name: "isArray",
  read: type/* isArray */.kJ
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-boolean.formatter.ts

/**
 * Checks if value is an boolean
 */

var isBooleanFormatter = {
  name: "isBoolean",
  read: type/* isBoolean */.jn
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-defined.formatter.ts

/**
 * Checks if value is defined
 */

var isDefinedFormatter = {
  name: "isDefined",
  read: type/* isDefined */.$K
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-number.formatter.ts

/**
 * Checks if value is a number
 */

var isNumberFormatter = {
  name: "isNumber",
  read: type/* isNumber */.hj
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-object.formatter.ts

/**
 * Checks if value is a object
 */

var isObjectFormatter = {
  name: "isObject",
  read: type/* isObject */.Kn
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-string.formatter.ts

/**
 * Check if value is a string
 */

var isStringFormatter = {
  name: "isString",
  read: function read(str) {
    return (0,type/* isString */.HD)(str);
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/is-undefined.formatter.ts

/**
 * Check if value is undefined
 */

var isUndefinedFormatter = {
  name: "isUndefined",
  read: type/* isUndefined */.o8
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/json.formatter.ts
/**
 * Converts a string into a JSON string.
 * @see https://help.shopify.com/themes/liquid/filters/additional-filters#json
 */
var jsonFormatter = {
  name: "json",
  read: function read(object) {
    var space = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    var replaceSingleQuate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var result = JSON.stringify(object, null, space);

    if (replaceSingleQuate && result) {
      return result.replace(/'/g, "&#39;");
    }

    return result;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/parse.formatter.ts

/**
 * parse json string to object
 * @example <div rv-add-class='"["col-2", "col-3", "col-4", "col-5", "col-6"]" | parse | random'>
 */

var parseFormatter = {
  name: "parse",
  read: function read(jsonString) {
    if ((0,type/* isString */.HD)(jsonString)) {
      return (0,type/* parseJsonString */.uO)(jsonString);
    } else if ((0,type/* isObject */.Kn)(jsonString) || Array.isArray(jsonString)) {
      console.warn("[parseFormatter] You do not need to parse the value because since it already been parsed");
      return jsonString;
    }

    return null;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/to-string.formatter.ts

/**
 * Parses a value to string
 * @param value The value you want to parse to string
 * @param def Default value if value is undefined
 */

var toStringFormatter = {
  name: "toString",
  read: function read(value, def) {
    // If value is an array convert each value in array to string
    if (Array.isArray(value)) {
      for (var i in value) {
        if (value[i]) {
          value[i] = (0,type/* getString */.KF)(value[i]);
        }
      }
    } else if ((0,type/* isObject */.Kn)(value)) {
      for (var key in value) {
        value[key] = (0,type/* getString */.KF)(value[key]);
      }
    } else {
      value = (0,type/* getString */.KF)(value);
    } // If default value is set return the default value if num is 0, null or undefined


    if (def) {
      return value ? value : def;
    }

    return value;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/string.formatter.ts

var stringFormatter = {
  name: "string",
  read: function read(value, def) {
    if (!toStringFormatter || toStringFormatter.read) {
      throw new Error("toStringFormatter.read not defined!");
    } else {
      console.warn("The string formatter is depricated, please use toString instead!");
      return toStringFormatter.read(value, def);
    }
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/to-number.formatter.ts

/**
 * Parse a string to number / float
 * @see http://stackoverflow.com/a/1100653/1465919
 */

var toNumberFormatter = {
  name: "toNumber",
  read: function read(str, def) {
    var num = (0,type/* getNumber */.Dx)(str); // If default value is set return the default value if num is 0, null or undefined

    if (def) {
      return num ? num : def;
    }

    return num;
  }
};
// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/type/index.ts
// property / object formatters

















// CONCATENATED MODULE: ../../riba/packages/core/src/formatters/index.ts







/***/ }),

/***/ 569:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventDispatcher": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_2__.EventDispatcher,
/* harmony export */   "HttpService": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_2__.HttpService,
/* harmony export */   "Utils": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_2__.Utils,
/* harmony export */   "getDataset": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_2__.getDataset,
/* harmony export */   "Component": () => /* reexport safe */ _component__WEBPACK_IMPORTED_MODULE_5__.w,
/* harmony export */   "handleizeFormatter": () => /* reexport safe */ _formatters__WEBPACK_IMPORTED_MODULE_7__.handleizeFormatter,
/* harmony export */   "Riba": () => /* reexport safe */ _riba__WEBPACK_IMPORTED_MODULE_10__.D,
/* harmony export */   "View": () => /* reexport safe */ _view__WEBPACK_IMPORTED_MODULE_11__.G,
/* harmony export */   "coreModule": () => /* reexport safe */ _core_module__WEBPACK_IMPORTED_MODULE_12__.h
/* harmony export */ });
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7360);
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_0__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_0__.handleizeFormatter; } });
/* harmony import */ var _vendors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(851);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(504);
/* harmony import */ var _adapters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2754);
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8802);
/* harmony import */ var _component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9148);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(9456);
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1999);
/* harmony import */ var _binding__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2445);
/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(3655);
/* harmony import */ var _riba__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(1542);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5246);
/* harmony import */ var _core_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(1247);














/***/ }),

/***/ 192:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* unused harmony export Adapter */
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);



/**
 * The default `.` adapter that comes with riba.js. Allows subscribing to
 * properties on plain objects, implemented in ES5 natives using
 * `Object.defineProperty`.
 */

/**
 * TODO For what is this?
 */
var Adapter = function Adapter() {
  _classCallCheck(this, Adapter);

  _defineProperty(this, "name", void 0);

  _defineProperty(this, "counter", void 0);

  _defineProperty(this, "weakmap", void 0);

  _defineProperty(this, "weakReference", void 0);

  _defineProperty(this, "cleanupWeakReference", void 0);

  _defineProperty(this, "stubFunction", void 0);

  _defineProperty(this, "observeMutations", void 0);

  _defineProperty(this, "unobserveMutations", void 0);

  _defineProperty(this, "observe", void 0);

  _defineProperty(this, "unobserve", void 0);

  _defineProperty(this, "get", void 0);

  _defineProperty(this, "set", void 0);
};

/***/ }),

/***/ 8396:
/***/ (() => {



/***/ }),

/***/ 5876:
/***/ (() => {



/***/ }),

/***/ 1385:
/***/ (() => {



/***/ }),

/***/ 93:
/***/ (() => {



/***/ }),

/***/ 4074:
/***/ (() => {



/***/ }),

/***/ 5119:
/***/ (() => {



/***/ }),

/***/ 6289:
/***/ (() => {



/***/ }),

/***/ 4367:
/***/ (() => {



/***/ }),

/***/ 7269:
/***/ (() => {



/***/ }),

/***/ 431:
/***/ (() => {



/***/ }),

/***/ 1149:
/***/ (() => {



/***/ }),

/***/ 7360:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _adapter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(192);
/* harmony import */ var _adapters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8396);
/* harmony import */ var _adapters__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_adapters__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_adapters__WEBPACK_IMPORTED_MODULE_1__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _adapters__WEBPACK_IMPORTED_MODULE_1__.handleizeFormatter; } });
/* harmony import */ var _binder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5876);
/* harmony import */ var _binder__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_binder__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder__WEBPACK_IMPORTED_MODULE_2__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _binder__WEBPACK_IMPORTED_MODULE_2__.handleizeFormatter; } });
/* harmony import */ var _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1385);
/* harmony import */ var _binder_wrapper__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binder_wrapper__WEBPACK_IMPORTED_MODULE_3__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _binder_wrapper__WEBPACK_IMPORTED_MODULE_3__.handleizeFormatter; } });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(93);
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_binders__WEBPACK_IMPORTED_MODULE_4__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binders__WEBPACK_IMPORTED_MODULE_4__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _binders__WEBPACK_IMPORTED_MODULE_4__.handleizeFormatter; } });
/* harmony import */ var _binding__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4074);
/* harmony import */ var _binding__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_binding__WEBPACK_IMPORTED_MODULE_5__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.handleizeFormatter; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_binding__WEBPACK_IMPORTED_MODULE_5__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _binding__WEBPACK_IMPORTED_MODULE_5__.handleizeFormatter; } });
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5119);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_components__WEBPACK_IMPORTED_MODULE_6__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_components__WEBPACK_IMPORTED_MODULE_6__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _components__WEBPACK_IMPORTED_MODULE_6__.handleizeFormatter; } });
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6289);
/* harmony import */ var _formatter__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_formatter__WEBPACK_IMPORTED_MODULE_7__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatter__WEBPACK_IMPORTED_MODULE_7__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _formatter__WEBPACK_IMPORTED_MODULE_7__.handleizeFormatter; } });
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4367);
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_formatters__WEBPACK_IMPORTED_MODULE_8__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_formatters__WEBPACK_IMPORTED_MODULE_8__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _formatters__WEBPACK_IMPORTED_MODULE_8__.handleizeFormatter; } });
/* harmony import */ var _http_data_type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(7269);
/* harmony import */ var _http_data_type__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_http_data_type__WEBPACK_IMPORTED_MODULE_9__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_data_type__WEBPACK_IMPORTED_MODULE_9__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _http_data_type__WEBPACK_IMPORTED_MODULE_9__.handleizeFormatter; } });
/* harmony import */ var _http_method__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(431);
/* harmony import */ var _http_method__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_http_method__WEBPACK_IMPORTED_MODULE_10__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_method__WEBPACK_IMPORTED_MODULE_10__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _http_method__WEBPACK_IMPORTED_MODULE_10__.handleizeFormatter; } });
/* harmony import */ var _http_service_options__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(1149);
/* harmony import */ var _http_service_options__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_http_service_options__WEBPACK_IMPORTED_MODULE_11__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_http_service_options__WEBPACK_IMPORTED_MODULE_11__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _http_service_options__WEBPACK_IMPORTED_MODULE_11__.handleizeFormatter; } });
/* harmony import */ var _module_element_type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(8014);
/* harmony import */ var _module_element_type__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_module_element_type__WEBPACK_IMPORTED_MODULE_12__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module_element_type__WEBPACK_IMPORTED_MODULE_12__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _module_element_type__WEBPACK_IMPORTED_MODULE_12__.handleizeFormatter; } });
/* harmony import */ var _module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(1135);
/* harmony import */ var _module__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_module__WEBPACK_IMPORTED_MODULE_13__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_module__WEBPACK_IMPORTED_MODULE_13__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _module__WEBPACK_IMPORTED_MODULE_13__.handleizeFormatter; } });
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(6723);
/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_observer__WEBPACK_IMPORTED_MODULE_14__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_observer__WEBPACK_IMPORTED_MODULE_14__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _observer__WEBPACK_IMPORTED_MODULE_14__.handleizeFormatter; } });
/* harmony import */ var _riba__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(2916);
/* harmony import */ var _riba__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_riba__WEBPACK_IMPORTED_MODULE_15__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_riba__WEBPACK_IMPORTED_MODULE_15__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _riba__WEBPACK_IMPORTED_MODULE_15__.handleizeFormatter; } });
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(5569);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_services__WEBPACK_IMPORTED_MODULE_16__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_services__WEBPACK_IMPORTED_MODULE_16__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _services__WEBPACK_IMPORTED_MODULE_16__.handleizeFormatter; } });
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(4490);
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_type__WEBPACK_IMPORTED_MODULE_17__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "Component")) __webpack_require__.d(__webpack_exports__, { "Component": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.Component; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "EventDispatcher")) __webpack_require__.d(__webpack_exports__, { "EventDispatcher": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.EventDispatcher; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "HttpService")) __webpack_require__.d(__webpack_exports__, { "HttpService": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.HttpService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "Riba")) __webpack_require__.d(__webpack_exports__, { "Riba": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.Riba; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "Utils")) __webpack_require__.d(__webpack_exports__, { "Utils": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.Utils; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "View")) __webpack_require__.d(__webpack_exports__, { "View": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.View; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "coreModule")) __webpack_require__.d(__webpack_exports__, { "coreModule": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.coreModule; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "getDataset")) __webpack_require__.d(__webpack_exports__, { "getDataset": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.getDataset; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_type__WEBPACK_IMPORTED_MODULE_17__, "handleizeFormatter")) __webpack_require__.d(__webpack_exports__, { "handleizeFormatter": function() { return _type__WEBPACK_IMPORTED_MODULE_17__.handleizeFormatter; } });




















/***/ }),

/***/ 8014:
/***/ (() => {



/***/ }),

/***/ 1135:
/***/ (() => {



/***/ }),

/***/ 6723:
/***/ (() => {



/***/ }),

/***/ 2916:
/***/ (() => {



/***/ }),

/***/ 5569:
/***/ (() => {



/***/ }),

/***/ 4490:
/***/ (() => {



/***/ }),

/***/ 3596:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Q": () => /* binding */ Observer
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8310);




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/* eslint-disable @typescript-eslint/explicit-module-boundary-types */

var Observer = /*#__PURE__*/function () {
  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Observer, null, [{
    key: "updateOptions",
    value: function updateOptions(options) {
      if (!options.adapters) {
        throw new Error("adapters are required!");
      }

      if (options.adapters) {
        Observer.adapters = _objectSpread(_objectSpread({}, Observer.adapters), options.adapters);
        Observer.interfaces = Object.keys(Observer.adapters);
      }

      Observer.rootInterface = options.rootInterface || Observer.interfaces[0];

      if (!Observer.rootInterface) {
        throw new Error("rootInterface is required!");
      }
    }
    /**
     * Tokenizes the provided keypath string into interface + path tokens for the
     * observer to work with.
     */

  }, {
    key: "tokenize",
    value: function tokenize(keypath, root) {
      var tokens = [];
      var current = {
        i: root,
        path: ""
      };
      var index;
      var chr;

      for (index = 0; index < keypath.length; index++) {
        chr = keypath.charAt(index);

        if (~Observer.interfaces.indexOf(chr)) {
          tokens.push(current);
          current = {
            i: chr,
            path: ""
          };
        } else {
          current.path += chr;
        }
      }

      tokens.push(current);
      return tokens;
    }
  }]);

  /**
   * Constructs a new keypath observer and kicks things off.
   * @param obj
   * @param keypath
   * @param callback
   */
  function Observer(obj, keypath, callback) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Observer);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "keypath", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "callback", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "objectPath", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "obj", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "target", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "key", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "tokens", void 0);

    this.keypath = keypath;
    this.callback = callback;
    this.objectPath = [];
    var parseResult = this.parse();
    this.key = parseResult.key;
    this.tokens = parseResult.tokens;
    this.obj = this.getRootObject(obj);
    this.target = this.realize();

    if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(this.target)) {
      this.set(true, this.key, this.target, this.callback);
    }
  }
  /**
   * Parses the keypath using the interfaces defined on the view. Sets variables
   * for the tokenized keypath as well as the end key.
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Observer, [{
    key: "parse",
    value: function parse() {
      var path;
      var root;

      if (!Observer.interfaces || !Observer.interfaces.length) {
        throw new Error("[Observer] Must define at least one adapter interface. interfaces: \"".concat(JSON.stringify(Observer.interfaces), "\" adapters: \"").concat(JSON.stringify(Observer.adapters), "\""));
      }

      if (~Observer.interfaces.indexOf(this.keypath[0])) {
        root = this.keypath[0];
        path = this.keypath.substr(1);
      } else {
        root = Observer.rootInterface;
        path = this.keypath;
      }

      this.tokens = Observer.tokenize(path, root);

      if (!this.tokens.length) {
        throw new Error("[Observer] No tokens");
      }

      this.key = this.tokens.pop();
      return {
        key: this.key,
        tokens: this.tokens
      };
    }
    /**
     * Realizes the full keypath, attaching observers for every key and correcting
     * old observers to any changed objects in the keypath.
     */

  }, {
    key: "realize",
    value: function realize() {
      var current = this.obj;
      var unreached = -1;
      var prev;
      var token;

      for (var index = 0; index < this.tokens.length; index++) {
        token = this.tokens[index];

        if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(current)) {
          if (typeof this.objectPath[index] !== "undefined") {
            prev = this.objectPath[index];

            if (current !== prev) {
              this.set(false, token, prev, this);
              this.set(true, token, current, this);
              this.objectPath[index] = current;
            }
          } else {
            this.set(true, token, current, this);
            this.objectPath[index] = current;
          }

          current = this.get(token, current);
        } else {
          if (unreached === -1) {
            unreached = index;
          }

          prev = this.objectPath[index];

          if (prev) {
            this.set(false, token, prev, this);
          }
        }
      }

      if (unreached !== -1) {
        this.objectPath.splice(unreached);
      }

      return current;
    }
    /**
     * Updates the keypath. This is called when any intermediary key is changed.
     */

  }, {
    key: "sync",
    value: function sync() {
      var oldValue;
      var newValue;
      var next = this.realize();

      if (next !== this.target) {
        if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(this.target)) {
          this.set(false, this.key, this.target, this.callback);
        }

        if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(next)) {
          this.set(true, this.key, next, this.callback);
        }

        oldValue = this.value();
        this.target = next;
        newValue = this.value();

        if (newValue !== oldValue || Array.isArray(newValue)) {
          this.callback.sync();
        }
      } else if (Array.isArray(next)) {
        this.callback.sync();
      }
    }
    /**
     * Reads the current end value of the observed keypath. Returns undefined if
     * the full keypath is unreachable.
     */

  }, {
    key: "value",
    value: function value() {
      if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(this.target)) {
        return this.get(this.key, this.target);
      }
    }
    /**
     * Sets the current end value of the observed keypath. Calling setValue when
     *  the full keypath is unreachable is a no-op.
     * @param value
     */

  }, {
    key: "setValue",
    value: function setValue(value) {
      if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(this.target)) {
        Observer.adapters[this.key.i].set(this.target, this.key.path, value);
      }
    }
    /**
     * Gets the provided key on an object.
     * @param key
     * @param obj
     */

  }, {
    key: "get",
    value: function get(key, obj) {
      return Observer.adapters[key.i].get(obj, key.path);
    }
    /**
     * Observes or unobserves a callback on the object using the provided key.
     * @param active
     * @param key
     * @param obj
     * @param callback
     */

  }, {
    key: "set",
    value: function set(active, key, obj, callback) {
      if (active) {
        Observer.adapters[key.i].observe(obj, key.path, callback);
      } else {
        Observer.adapters[key.i].unobserve(obj, key.path, callback);
      }
    }
    /**
     * Unobserves the entire keypath.
     */

  }, {
    key: "unobserve",
    value: function unobserve() {
      var obj;
      var token;

      for (var index = 0; index < this.tokens.length; index++) {
        token = this.tokens[index];
        obj = this.objectPath[index];

        if (obj) {
          this.set(false, token, obj, this);
        }
      }

      if ((0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(this.target)) {
        this.set(false, this.key, this.target, this.callback);
      }
    }
    /**
     * traverse the scope chain to find the scope which has the root property
     * if the property is not found in chain, returns the root scope
     * @param obj
     */

  }, {
    key: "getRootObject",
    value: function getRootObject(obj) {
      var rootProp;
      var current;

      if (!obj.$parent) {
        return obj;
      }

      if (this.tokens.length) {
        rootProp = this.tokens[0].path;
      } else {
        rootProp = this.key.path;
      }

      current = obj;

      while (current.$parent && current[rootProp] === undefined) {
        current = current.$parent;
      }

      return current;
    }
  }]);

  return Observer;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(Observer, "adapters", void 0);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(Observer, "interfaces", []);

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(Observer, "rootInterface", void 0);

/***/ }),

/***/ 3655:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "uk": () => /* binding */ PRIMITIVE,
/* harmony export */   "pm": () => /* binding */ KEYPATH,
/* harmony export */   "gZ": () => /* binding */ parseType,
/* harmony export */   "$M": () => /* binding */ parseTemplate,
/* harmony export */   "T3": () => /* binding */ parseNode,
/* harmony export */   "ER": () => /* binding */ parseDeclaration
/* harmony export */ });
/* unused harmony exports TEXT, BINDING */
/* harmony import */ var _ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8310);
/* harmony import */ var _view__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5246);


/**
 * Used also in parsers.parseType
 * TODO outsource
 */

var PRIMITIVE = 0;
var KEYPATH = 1;
var TEXT = 0;
var BINDING = 1;
var QUOTED_STR = /^'.*'$|^".*"$/; // regex to test if string is wrapped in " or '

var DECLARATION_SPLIT = /((?:'[^']*')*(?:(?:[^|']*(?:'[^']*')+[^|']*)+|[^|]+))|^$/g;
/**
 * Parser and tokenizer for getting the type and value from a string.
 * @param string
 */

function parseType(str) {
  var type = PRIMITIVE;
  var value = str;

  if (str === undefined) {
    return {
      type: type,
      value: undefined
    };
  }

  if (QUOTED_STR.test(str)) {
    value = str.slice(1, -1);
    var jsonString = (0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_0__/* .parseJsonString */ .uO)(value);
    value = jsonString ? jsonString : value;
  } else if (str === "true") {
    value = true;
  } else if (str === "false") {
    value = false;
  } else if (str === "null") {
    value = null;
  } else if (str === "undefined") {
    value = undefined;
  } else if (str === "") {
    value = undefined;
  } else if (!isNaN(Number(str))) {
    value = Number(str);
  } else if (value.startsWith("{") || value.startsWith("[")) {
    var _jsonString = (0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_0__/* .parseJsonString */ .uO)(value);

    value = _jsonString ? _jsonString : value;
  } else {
    type = KEYPATH;
  }

  return {
    type: type,
    value: value
  };
}

/**
 * Template parser and tokenizer for {{ mustache-style }} text content bindings.
 * Parses the template and returns a set of tokens, separating static portions
 * of text from binding declarations.
 * @param template
 * @param delimiters
 */
function parseTemplate(template, delimiters) {
  var tokens = null;
  var length = template.length;
  var index = 0;
  var lastIndex = 0;
  var open = delimiters[0];
  var close = delimiters[1];

  while (lastIndex < length) {
    index = template.indexOf(open, lastIndex);

    if (index < 0) {
      if (tokens) {
        tokens.push({
          type: TEXT,
          value: template.slice(lastIndex)
        });
      }

      break;
    } else {
      tokens = tokens || [];

      if (index > 0 && lastIndex < index) {
        tokens.push({
          type: TEXT,
          value: template.slice(lastIndex, index)
        });
      }

      lastIndex = index + open.length;
      index = template.indexOf(close, lastIndex);

      if (index < 0) {
        var substring = template.slice(lastIndex - open.length);
        var lastToken = tokens[tokens.length - 1];

        if (lastToken && lastToken.type === TEXT) {
          lastToken.value += substring;
        } else {
          tokens.push({
            type: TEXT,
            value: substring
          });
        }

        break;
      }

      var value = template.slice(lastIndex, index).trim();
      tokens.push({
        type: BINDING,
        value: value
      });
      lastIndex = index + close.length;
    }
  }

  return tokens;
}
function parseNode(view, node, templateDelimiters) {
  /** If true stop / block the parseNode  recursion */
  var blockRecursion = false;
  node = node;

  if (node.nodeType === Node.TEXT_NODE) {
    var tokens = null; // TODO why check data?

    if (node.data) {
      tokens = parseTemplate(node.data, templateDelimiters);
    }

    if (tokens && tokens.length) {
      for (var i = 0; i < tokens.length; i++) {
        var token = tokens[i];
        var text = document.createTextNode(token.value);

        if (node.parentNode) {
          node.parentNode.insertBefore(text, node);
        }

        if (token.type === BINDING) {
          // TODO fix any
          view.buildBinding(text, null, token.value, _view__WEBPACK_IMPORTED_MODULE_1__/* .View.mustacheTextBinder */ .G.mustacheTextBinder, null);
        }
      }

      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }
    }

    blockRecursion = true;
  } else if (node.nodeType === Node.ELEMENT_NODE) {
    // traverse binds attributes
    blockRecursion = view.traverse(node);
  }

  if (!blockRecursion) {
    if (node.childNodes && node.childNodes.length > 0) {
      for (var _i = 0; _i < node.childNodes.length; _i++) {
        var childNode = node.childNodes[_i];

        if (childNode) {
          parseNode(view, childNode, templateDelimiters);
        }
      }
    }
  }
}

/**
 * Parses an attribute argument to his keypath and splits the formatter names into a pipes array.
 * @param declaration e.g. `object.data | validate | json`
 *
 * if declaration is
 * ```
 * object.data | validate | json`
 * ``
 *
 * the result is
 * ```
 * {
 *    keypath: "object.data",
 *    pipes: ["validate", "json"]
 * }
 * ```
 */
function parseDeclaration(declaration) {
  var matches = declaration.match(DECLARATION_SPLIT);

  if (matches === null) {
    throw new Error("[View] No matches");
  }

  var pipes = matches.map(function (str) {
    return str.trim();
  });
  var keypath = pipes.shift() || undefined;
  return {
    keypath: keypath,
    pipes: pipes
  };
}

/***/ }),

/***/ 1542:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "D": () => /* binding */ Riba
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__(1140);
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ../../riba/packages/core/src/services/binder.service.ts
var binder_service = __webpack_require__(7930);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ../../riba/packages/core/src/services/component.service.ts
var component_service = __webpack_require__(5163);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ../../riba/packages/core/src/parsers.ts
var parsers = __webpack_require__(3655);
// EXTERNAL MODULE: ../../riba/packages/core/src/services/formatter.service.ts
var formatter_service = __webpack_require__(8682);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ../../riba/packages/core/src/binders/attribute.binder.ts
var attribute_binder = __webpack_require__(8858);
// EXTERNAL MODULE: ../../riba/packages/core/src/view.ts
var src_view = __webpack_require__(5246);
// EXTERNAL MODULE: ../../riba/packages/core/src/services/module-element.service.ts
var module_element_service = __webpack_require__(6607);
// EXTERNAL MODULE: ../../riba/packages/core/src/observer.ts
var observer = __webpack_require__(3596);
// CONCATENATED MODULE: ../../riba/packages/core/src/services/adapter.service.ts








function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var AdapterService = /*#__PURE__*/function (_ModuleElementService) {
  inherits_default()(AdapterService, _ModuleElementService);

  var _super = _createSuper(AdapterService);

  /**
   *
   */
  function AdapterService(adapters) {
    var _this;

    classCallCheck_default()(this, AdapterService);

    _this = _super.call(this, adapters);

    defineProperty_default()(assertThisInitialized_default()(_this), "type", "adapter");

    return _this;
  }
  /**
   * Regist a adapter with his name
   * @param adapter
   * @param name
   */


  createClass_default()(AdapterService, [{
    key: "regist",
    value: function regist(adapter, fallbackName) {
      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var name = forceFallback ? fallbackName || adapter.name : adapter.name || fallbackName;

      if (!name) {
        throw new Error("Adapter name not found!");
      }

      this.elements[name] = adapter;
      var options = {
        adapters: this.elements
      };
      observer/* Observer.updateOptions */.Q.updateOptions(options);
      return this.elements;
    }
  }]);

  return AdapterService;
}(module_element_service/* ModuleElementService */.G);
// CONCATENATED MODULE: ../../riba/packages/core/src/services/module.service.ts







var ModulesService = /*#__PURE__*/function () {
  /**
   *
   * @param binders;
   * @param components;
   * @param formatters;
   * @param adapters;
   */
  function ModulesService(binders, components, formatters, adapters) {
    classCallCheck_default()(this, ModulesService);

    defineProperty_default()(this, "binder", void 0);

    defineProperty_default()(this, "component", void 0);

    defineProperty_default()(this, "formatter", void 0);

    defineProperty_default()(this, "adapter", void 0);

    this.binder = new binder_service/* BindersService */.Z(binders);
    this.component = new component_service/* ComponentService */.m(components);
    this.formatter = new formatter_service/* FormatterService */.H(formatters);
    this.adapter = new AdapterService(adapters);
  }

  createClass_default()(ModulesService, [{
    key: "regist",
    value: function regist(module) {
      if (!module) {
        console.error(module);
        throw new Error("The Riba module is falsy!");
      }

      if (module.binders) {
        this.binder.regists(module.binders);
      }

      if (module.components) {
        this.component.regists(module.components);
      }

      if (module.formatters) {
        this.formatter.regists(module.formatters);
      }

      if (module.adapters) {
        this.adapter.regists(module.adapters);
      }
    }
  }]);

  return ModulesService;
}();
// CONCATENATED MODULE: ../../riba/packages/core/src/riba.ts





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






var Riba = /*#__PURE__*/function () {
  createClass_default()(Riba, [{
    key: "prefix",
    set: function set(value) {
      this._prefix = value;
      this._fullPrefix = value + "-";
    },
    get: function get() {
      return this._prefix;
    }
  }, {
    key: "fullPrefix",
    get: function get() {
      return this._fullPrefix;
    }
    /**
     * Creates an singleton instance of Riba.
     */

  }], [{
    key: "handler",

    /**
     * Sets the attribute on the element. If no binder above is matched it will fall
     * back to using this binder.
     */

    /**
     * Default event handler, calles the function defined in his binder
     * @see Binding.eventHandler
     * @param el The element the event was triggered from
     */
    value: function handler(context, ev, binding, el) {
      if (!this || !this.call) {
        var error = new Error("[rv-".concat(binding.type, "=\"").concat(binding.keypath, "\"] Event handler \"").concat(binding.keypath, "\" not found!\""));
        console.error(error, binding, el, binding.view.models);
        throw error;
      }

      this.call(context, ev, binding.view.models, el);
    }
    /** singleton instance */

  }]);

  function Riba() {
    classCallCheck_default()(this, Riba);

    defineProperty_default()(this, "module", void 0);

    defineProperty_default()(this, "binders", {});

    defineProperty_default()(this, "components", {});

    defineProperty_default()(this, "formatters", {});

    defineProperty_default()(this, "adapters", {});

    defineProperty_default()(this, "parseTemplate", parsers/* parseTemplate */.$M);

    defineProperty_default()(this, "parseType", parsers/* parseType */.gZ);

    defineProperty_default()(this, "templateDelimiters", ["{", "}"]);

    defineProperty_default()(this, "rootInterface", ".");

    defineProperty_default()(this, "preloadData", true);

    defineProperty_default()(this, "removeBinderAttributes", true);

    defineProperty_default()(this, "blockNodeNames", ["SCRIPT", "STYLE", "TEMPLATE", "CODE"]);

    defineProperty_default()(this, "_prefix", "rv");

    defineProperty_default()(this, "_fullPrefix", "rv-");

    defineProperty_default()(this, "forceComponentFallback", false);

    this.module = new ModulesService(this.binders, this.components, this.formatters, this.adapters);

    if (Riba.instance) {
      return Riba.instance;
    }

    Riba.instance = this;
  }
  /**
   * Merges an object literal into the corresponding global options.
   * @param options
   */


  createClass_default()(Riba, [{
    key: "configure",
    value: function configure(options) {
      if (!options) {
        return;
      }

      for (var _i = 0, _Object$entries = Object.entries(options); _i < _Object$entries.length; _i++) {
        var _Object$entries$_i = slicedToArray_default()(_Object$entries[_i], 2),
            option = _Object$entries$_i[0],
            value = _Object$entries$_i[1];

        switch (option) {
          case "binders":
            this.binders = _objectSpread(_objectSpread({}, this.binders), value);
            break;

          case "formatters":
            this.formatters = _objectSpread(_objectSpread({}, this.formatters), value);
            break;

          case "components":
            this.components = _objectSpread(_objectSpread({}, this.components), value);
            break;

          case "adapters":
            this.adapters = _objectSpread(_objectSpread({}, this.adapters), value);
            break;

          case "prefix":
            this.prefix = value;
            break;

          case "parseTemplate":
            this.parseTemplate = value;
            break;

          case "parseType":
            this.parseType = value;
            break;

          case "templateDelimiters":
            this.templateDelimiters = value;
            break;

          case "rootInterface":
            this.rootInterface = value;
            break;

          case "preloadData":
            this.preloadData = value;
            break;

          case "blockNodeNames":
            this.blockNodeNames = value;
            break;

          case "forceComponentFallback":
            this.forceComponentFallback = value;
            break;

          default:
            console.warn("Option not supported", option, value);
            break;
        }
      }
    }
  }, {
    key: "getViewOptions",
    value: function getViewOptions(options) {
      var viewOptions = {
        // EXTENSIONS
        adapters: {},
        binders: {},
        components: {},
        formatters: {},
        // other
        attributeBinders: {},
        // sightglass
        rootInterface: {},
        forceComponentFallback: false
      };

      if (options) {
        viewOptions.binders = _objectSpread(_objectSpread({}, viewOptions.binders), options.binders);
        viewOptions.formatters = _objectSpread(_objectSpread({}, viewOptions.formatters), options.formatters);
        viewOptions.components = _objectSpread(_objectSpread({}, viewOptions.components), options.components);
        viewOptions.adapters = _objectSpread(_objectSpread({}, viewOptions.adapters), options.adapters);
      }

      viewOptions.prefix = options && options.prefix || this.prefix;
      viewOptions.fullPrefix = viewOptions.prefix && viewOptions.prefix + "-" || this.fullPrefix;
      viewOptions.templateDelimiters = options && options.templateDelimiters || this.templateDelimiters;
      viewOptions.rootInterface = options && options.rootInterface || this.rootInterface;
      viewOptions.removeBinderAttributes = options && typeof options.removeBinderAttributes === "boolean" ? options.removeBinderAttributes : this.removeBinderAttributes;
      viewOptions.blockNodeNames = options && options.blockNodeNames || this.blockNodeNames;
      viewOptions.preloadData = options && typeof options.preloadData === "boolean" ? options.preloadData : this.preloadData;
      viewOptions.forceComponentFallback = options && typeof options.forceComponentFallback === "boolean" ? options.forceComponentFallback : this.forceComponentFallback;
      viewOptions.handler = options && options.handler || Riba.handler; // WORKAROUND for FakeHTMLElement

      if (viewOptions.forceComponentFallback) {
        window.forceComponentFallback = viewOptions.forceComponentFallback;
      } // merge extensions


      viewOptions.binders = _objectSpread(_objectSpread({}, this.binders), viewOptions.binders);
      viewOptions.formatters = _objectSpread(_objectSpread({}, this.formatters), viewOptions.formatters);
      viewOptions.components = _objectSpread(_objectSpread({}, this.components), viewOptions.components);
      viewOptions.adapters = _objectSpread(_objectSpread({}, this.adapters), viewOptions.adapters); // get all attributeBinders from available binders

      if (viewOptions.binders) {
        viewOptions.attributeBinders = Object.keys(viewOptions.binders).filter(function (key) {
          return key.indexOf("*") >= 1;
        } // Should contain, but not start with, *
        );
      }

      return viewOptions;
    }
    /**
     * Binds some data to a template / element. Returns a riba.View instance.
     */

  }, {
    key: "bind",
    value: function bind(el, models, options) {
      var viewOptions = this.getViewOptions(options);
      models = models || Object.create(null);
      observer/* Observer.updateOptions */.Q.updateOptions(viewOptions);
      var view = new src_view/* View */.G(el, models, viewOptions);
      view.bind();
      return view;
    }
  }]);

  return Riba;
}();

defineProperty_default()(Riba, "fallbackBinder", attribute_binder/* attributeBinder */.A);

defineProperty_default()(Riba, "instance", void 0);

window.Riba = Riba;

/***/ }),

/***/ 7930:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => /* binding */ BindersService
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _module_element_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6607);








function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var BindersService = /*#__PURE__*/function (_ModuleElementService) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(BindersService, _ModuleElementService);

  var _super = _createSuper(BindersService);

  /**
   *
   * @param binders;
   */
  function BindersService(binders) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BindersService);

    _this = _super.call(this, binders);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), "type", "binder");

    return _this;
  }
  /**
   * Regist a binder
   * @param binder
   * @param name  Overwrites the name to access the binder over
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BindersService, [{
    key: "regist",
    value: function regist(binder, fallbackName) {
      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (!binder || typeof binder.routine !== "function") {
        console.warn(new Error("Can not regist binder!"), binder);
        return this.elements;
      }

      var name = forceFallback ? fallbackName || binder.name : binder.name || fallbackName;

      if (!name) {
        console.warn(new Error("Binder name not found!"), binder);
        return this.elements;
      }

      this.elements[name] = binder;
      return this.elements;
    }
  }]);

  return BindersService;
}(_module_element_service__WEBPACK_IMPORTED_MODULE_7__/* .ModuleElementService */ .G);

/***/ }),

/***/ 5163:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "m": () => /* binding */ ComponentService
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _module_element_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6607);








function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var ComponentService = /*#__PURE__*/function (_ModuleElementService) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(ComponentService, _ModuleElementService);

  var _super = _createSuper(ComponentService);

  /**
   *
   * @param components
   */
  function ComponentService(components) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ComponentService);

    _this = _super.call(this, components);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), "type", "components");

    return _this;
  }
  /**
   * Regist a component with his name
   * @param component
   * @param name
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ComponentService, [{
    key: "regist",
    value: function regist(component, fallbackName) {
      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var name = forceFallback ? fallbackName || component.tagName : component.tagName || fallbackName;

      if (!name) {
        console.warn(new Error("Component name not found!"), component);
        return this.elements;
      }

      this.elements[name] = component;
      return this.elements;
    }
  }]);

  return ComponentService;
}(_module_element_service__WEBPACK_IMPORTED_MODULE_7__/* .ModuleElementService */ .G);

/***/ }),

/***/ 8682:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "H": () => /* binding */ FormatterService
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3317);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6648);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(5415);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(8097);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _module_element_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6607);








function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var FormatterService = /*#__PURE__*/function (_ModuleElementService) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(FormatterService, _ModuleElementService);

  var _super = _createSuper(FormatterService);

  /**
   *
   */
  function FormatterService(formatters) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, FormatterService);

    _this = _super.call(this, formatters);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_6___default()(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), "type", "formatter");

    return _this;
  }
  /**
   * Regist a formatter with his name
   * @param formatter
   * @param name
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(FormatterService, [{
    key: "regist",
    value: function regist(formatter, fallbackName) {
      var forceFallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var name = forceFallback ? fallbackName || formatter.name : formatter.name || fallbackName;

      if (!name) {
        throw new Error("Formatter name not found!");
      }

      this.elements[name] = formatter;
      return this.elements;
    }
  }]);

  return FormatterService;
}(_module_element_service__WEBPACK_IMPORTED_MODULE_7__/* .ModuleElementService */ .G);

/***/ }),

/***/ 504:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "BindersService": () => /* reexport */ binder_service/* BindersService */.Z,
  "ComponentService": () => /* reexport */ component_service/* ComponentService */.m,
  "EventDispatcher": () => /* reexport */ EventDispatcher,
  "FormatterService": () => /* reexport */ formatter_service/* FormatterService */.H,
  "HttpService": () => /* reexport */ HttpService,
  "Utils": () => /* reexport */ Utils,
  "getDataset": () => /* reexport */ getDataset,
  "parseAttribute": () => /* reexport */ parseAttribute
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// EXTERNAL MODULE: ../../riba/packages/core/src/services/binder.service.ts
var binder_service = __webpack_require__(7930);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ../../riba/packages/core/src/services/component.service.ts
var component_service = __webpack_require__(5163);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ../../riba/packages/core/src/services/event-dispatcher.service.ts




/**
 * Little Dispatcher inspired by MicroEvent.js
 *
 * @type {object}
 */
var EventDispatcher = /*#__PURE__*/function () {
  createClass_default()(EventDispatcher, null, [{
    key: "getInstance",
    value: function getInstance(namespace) {
      var result = EventDispatcher.instances[namespace];

      if (!result) {
        throw new Error("No EventDispatcher instance with namespace ".concat(namespace, " found!"));
      }

      return result;
    }
    /**
     * Object that keeps all the events
     *
     * @readOnly
     * @type {object}
     */

  }]);

  /**
   * Creates an singleton instance of Dispatcher.
   */
  function EventDispatcher() {
    var namespace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "main";

    classCallCheck_default()(this, EventDispatcher);

    defineProperty_default()(this, "events", {});

    defineProperty_default()(this, "namespace", void 0);

    this.namespace = namespace;

    if (EventDispatcher.instances[this.namespace]) {
      return EventDispatcher.instances[this.namespace];
    }

    EventDispatcher.instances[this.namespace] = this;
    return EventDispatcher.instances[this.namespace];
  }
  /**
   * Bind a callback to an event
   *
   * @param eventName
   * @param function
   */


  createClass_default()(EventDispatcher, [{
    key: "on",
    value: function on(e, f) {
      this.events[e] = this.events[e] || [];
      this.events[e].push(f);
    }
    /**
     * Unbind event
     *
     * @param eventName
     * @param function
     */

  }, {
    key: "off",
    value: function off(e, f) {
      if (e in this.events === false) {
        return;
      }

      var idx = this.events[e].indexOf(f);

      if (idx !== -1) {
        this.events[e].splice(idx, 1);
      }
    }
    /**
     * Fire the event running all the event associated to it
     *
     * @param eventName
     * @param args
     */

  }, {
    key: "trigger",
    value: function trigger(e) {
      // e, ...args
      if (e in this.events === false) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      for (var i = 0; i < this.events[e].length; i++) {
        this.events[e][i].apply(this, args);
      }
    }
  }]);

  return EventDispatcher;
}();

defineProperty_default()(EventDispatcher, "instances", {});


// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/core/src/services/formatter.service.ts
var formatter_service = __webpack_require__(8682);
// CONCATENATED MODULE: ../../riba/packages/core/src/services/http.service.ts






function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var HttpService = /*#__PURE__*/function () {
  function HttpService() {
    classCallCheck_default()(this, HttpService);
  }

  createClass_default()(HttpService, null, [{
    key: "setRequestHeaderEachRequest",

    /**
     * Set header for each xhr and jquery request
     * @param name Header name
     * @param value Hander value
     */
    value: function setRequestHeaderEachRequest(name, value) {
      this._requestHeadersEachRequest.push({
        name: name,
        value: value
      }); // console.debug(
      //   "[HttpService] setRequestHeaderEachRequest",
      //   name,
      //   value,
      //   this._requestHeadersEachRequest
      // );

    }
    /**
     * Load JSON-encoded data from the server using a GET HTTP request.
     * @param url A string containing the URL to which the request is sent.
     * @param data A plain object or string that is sent to the server with the request.
     * @see https://api.jquery.com/jquery.getjson/
     */

  }, {
    key: "getJSON",
    value: function () {
      var _getJSON = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(url, data) {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.fetch(url, "GET", data, "json"));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getJSON(_x2, _x3) {
        return _getJSON.apply(this, arguments);
      }

      return getJSON;
    }()
    /**
     * Load data from the server using a HTTP POST request.
     * @param url A string containing the URL to which the request is sent.
     * @param data A plain object or string that is sent to the server with the request.
     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).
     * @see https://api.jquery.com/jquery.post/
     */

  }, {
    key: "post",
    value: function () {
      var _post = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(url, data, dataType) {
        var headers,
            options,
            _args2 = arguments;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                headers = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};
                options = _args2.length > 4 && _args2[4] !== undefined ? _args2[4] : {};
                return _context2.abrupt("return", this.fetch(url, "POST", data, dataType, headers, options));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function post(_x4, _x5, _x6) {
        return _post.apply(this, arguments);
      }

      return post;
    }()
  }, {
    key: "delete",
    value: function () {
      var _delete2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(url, data, dataType) {
        var headers,
            options,
            _args3 = arguments;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                headers = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};
                options = _args3.length > 4 && _args3[4] !== undefined ? _args3[4] : {};
                return _context3.abrupt("return", this.fetch(url, "DELETE", data, dataType, headers, options));

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function _delete(_x7, _x8, _x9) {
        return _delete2.apply(this, arguments);
      }

      return _delete;
    }()
  }, {
    key: "put",
    value: function () {
      var _put = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4(url, data, dataType) {
        var headers,
            options,
            _args4 = arguments;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                headers = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};
                options = _args4.length > 4 && _args4[4] !== undefined ? _args4[4] : {};
                return _context4.abrupt("return", this.fetch(url, "PUT", data, dataType, headers, options));

              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function put(_x10, _x11, _x12) {
        return _put.apply(this, arguments);
      }

      return put;
    }()
    /**
     * Load data from the server using a HTTP GET request.
     * @param url A string containing the URL to which the request is sent.
     * @param data A plain object or string that is sent to the server with the request.
     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).
     * @see https://api.jquery.com/jquery.get/
     */

  }, {
    key: "get",
    value: function () {
      var _get = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5(url, data, dataType) {
        var headers,
            options,
            _args5 = arguments;
        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                headers = _args5.length > 3 && _args5[3] !== undefined ? _args5[3] : {};
                options = _args5.length > 4 && _args5[4] !== undefined ? _args5[4] : {};
                return _context5.abrupt("return", this.fetch(url, "GET", data, dataType, headers, options));

              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function get(_x13, _x14, _x15) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     *
     * @param dataType The type of data expected from the server. Default: Intelligent Guess (xml, json, script, text, html).
     */

  }, {
    key: "parseDataType",
    value: function parseDataType(dataType) {
      var headers = {};
      var contentType = "application/x-www-form-urlencoded";
      var accept = "*/*";

      switch (dataType) {
        case "script":
          contentType = "application/javascript";
          break;

        case "json":
          contentType = "application/json";
          accept = "application/json, text/javascript";
          break;

        case "xml":
          contentType = "application/xml";
          accept = "application/xml, text/xml";
          break;

        case "text":
          contentType = "text/plain";
          accept = "text/plain";
          break;

        case "html":
          contentType = "text/html";
          accept = "text/html";
          break;

        case "form":
          contentType = "application/x-www-form-urlencoded";
          break;

        /*case "multi-form":
          contentType = "multipart/form-data";
          break;*/
      }

      if (contentType) {
        headers["Content-Type"] = contentType; // tslint:disable-next-line:no-string-literal

        headers["Accept"] = accept;
      }

      return headers;
    }
    /**
     * Start an XMLHttpRequest() and return a Promise
     *
     * @param url
     * @param xhrTimeout Time in millisecond after the xhr request goes in timeout
     */

  }, {
    key: "xhr",
    value: function xhr(url) {
      var _this = this;

      var xhrTimeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;
      var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "GET";
      var dataType = arguments.length > 3 ? arguments[3] : undefined;
      var data = arguments.length > 4 ? arguments[4] : undefined;
      return new Promise(function (resolve, reject) {
        var req = new XMLHttpRequest();

        req.onreadystatechange = function () {
          if (req.readyState === 4) {
            if (req.status === 200) {
              if (typeof dataType === "string" && (dataType === "json" || dataType.indexOf("json") !== -1)) {
                try {
                  var responseText = JSON.parse(req.responseText);
                  resolve(responseText);
                } catch (error) {
                  // If json can't be parsed
                  return resolve(req.responseText);
                }
              }

              return resolve(req.responseText);
            } else {
              return reject(req);
            }
          }
        };

        req.ontimeout = function () {
          return reject(new Error("xhr: Timeout exceeded"));
        };

        req.open(method, url);
        req.timeout = xhrTimeout; // headers

        var _iterator = _createForOfIteratorHelper(_this._requestHeadersEachRequest),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var header = _step.value;
            req.setRequestHeader(header.name, header.value);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }

        if (dataType) {
          var dataTypeHeader = _this.parseDataType(dataType);

          if (dataTypeHeader["Content-Type"]) {
            req.setRequestHeader("Content-Type", dataTypeHeader["Content-Type"]);
          }

          if (dataTypeHeader.Accept) {
            req.setRequestHeader("Accept", dataTypeHeader.Accept);
          }
        }

        req.send(method !== "GET" && data ? JSON.stringify(data) : data);
      });
    }
  }, {
    key: "fetch",
    value: function (_fetch) {
      function fetch(_x) {
        return _fetch.apply(this, arguments);
      }

      fetch.toString = function () {
        return _fetch.toString();
      };

      return fetch;
    }( /*#__PURE__*/function () {
      var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6(url) {
        var method,
            data,
            dataType,
            headers,
            options,
            body,
            _iterator2,
            _step2,
            header,
            cache,
            _args6 = arguments;

        return regenerator_default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                method = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : "GET";
                data = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : {};
                dataType = _args6.length > 3 ? _args6[3] : undefined;
                headers = _args6.length > 4 && _args6[4] !== undefined ? _args6[4] : {};
                options = _args6.length > 5 && _args6[5] !== undefined ? _args6[5] : {};

                if (!fetch) {
                  _context6.next = 13;
                  break;
                }

                // headers
                _iterator2 = _createForOfIteratorHelper(this._requestHeadersEachRequest);

                try {
                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                    header = _step2.value;
                    headers[header.name] = header.value;
                  }
                } catch (err) {
                  _iterator2.e(err);
                } finally {
                  _iterator2.f();
                }

                if (dataType) {
                  headers = (0,type/* concat */.zo)(false, headers, this.parseDataType(dataType));
                }

                if (!options.crossDomain && !headers["X-Requested-With"]) {
                  headers["X-Requested-With"] = "XMLHttpRequest";
                }

                cache = options.cache ? options.cache : "default";

                if (method === "GET" && data) {
                  url = url + "?" + new URLSearchParams(data);
                } else if (data) {
                  if (dataType === "form") {
                    body = new URLSearchParams(data);
                  } else {
                    body = JSON.stringify(data);
                  }
                } // console.debug("[HttpService] url", url);
                // console.debug("[HttpService] method", method);
                // console.debug("[HttpService] body", body);
                // console.debug(
                //   "[HttpService] headers",
                //   headers,
                //   this._requestHeadersEachRequest
                // );


                return _context6.abrupt("return", fetch(url, {
                  credentials: "same-origin",
                  cache: cache,
                  method: method,
                  body: body,
                  headers: headers
                }).then(function (response) {
                  if (response.status >= 400) {
                    throw response;
                  }

                  if (typeof dataType === "string" && (dataType === "json" || dataType.indexOf("json") !== -1) && typeof response.json === "function") {
                    try {
                      return response.json();
                    } catch (error) {
                      return response.text();
                    }
                  }

                  return response.text();
                })["catch"](function (error) {
                  // console.error(error);
                  throw error;
                }));

              case 13:
                return _context6.abrupt("return", this.xhr(url, undefined, method, dataType, data));

              case 14:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      return function (_x16) {
        return _ref.apply(this, arguments);
      };
    }())
    /**
     * Header name value pair to send on each request
     */

  }]);

  return HttpService;
}();

defineProperty_default()(HttpService, "_requestHeadersEachRequest", []);
// CONCATENATED MODULE: ../../riba/packages/core/src/services/utils.ts



/**
 * Just a class with some helpful functions
 *
 * @export
 * @class Utils
 */

var Utils = /*#__PURE__*/function () {
  function Utils() {
    classCallCheck_default()(this, Utils);
  }

  createClass_default()(Utils, null, [{
    key: "domIsReady",

    /**
     * Cross-browser Document Ready check
     * @see https://www.competa.com/blog/cross-browser-document-ready-with-vanilla-javascript/
     * @param callback
     */
    value: function domIsReady(callback) {
      console.warn("Utils.domIsReady is deprecated, use import { ready } from '@ribajs/utils/src/dom' instead");
      return (0,dom/* ready */.Cd)(callback);
    }
  }]);

  return Utils;
}();
// CONCATENATED MODULE: ../../riba/packages/core/src/services/dom.ts

/**
 * TODO move Dom utils here
 */

var parseAttribute = function parseAttribute(attr) {
  var value = attr;

  if (attr === "true") {
    value = true;
  } else if (attr === "false") {
    value = false;
  } else if (attr === "null") {
    value = null;
  } else if (attr === "undefined") {
    value = undefined;
  } else if (attr === "") {
    value = undefined;
  } else if (!isNaN(Number(attr))) {
    value = Number(attr); // If number is too large store the value as string

    if (value >= Number.MAX_SAFE_INTEGER) {
      value = attr;
    }
  } else {
    var jsonString = (0,type/* parseJsonString */.uO)(value);
    value = jsonString ? jsonString : value;
  }

  return value;
};
var getDataset = function getDataset(element) {
  var dataset = (0,type/* clone */.d9)(false, element.dataset);

  for (var attr in dataset) {
    if (dataset[attr]) {
      dataset[attr] = parseAttribute(dataset[attr]);
    }
  }

  return dataset;
};
// CONCATENATED MODULE: ../../riba/packages/core/src/services/index.ts








/***/ }),

/***/ 6607:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "G": () => /* binding */ ModuleElementService
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8310);




var ModuleElementService = /*#__PURE__*/function () {
  /**
   *
   * @param elements;
   */
  function ModuleElementService(elements) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ModuleElementService);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "elements", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "type", void 0);

    this.elements = elements;
  }
  /**
   * Regist a element
   * @param element
   * @param name  Overwrites the name to access the element over
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ModuleElementService, [{
    key: "regists",

    /**
     * Regist a set / array of elements
     * @param elements
     */
    value: function regists(elements) {
      if (!(0,_ribajs_utils_src_type__WEBPACK_IMPORTED_MODULE_3__/* .isObject */ .Kn)(elements)) {
        throw new Error("Elements to register must be an object of elements");
      }

      for (var _key in elements) {
        if (elements[_key] && _key !== "__esModule") {
          var _element = elements[_key];
          this.regist(_element, _key);
        }
      }

      return this.elements;
    }
  }]);

  return ModuleElementService;
}();

/***/ }),

/***/ 851:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _polyfills_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3197);
/* harmony import */ var _polyfills_module__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_module__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ 3197:
/***/ (() => {

// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill#Polyfill
(function () {
  if (typeof window.CustomEvent === "function") {
    return false;
  }

  function CustomEvent(event, params) {
    params = params || {
      bubbles: false,
      cancelable: false,
      detail: undefined
    };
    var evt = document.createEvent("CustomEvent");
    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
    return evt;
  }

  CustomEvent.prototype = window.Event.prototype;
  window.CustomEvent = CustomEvent;
})();

/***/ }),

/***/ 5246:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "G": () => /* binding */ View
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8656);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1571);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5011);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _riba__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1542);
/* harmony import */ var _binding__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(2445);
/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(3655);




function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }





/**
 * A collection of bindings built from a set of parent nodes.
 */
var View = /*#__PURE__*/function () {
  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(View, null, [{
    key: "create",

    /**
     * Binder for mustache style `{model.property}` text Binders
     */

    /**
     * Helper function to create a new view inside of a binding
     * @param bindin
     * @param models
     * @param anchorEl
     */
    value: function create(binding, models, anchorEl) {
      var _binding$marker;

      var template = binding.el.cloneNode(true);
      var view = new View(template, models, binding.view.options);
      view.bind();

      if (!(binding === null || binding === void 0 ? void 0 : (_binding$marker = binding.marker) === null || _binding$marker === void 0 ? void 0 : _binding$marker.parentNode)) {
        console.warn("[View]: No parent node for binding!");
      } else {
        binding.marker.parentNode.insertBefore(template, anchorEl);
      }

      return view;
    }
  }]);

  // public componentView: View | null = null;

  /**
   * The DOM elements and the model objects for binding are passed into the
   * constructor along with any local options that should be used throughout the
   * context of the view and it's bindings.
   * @param els
   * @param models
   * @param options
   */
  function View(els, models, options) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, View);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "els", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "models", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "options", void 0);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "bindings", []);

    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(this, "webComponents", []);

    if (Array.isArray(els)) {
      this.els = els;
    } else {
      this.els = [els];
    }

    this.models = models;
    this.options = options;
    this.build();
  }
  /**
   * Regist all components
   * This can sometimes be useful so that the browser automatically recognizes whether a component is inserted into the dom.
   * However, the components are already registered when they are found by riba in the DOM.
   *
   * Please note, this method does not support the browser fallback for browsers that cannot use custom elements.
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(View, [{
    key: "registComponents",
    value: function registComponents() {
      for (var nodeName in this.options.components) {
        if (this.options.components[nodeName]) {
          // Not already registred?
          if (!customElements.get(nodeName)) {
            var COMPONENT = this.options.components[nodeName];
            this.registComponent(COMPONENT, nodeName);
          }
        }
      }
    }
    /**
     * Binds all of the current bindings for this view.
     */

  }, {
    key: "bind",
    value: function bind() {
      var _this = this;

      this.bindings.forEach(function (binding) {
        binding.bind();
      });
      this.webComponents.forEach(function (webcomponent) {
        webcomponent._fallback = !!_this.options.forceComponentFallback;
        webcomponent.connectedFallbackCallback();
      });
    }
    /**
     * Unbinds all of the current bindings for this view.
     */

  }, {
    key: "unbind",
    value: function unbind() {
      var _this2 = this;

      if (Array.isArray(this.bindings)) {
        this.bindings.forEach(function (binding) {
          binding.unbind();

          if (binding.el.setAttribute && _this2.options.removeBinderAttributes) {// TODO reset attribute ?
            // binding.el.setAttribute(attribute.name);
          }
        });
        this.webComponents.forEach(function (webcomponent) {
          webcomponent.disconnectedFallbackCallback();
        });
      } // TODO fallback to unbind web components

    }
    /**
     * Syncs up the view with the model by running the routines on all bindings.
     */

  }, {
    key: "sync",
    value: function sync() {
      this.bindings.forEach(function (binding) {
        if (binding.sync) {
          binding.sync();
        }
      });
    }
    /**
     * Publishes the input values from the view back to the model (reverse sync).
     */

  }, {
    key: "publish",
    value: function publish() {
      this.bindings.forEach(function (binding) {
        if (binding.binder && binding.binder.publishes && binding.publish) {
          binding.publish();
        }
      });
    }
    /**
     * Updates the view's models along with any affected bindings.
     * @param models
     */

  }, {
    key: "update",
    value: function update() {
      var _this3 = this;

      var models = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      Object.keys(models).forEach(function (key) {
        _this3.models[key] = models[key];
      });

      var _iterator = _createForOfIteratorHelper(this.bindings),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var binding = _step.value;
          // if ((binding as Binding).update) {
          binding.update(models); // }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Parses the DOM tree and builds `Binding` instances for every matched
     * binding declaration.
     */

  }, {
    key: "build",
    value: function build() {
      this.bindings = []; // this.bindings || [];

      if (!this.options.templateDelimiters) {
        throw new Error("templateDelimiters required");
      }

      var elements = this.els;

      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];

        if (element) {
          (0,_parsers__WEBPACK_IMPORTED_MODULE_5__/* .parseNode */ .T3)(this, element, this.options.templateDelimiters);
        }
      }

      this.bindings.sort(View.bindingComparator);
    }
  }, {
    key: "traverse",
    value: function traverse(node) {
      var bindingPrefix;

      if (this.options.fullPrefix) {
        bindingPrefix = this.options.fullPrefix;
      } else {
        // TODO FIXME
        bindingPrefix = this.options.prefix + "-";
      }

      if (!bindingPrefix) {
        throw new Error("prefix is required");
      }
      /** If true stop / block the parseNode recursion */


      var block = this.options.blockNodeNames.indexOf(node.nodeName) !== -1;
      var attributes = node.attributes;
      var bindInfos = [];
      var attributeBinders = this.options.attributeBinders; // bind attribute binders if available

      if (attributes && this.options.binders) {
        for (var i = 0, len = attributes.length; i < len; i++) {
          var nodeName = null;
          var binder = null;
          var identifier = null;
          var attribute = attributes[i]; // if attribute starts with the binding prefix. E.g. rv

          if (attribute.name.indexOf(bindingPrefix) === 0) {
            nodeName = attribute.name.slice(bindingPrefix.length); // if binder is not a attributeBinder binder should be setted

            if (this.options.binders[nodeName]) {
              binder = this.options.binders[nodeName];
            }

            if (binder === null) {
              // seems to be a star binder (because binder was not set)
              // Check if any attributeBinder matchs
              for (var k = 0; k < attributeBinders.length; k++) {
                identifier = attributeBinders[k];
                var regexp = new RegExp("^".concat(identifier.replace(/\*/g, ".+"), "$"));

                if (regexp.test(nodeName)) {
                  binder = this.options.binders[identifier];
                  break;
                }
              }
            }

            if (binder === null) {
              if (this.options.binders["*"]) {
                binder = this.options.binders["*"];
                identifier = "*";
              } else {
                binder = _riba__WEBPACK_IMPORTED_MODULE_3__/* .Riba.fallbackBinder */ .D.fallbackBinder;
              }
            } // if block is set, do not bind its childs (this means the binder bound it by itself)
            // and build binding directly (do not push it to bindInfos array)


            if (binder.block) {
              this.buildBinding(node, nodeName, attribute.value, binder, identifier);

              if (node.removeAttribute && this.options.removeBinderAttributes) {
                node.removeAttribute(attribute.name);
              }

              return true;
            }

            bindInfos.push({
              attr: attribute,
              binder: binder,
              nodeName: nodeName,
              identifier: identifier
            });
          }
        }

        for (var _i = 0; _i < bindInfos.length; _i++) {
          var bindInfo = bindInfos[_i];
          this.buildBinding(node, bindInfo.nodeName, bindInfo.attr.value, bindInfo.binder, bindInfo.identifier);

          if (node.removeAttribute && this.options.removeBinderAttributes) {
            node.removeAttribute(bindInfo.attr.name);
          }
        }
      } // bind components


      if (!block && !node._bound && this.options.components) {
        var _nodeName = node.nodeName.toLowerCase();

        var COMPONENT = this.options.components[_nodeName];

        if (COMPONENT) {
          this.registComponentWithFallback(node, COMPONENT, _nodeName);
          block = true;
        }
      }

      return block;
    }
  }, {
    key: "buildBinding",
    value: function buildBinding(node, type, declaration, binder, identifier) {
      var parsedDeclaration = (0,_parsers__WEBPACK_IMPORTED_MODULE_5__/* .parseDeclaration */ .ER)(declaration);
      var keypath = parsedDeclaration.keypath;
      var pipes = parsedDeclaration.pipes;
      this.bindings.push(new _binding__WEBPACK_IMPORTED_MODULE_4__/* .Binding */ .K(this, node, type, keypath, binder, pipes, identifier));
    }
  }, {
    key: "registComponentWithFallback",
    value: function registComponentWithFallback(node, COMPONENT, nodeName) {
      nodeName = nodeName || COMPONENT.tagName; // Fallback

      if (!window.customElements || this.options.forceComponentFallback) {
        this.registComponentFallback(node, COMPONENT, nodeName);
      } else {
        // if node.constructor is not HTMLElement and not HTMLUnknownElement, it was registed
        // @see https://stackoverflow.com/questions/27334365/how-to-get-list-of-registered-custom-elements
        if (customElements.get(nodeName) || node.constructor !== HTMLElement && node.constructor !== HTMLUnknownElement) {// console.warn(`Web component already defined`, node.constructor);
        } else {
          try {
            this.registComponent(COMPONENT, nodeName);
          } catch (error) {
            console.error(error);
            this.registComponentFallback(node, COMPONENT, nodeName);
          }
        }
      }
    }
    /**
     * Regist a custom element using the fallback logic for browsers that cannot native use custom elements.
     * @param node
     * @param COMPONENT
     * @param nodeName
     */

  }, {
    key: "registComponentFallback",
    value: function registComponentFallback(node, COMPONENT, nodeName) {
      nodeName = nodeName || COMPONENT.tagName;
      console.warn("Fallback for Webcomponent ".concat(nodeName));
      var component = new COMPONENT(node);
      component._fallback = !!this.options.forceComponentFallback;
      this.webComponents.push(component);
    }
    /**
     * Regist a custom element using the native customElements feature.
     * @param COMPONENT
     * @param nodeName
     */

  }, {
    key: "registComponent",
    value: function registComponent(COMPONENT, nodeName) {
      if (!window.customElements || this.options.forceComponentFallback) {
        console.warn("customElements not supported by your browser! Do nothing.");
        return;
      }

      nodeName = nodeName || COMPONENT.tagName;
      window.customElements.define(COMPONENT.tagName, COMPONENT); // TODO FIXME as CustomElementConstructor since TypeScript 3.8
      // TODO ?? call unbind (on unbind this view) of this component instance to unbind this view
      // (not disconnectedCallback / disconnectedFallbackCallback, this is automatically called from customElements)

      window.customElements.get(nodeName);
    }
  }]);

  return View;
}();

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(View, "mustacheTextBinder", {
  name: "mustache-text",
  routine: function routine(node, value) {
    node.data = value != null ? value : "";
  }
});

_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(View, "bindingComparator", function (a, b) {
  var _a$binder, _b$binder;

  var aPriority = ((_a$binder = a.binder) === null || _a$binder === void 0 ? void 0 : _a$binder.priority) || 0;
  var bPriority = ((_b$binder = b.binder) === null || _b$binder === void 0 ? void 0 : _b$binder.priority) || 0;
  return bPriority - aPriority;
});

/***/ }),

/***/ 681:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "E": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_0__.E
/* harmony export */ });
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4093);
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1914);
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_1__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _types__WEBPACK_IMPORTED_MODULE_1__.routerModule; } });



/***/ }),

/***/ 4093:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "E": () => /* reexport */ HistoryManager
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ../../riba/packages/history/src/services/history-manager.service.ts




/**
 * HistoryManager helps to keep track of the navigation
 */
var HistoryManager = /*#__PURE__*/function () {
  /**
   * Keep track of the status in historic order
   */
  function HistoryManager() {
    classCallCheck_default()(this, HistoryManager);

    defineProperty_default()(this, "history", []);

    if (HistoryManager.instance) {
      return HistoryManager.instance;
    }

    HistoryManager.instance = this;
    return HistoryManager.instance;
  }
  /**
   * Return information about the current status
   */


  createClass_default()(HistoryManager, [{
    key: "currentStatus",
    value: function currentStatus() {
      return this.history[this.history.length - 1];
    }
    /**
     * Return information about the previous status
     */

  }, {
    key: "prevStatus",
    value: function prevStatus() {
      var history = this.history;

      if (history.length < 2) {
        return null;
      }

      return history[history.length - 2];
    }
    /**
     * Add a new set of url and namespace
     */

  }, {
    key: "add",
    value: function add(url) {
      var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      this.history.push({
        namespace: namespace,
        url: url
      });
    }
  }]);

  return HistoryManager;
}();

defineProperty_default()(HistoryManager, "instance", void 0);
// CONCATENATED MODULE: ../../riba/packages/history/src/services/index.ts


/***/ }),

/***/ 1914:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_state__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_state__WEBPACK_IMPORTED_MODULE_0__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _state__WEBPACK_IMPORTED_MODULE_0__.routerModule; } });


/***/ }),

/***/ 242:
/***/ (() => {



/***/ }),

/***/ 8619:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => /* binding */ binders
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(7474);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// CONCATENATED MODULE: ../../riba/packages/i18n/src/binders/i18n/i18n-star.binder.ts



/**
 *
 */
var i18nStarBinderWrapper = function i18nStarBinderWrapper(localesService) {
  return {
    name: "i18n-*",
    block: false,
    priority: 0,
    bind: function bind(el) {
      var _this = this;

      var getElementData = function getElementData() {
        var customData = {};
        customData.type = el.type;
        customData.tagName = el.tagName;
        customData.contenteditable = el.getAttribute("contenteditable") ? true : false;
        customData.isRadio = customData.tagName === "INPUT" && customData.type === "radio";
        return customData;
      };

      this.customData = getElementData();
      this.customData.i18n = localesService;
      this.customData.vars = {};
      this.customData.translateMePathString = null;
      this.customData.properties = [];
      this.customData.attributeName = this.args[0].toString();

      this.customData.applyTranslation = function (locale) {
        if (!locale) {
          if (_this.customData.i18n.showMissingTranslation) {
            locale = "translation missing: \"".concat(_this.customData.properties.join("."), "\"");
          } else {
            return;
          }
        }

        if (_this.customData.attributeName === "html") {
          el.innerHTML = locale;
        } else if (_this.customData.attributeName === "text") {
          el.innerText = locale;
        } else if (_this.customData.attributeName === "value") {
          // TODO support also: https://github.com/JumpLinkNetwork/tinybind/blob/master/src/binders/basic/value.binder.ts#L51
          if (_this.customData.contenteditable) {
            el.innerHTML = locale;
          } else {
            el.value = locale;
          }
        } else {
          el.setAttribute(_this.customData.attributeName, locale);
        }
      };

      this.customData.parseVars = function (_el) {
        // parse templates to vars
        var newVars = _this.customData.i18n.parseTemplateVars(_el);

        _this.customData.vars = (0,type/* concat */.zo)(true, _this.customData.vars, newVars); // if (Object.keys(this.customData.vars).length) {
        //   console.warn('parsed templates vars', this.customData.vars);
        // }
        // parse data attributes to vars

        _this.customData.vars = (0,type/* concat */.zo)(true, _this.customData.vars, _el.dataset); // if (Object.keys(this.customData.vars).length) {
        //   console.warn('parsed attribute vars', this.customData.vars);
        // }
        // Parse templates wich have his own translations

        _this.customData.langVars = _this.customData.i18n.parseLocalVars(_el); // if (this.customData.langVars && Object.keys(this.customData.langVars).length) {
        //   console.warn('parsed own translations', this.customData.langVars);
        // }
      };

      this.customData.translate = function (langcode) {
        // If language service is not ready do nothing
        if (!_this.customData.i18n.ready) {
          return;
        }

        if (!langcode) {
          langcode = _this.customData.i18n.getLangcode();

          if (!langcode) {
            console.error("Langcode is requred", langcode);
            return;
          }
        } // translate by using the already translated language variable


        if (_this.customData.langVars && _this.customData.langVars[langcode]) {
          return _this.customData.applyTranslation(_this.customData.langVars[langcode]);
        }

        if (!_this.customData.properties || _this.customData.properties.length === 0) {
          // get the default translation if available
          if (_this.customData.langVars && _this.customData.langVars["default"]) {
            // console.warn('Translate by default', this.customData.langVars.default);
            return _this.customData.applyTranslation(_this.customData.langVars["default"]);
          }
        } // translate by properies, e.g. de.cart.add


        return _this.customData.i18n.get([langcode].concat(toConsumableArray_default()(_this.customData.properties)), _this.customData.vars).then(function (local) {
          if (local && typeof local === "string") {
            // console.warn('Translate by properties', [langcode, ...this.customData.properties], local);
            return _this.customData.applyTranslation(local);
          } // get the default translation if available


          if (_this.customData.langVars && _this.customData.langVars["default"]) {
            // console.warn('Translate by default as fallback', this.customData.langVars.default);
            return _this.customData.applyTranslation(_this.customData.langVars["default"]);
          }

          return _this.customData.applyTranslation(null);
        })["catch"](function (error) {
          console.error(error);
        });
      };

      this.customData.onAttributeChanged = function (data) {
        if (data.detail.name.startsWith("data-")) {
          var varName = data.detail.name.slice(5);
          var newVar = {};
          newVar[varName] = data.detail.newValue; // console.warn('binder-changed newVar', newVar);

          _this.customData.vars = (0,type/* concat */.zo)(true, _this.customData.vars, newVar);

          _this.customData.translate();
        }
      };

      this.customData.onLanguageChanged = function (langcode, initial) {
        // Do not translate on inital language change, we use the ready event for this
        if (!initial) {
          _this.customData.translate(langcode);
        }
      };
      /**
       * Initial stuff wee need to do after the language service is ready
       */


      this.customData.initOnReady = function (langcode, translationNeeded) {
        // Translate on translation service ready if needed
        if (translationNeeded) {
          _this.customData.translate(langcode);
        } // Translate if language changes


        _this.customData.i18n.event.on("changed", _this.customData.onLanguageChanged); // Translate if binder attribute event is changed


        el.addEventListener("binder-changed", _this.customData.onAttributeChanged);
      };
    },
    routine: function routine(el, translateMePathString) {
      if (this.customData.translateMePathString === null) {
        // if this is the first call of this function
        this.customData.translateMePathString = translateMePathString;

        if (translateMePathString) {
          this.customData.properties = this.customData.translateMePathString.split(".");
        }

        this.customData.parseVars(el); // Translate if language is ready

        if (this.customData.i18n.ready) {
          this.customData.initOnReady(this.customData.i18n.getLangcode(), this.customData.i18n.currentLangcode !== this.customData.i18n.initalLangcode || !localesService.doNotTranslateDefaultLanguage);
        } else {
          this.customData.i18n.event.on("ready", this.customData.initOnReady);
        }
      } else if (this.customData.translateMePathString !== translateMePathString) {
        // If translate string was changed
        this.customData.translateMePathString = translateMePathString;
        this.customData.properties = this.customData.translateMePathString.split(".");
        this.customData.parseVars(el);
        this.customData.translate();
      }
    },
    unbind: function unbind() {
      this.el.removeEventListener("binder-changed", this.customData.onAttributeChanged);
      this.customData.i18n.event.off("changed", this.customData.onLanguageChanged);
    }
  };
};
// CONCATENATED MODULE: ../../riba/packages/i18n/src/binders/index.ts

/* harmony default export */ const binders = (function (localesService) {
  return {
    i18nStarBinder: i18nStarBinderWrapper(localesService)
  };
});

/***/ }),

/***/ 2216:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "V": () => /* reexport */ AI18nSwitcherComponent,
  "Z": () => /* binding */ components
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(7857);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// CONCATENATED MODULE: ../../riba/packages/i18n/src/components/abstract-switcher/switcher.abstract.component.ts











function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var AI18nSwitcherComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(AI18nSwitcherComponent, _Component);

  var _super = _createSuper(AI18nSwitcherComponent);

  function AI18nSwitcherComponent(element) {
    var _this;

    classCallCheck_default()(this, AI18nSwitcherComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "localesService", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      langcodes: [],
      "switch": _this["switch"],
      toggle: _this.toggle,
      ready: false
    });

    return _this;
  }
  /**
   * Switch to language by langcode
   * @param langcode
   * @param event
   */


  createClass_default()(AI18nSwitcherComponent, [{
    key: "switch",
    value: function _switch(langcode, event) {
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      if (!langcode.active) {
        this.setLangcode(langcode.code);
      }
    }
    /**
     * Toggle language, makes only sense if you have only two languages
     * @param langcode
     * @param event
     */

  }, {
    key: "toggle",
    value: function toggle(event) {
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      for (var i in this.scope.langcodes) {
        if (Object.prototype.hasOwnProperty.call(this.scope.langcodes, i)) {
          if (this.scope.langcodes[i].active !== true) {
            this.setLangcode(this.scope.langcodes[i].code);
            return;
          }
        }
      }
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(observedAttributes) {
        var _this2 = this;

        var langcode;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this.localesService.ready) {
                  _context.next = 4;
                  break;
                }

                langcode = this.localesService.getLangcode();

                if (!langcode) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", this.initLocales(langcode).then(function () {
                  return get_default()(getPrototypeOf_default()(AI18nSwitcherComponent.prototype), "init", _this2).call(_this2, observedAttributes);
                }));

              case 4:
                return _context.abrupt("return", new Promise(function (resolve) {
                  _this2.localesService.event.on("ready", function (langcode)
                  /*, translationNeeded: boolean*/
                  {
                    return _this2.initLocales(langcode).then(function ()
                    /*langcodes*/
                    {
                      return get_default()(getPrototypeOf_default()(AI18nSwitcherComponent.prototype), "init", _this2).call(_this2, observedAttributes).then(function (view) {
                        resolve(view);
                      });
                    });
                  });
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init(_x) {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }, {
    key: "initLocales",
    value: function () {
      var _initLocales = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(langcode) {
        var _this3 = this;

        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt("return", this.localesService.getAvailableLangcodes().then(function (langcodes) {
                  _this3.scope.langcodes = langcodes; // set active langcodes

                  _this3.scope.langcodes.forEach(function (langCode) {
                    langCode.active = langCode.code === langcode;
                  });

                  return _this3.scope.langcodes;
                }).then(function (langcodes) {
                  _this3.localesService.event.on("changed", function (changedLangcode)
                  /*, initial: boolean*/
                  {
                    // Activate localcode and disable the other
                    _this3.scope.langcodes.forEach(function (langCode) {
                      langCode.active = langCode.code === changedLangcode;
                    });
                  });

                  return langcodes;
                }).then(function (langcodes) {
                  _this3.scope.ready = true;
                  return langcodes;
                }));

              case 1:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function initLocales(_x2) {
        return _initLocales.apply(this, arguments);
      }

      return initLocales;
    }()
  }, {
    key: "setLangcode",
    value: function setLangcode(langcode) {
      this.localesService.setLangcode(langcode);
    }
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return [];
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      get_default()(getPrototypeOf_default()(AI18nSwitcherComponent.prototype), "disconnectedCallback", this).call(this);
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return AI18nSwitcherComponent;
}(src.Component);
// CONCATENATED MODULE: ../../riba/packages/i18n/src/components/switcher/switcher.component.ts









function switcher_component_createSuper(Derived) { var hasNativeReflectConstruct = switcher_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function switcher_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var i18nSwitcherComponentWrapper = function i18nSwitcherComponentWrapper(localesService) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_AI18nSwitcherCompone) {
    inherits_default()(I18nSwitcherComponent, _AI18nSwitcherCompone);

    var _super = switcher_component_createSuper(I18nSwitcherComponent);

    createClass_default()(I18nSwitcherComponent, null, [{
      key: "observedAttributes",
      get: function get() {
        return [];
      }
    }]);

    function I18nSwitcherComponent(element) {
      var _this;

      classCallCheck_default()(this, I18nSwitcherComponent);

      _this = _super.call(this, element);

      defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

      defineProperty_default()(assertThisInitialized_default()(_this), "localesService", localesService);

      defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
        langcodes: [],
        "switch": _this["switch"],
        toggle: _this.toggle,
        ready: false
      });

      _this.init(I18nSwitcherComponent.observedAttributes);

      return _this;
    }
    /**
     * Switch to language by langcode
     * @param langcode
     * @param event
     */


    createClass_default()(I18nSwitcherComponent, [{
      key: "switch",
      value: function _switch(langcode, event) {
        this.debug("switch", langcode);
        return get_default()(getPrototypeOf_default()(I18nSwitcherComponent.prototype), "switch", this).call(this, langcode, event);
      }
      /**
       * Toggle language, makes only sense if you have only two languages
       * @param langcode
       * @param event
       */

    }, {
      key: "toggle",
      value: function toggle(event) {
        return get_default()(getPrototypeOf_default()(I18nSwitcherComponent.prototype), "toggle", this).call(this, event);
      }
    }, {
      key: "setLangcode",
      value: function setLangcode(langcode) {
        return get_default()(getPrototypeOf_default()(I18nSwitcherComponent.prototype), "setLangcode", this).call(this, langcode);
      }
    }, {
      key: "requiredAttributes",
      value: function requiredAttributes() {
        return [];
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        get_default()(getPrototypeOf_default()(I18nSwitcherComponent.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "template",
      value: function template() {
        return null;
      }
    }]);

    return I18nSwitcherComponent;
  }(AI18nSwitcherComponent), defineProperty_default()(_class, "tagName", "i18n-switcher"), _temp;
};
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(7474);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-share/bs4-share.component.ts
var bs4_share_component = __webpack_require__(8707);
// EXTERNAL MODULE: ../../riba/packages/bs4/src/components/bs4-share/bs4-share.component.html
var bs4_share_bs4_share_component = __webpack_require__(9775);
var bs4_share_component_default = /*#__PURE__*/__webpack_require__.n(bs4_share_bs4_share_component);

// EXTERNAL MODULE: ../../riba/packages/i18n/src/components/share/share.label.html
var share_label = __webpack_require__(9389);
var share_label_default = /*#__PURE__*/__webpack_require__.n(share_label);

// CONCATENATED MODULE: ../../riba/packages/i18n/src/components/share/share.component.ts












function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function share_component_createSuper(Derived) { var hasNativeReflectConstruct = share_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function share_component_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






/**
 * Component to share the a link (i18n version)
 */
var i18nShareComponentWrapper = function i18nShareComponentWrapper(localesService) {
  var _class, _temp;

  return _temp = _class = /*#__PURE__*/function (_Bs4ShareComponent) {
    inherits_default()(I18nShareComponent, _Bs4ShareComponent);

    var _super = share_component_createSuper(I18nShareComponent);

    createClass_default()(I18nShareComponent, null, [{
      key: "observedAttributes",
      get: function get() {
        return [].concat(toConsumableArray_default()(bs4_share_component/* Bs4ShareComponent.observedAttributes */.X.observedAttributes), ["text-i18n", "label-i18n", "service-label-i18n"]);
      }
    }]);

    function I18nShareComponent(element) {
      var _thisSuper, _this;

      classCallCheck_default()(this, I18nShareComponent);

      _this = _super.call(this, element);

      defineProperty_default()(assertThisInitialized_default()(_this), "_debug", false);

      defineProperty_default()(assertThisInitialized_default()(_this), "localesService", localesService);

      defineProperty_default()(assertThisInitialized_default()(_this), "scope", get_default()((_thisSuper = assertThisInitialized_default()(_this), getPrototypeOf_default()(I18nShareComponent.prototype)), "scope", _thisSuper));

      _this.scope = _this.getScopeDefaults();
      _this.scope.labelTemplate = (share_label_default());

      _this.init(bs4_share_component/* Bs4ShareComponent.observedAttributes */.X.observedAttributes);

      _this.addEventListeners();

      return _this;
    }

    createClass_default()(I18nShareComponent, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        this.init(bs4_share_component/* Bs4ShareComponent.observedAttributes */.X.observedAttributes);
        this.addEventListeners();
      }
    }, {
      key: "initTranslate",
      value: function () {
        var _initTranslate = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
          var _this2 = this;

          return regenerator_default().wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  return _context3.abrupt("return", new Promise(function (resolve) {
                    _this2.localesService.event.on("changed", /*#__PURE__*/function () {
                      var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(langcode) {
                        return regenerator_default().wrap(function _callee$(_context) {
                          while (1) {
                            switch (_context.prev = _context.next) {
                              case 0:
                                return _context.abrupt("return", resolve(langcode));

                              case 1:
                              case "end":
                                return _context.stop();
                            }
                          }
                        }, _callee);
                      }));

                      return function (_x) {
                        return _ref.apply(this, arguments);
                      };
                    }());

                    if (_this2.localesService.ready) {
                      var langcode = _this2.localesService.getLangcode();

                      return resolve(langcode);
                    } else {
                      _this2.localesService.event.on("ready", /*#__PURE__*/function () {
                        var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(langcode) {
                          return regenerator_default().wrap(function _callee2$(_context2) {
                            while (1) {
                              switch (_context2.prev = _context2.next) {
                                case 0:
                                  return _context2.abrupt("return", resolve(langcode));

                                case 1:
                                case "end":
                                  return _context2.stop();
                              }
                            }
                          }, _callee2);
                        }));

                        return function (_x2) {
                          return _ref2.apply(this, arguments);
                        };
                      }());
                    }
                  }));

                case 1:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        function initTranslate() {
          return _initTranslate.apply(this, arguments);
        }

        return initTranslate;
      }()
    }, {
      key: "translate",
      value: function () {
        var _translate = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4(langcode, value) {
          return regenerator_default().wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  if (value) {
                    _context4.next = 2;
                    break;
                  }

                  return _context4.abrupt("return");

                case 2:
                  return _context4.abrupt("return", this.localesService.get([langcode].concat(toConsumableArray_default()(value.split(".")))).then(function (locale) {
                    // this.debug('changed local', local);
                    return locale;
                  })["catch"](function (error) {
                    console.error(error);
                  }));

                case 3:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));

        function translate(_x3, _x4) {
          return _translate.apply(this, arguments);
        }

        return translate;
      }()
    }, {
      key: "beforeBind",
      value: function () {
        var _beforeBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {
          var langcode, _iterator, _step, shareItem;

          return regenerator_default().wrap(function _callee5$(_context5) {
            while (1) {
              switch (_context5.prev = _context5.next) {
                case 0:
                  _context5.next = 2;
                  return get_default()(getPrototypeOf_default()(I18nShareComponent.prototype), "beforeBind", this).call(this);

                case 2:
                  _context5.next = 4;
                  return this.initTranslate();

                case 4:
                  langcode = _context5.sent;

                  if (!this.scope.textI18n) {
                    _context5.next = 12;
                    break;
                  }

                  _context5.next = 8;
                  return this.translate(langcode, this.scope.textI18n);

                case 8:
                  _context5.t0 = _context5.sent;

                  if (_context5.t0) {
                    _context5.next = 11;
                    break;
                  }

                  _context5.t0 = this.scope.text;

                case 11:
                  this.scope.text = _context5.t0;

                case 12:
                  if (!this.scope.serviceLabelI18n) {
                    _context5.next = 34;
                    break;
                  }

                  _iterator = _createForOfIteratorHelper(this.scope.shareItems);
                  _context5.prev = 14;

                  _iterator.s();

                case 16:
                  if ((_step = _iterator.n()).done) {
                    _context5.next = 26;
                    break;
                  }

                  shareItem = _step.value;
                  _context5.next = 20;
                  return this.translate(langcode, this.scope.serviceLabelI18n + "." + shareItem.id);

                case 20:
                  _context5.t1 = _context5.sent;

                  if (_context5.t1) {
                    _context5.next = 23;
                    break;
                  }

                  _context5.t1 = shareItem.label;

                case 23:
                  shareItem.label = _context5.t1;

                case 24:
                  _context5.next = 16;
                  break;

                case 26:
                  _context5.next = 31;
                  break;

                case 28:
                  _context5.prev = 28;
                  _context5.t2 = _context5["catch"](14);

                  _iterator.e(_context5.t2);

                case 31:
                  _context5.prev = 31;

                  _iterator.f();

                  return _context5.finish(31);

                case 34:
                case "end":
                  return _context5.stop();
              }
            }
          }, _callee5, this, [[14, 28, 31, 34]]);
        }));

        function beforeBind() {
          return _beforeBind.apply(this, arguments);
        }

        return beforeBind;
      }()
    }, {
      key: "afterBind",
      value: function () {
        var _afterBind = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6() {
          return regenerator_default().wrap(function _callee6$(_context6) {
            while (1) {
              switch (_context6.prev = _context6.next) {
                case 0:
                  _context6.next = 2;
                  return get_default()(getPrototypeOf_default()(I18nShareComponent.prototype), "afterBind", this).call(this);

                case 2:
                case "end":
                  return _context6.stop();
              }
            }
          }, _callee6, this);
        }));

        function afterBind() {
          return _afterBind.apply(this, arguments);
        }

        return afterBind;
      }()
    }, {
      key: "template",
      value: function template() {
        this.debug("template", this.el, (0,dom/* hasChildNodesTrim */.Np)(this.el));

        if (this.el && (0,dom/* hasChildNodesTrim */.Np)(this.el)) {
          // If a child is set, this is a custom label template
          this.scope.labelTemplate = this.el.innerHTML;
          this.debug("Custom label template: ", this.scope.labelTemplate);
        }

        return (bs4_share_component_default());
      }
    }]);

    return I18nShareComponent;
  }(bs4_share_component/* Bs4ShareComponent */.X), defineProperty_default()(_class, "tagName", "i18n-share"), _temp;
};
// CONCATENATED MODULE: ../../riba/packages/i18n/src/components/index.ts



/* harmony default export */ const components = (function (localesService) {
  return {
    I18nSwitcherComponent: i18nSwitcherComponentWrapper(localesService),
    I18nShareComponent: i18nShareComponentWrapper(localesService)
  };
});

/***/ }),

/***/ 9092:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => /* binding */ formatters
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(7474);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// CONCATENATED MODULE: ../../riba/packages/i18n/src/formatters/t.formatter.ts




var translate = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(translateMePathString, localesService, langcode) {
    var properties;
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            properties = translateMePathString.split(".");

            if (langcode) {
              _context.next = 5;
              break;
            }

            langcode = localesService.getLangcode();

            if (langcode) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return", null);

          case 5:
            return _context.abrupt("return", localesService.get([langcode].concat(toConsumableArray_default()(properties))
            /*, vars */
            ).then(function (locale) {
              return locale;
            })["catch"](function (error) {
              console.error(error);
            }));

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function translate(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var tFormatterWrapper = function tFormatterWrapper(localesService) {
  return {
    name: "t",
    read: function read(translateMePathString, langcode)
    /*, ...vars: string[]*/
    {
      return new Promise(function (resolve, reject) {
        localesService.event.on("changed", function () {
          // console.debug('changed');
          translate(translateMePathString, localesService, langcode).then(function (locale) {
            resolve(locale);
          })["catch"](function (error) {
            reject(error);
          });
        });
        localesService.event.on("ready", function () {
          translate(translateMePathString, localesService, langcode).then(function (locale) {
            resolve(locale);
          })["catch"](function (error) {
            reject(error);
          });
        });

        if (localesService.ready) {
          translate(translateMePathString, localesService, langcode).then(function (locale) {
            resolve(locale);
          });
        }
      });
    }
  };
};
// CONCATENATED MODULE: ../../riba/packages/i18n/src/formatters/index.ts

/* harmony default export */ const formatters = (function (localesService) {
  return {
    t: tFormatterWrapper(localesService)
  };
});

/***/ }),

/***/ 7613:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => /* binding */ i18nModule
/* harmony export */ });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8619);
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(9092);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2216);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8776);




var i18nModule = function i18nModule(localesService) {
  return {
    binders: (0,_binders__WEBPACK_IMPORTED_MODULE_0__/* .default */ .Z)(localesService),
    components: (0,_components__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z)(localesService),
    formatters: (0,_formatters__WEBPACK_IMPORTED_MODULE_1__/* .default */ .Z)(localesService),
    services: _services__WEBPACK_IMPORTED_MODULE_3__
  };
};

/***/ }),

/***/ 7344:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "V": () => /* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.V,
/* harmony export */   "LocalesStaticService": () => /* reexport safe */ _services__WEBPACK_IMPORTED_MODULE_4__.LocalesStaticService,
/* harmony export */   "i18nModule": () => /* reexport safe */ _i18n_module__WEBPACK_IMPORTED_MODULE_5__.Z
/* harmony export */ });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8619);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2216);
/* harmony import */ var _formatters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9092);
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(469);
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_3__, "LocalesStaticService")) __webpack_require__.d(__webpack_exports__, { "LocalesStaticService": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_3__.LocalesStaticService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_3__, "i18nModule")) __webpack_require__.d(__webpack_exports__, { "i18nModule": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_3__.i18nModule; } });
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8776);
/* harmony import */ var _i18n_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(7613);







/***/ }),

/***/ 469:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _langcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2209);
/* harmony import */ var _langcode__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_langcode__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_langcode__WEBPACK_IMPORTED_MODULE_0__, "LocalesStaticService")) __webpack_require__.d(__webpack_exports__, { "LocalesStaticService": function() { return _langcode__WEBPACK_IMPORTED_MODULE_0__.LocalesStaticService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_langcode__WEBPACK_IMPORTED_MODULE_0__, "i18nModule")) __webpack_require__.d(__webpack_exports__, { "i18nModule": function() { return _langcode__WEBPACK_IMPORTED_MODULE_0__.i18nModule; } });
/* harmony import */ var _local_var__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6479);
/* harmony import */ var _local_var__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_local_var__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_local_var__WEBPACK_IMPORTED_MODULE_1__, "LocalesStaticService")) __webpack_require__.d(__webpack_exports__, { "LocalesStaticService": function() { return _local_var__WEBPACK_IMPORTED_MODULE_1__.LocalesStaticService; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_local_var__WEBPACK_IMPORTED_MODULE_1__, "i18nModule")) __webpack_require__.d(__webpack_exports__, { "i18nModule": function() { return _local_var__WEBPACK_IMPORTED_MODULE_1__.i18nModule; } });



/***/ }),

/***/ 2209:
/***/ (() => {



/***/ }),

/***/ 6479:
/***/ (() => {



/***/ }),

/***/ 8776:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ALocalesService": () => /* reexport */ ALocalesService,
  "LocalesRestService": () => /* reexport */ LocalesRestService,
  "LocalesStaticService": () => /* reexport */ LocalesStaticService
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(9948);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(7474);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// CONCATENATED MODULE: ../../riba/packages/i18n/src/services/locales-base.service.ts








function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }



var ALocalesService = /*#__PURE__*/function () {
  createClass_default()(ALocalesService, [{
    key: "ready",
    get: function get() {
      return this._ready;
    }
  }]);

  function ALocalesService(doNotTranslateDefaultLanguage, showMissingTranslation) {
    classCallCheck_default()(this, ALocalesService);

    defineProperty_default()(this, "event", new src.EventDispatcher("i18n"));

    defineProperty_default()(this, "showMissingTranslation", false);

    defineProperty_default()(this, "_ready", false);

    defineProperty_default()(this, "currentLangcode", void 0);

    defineProperty_default()(this, "initalLangcode", void 0);

    this.doNotTranslateDefaultLanguage = doNotTranslateDefaultLanguage;
    this.showMissingTranslation = showMissingTranslation;
  }
  /**
   * Get translation by properties, e.g. `de.form.newsletter_label`
   * Properties object must include the language code, e.g. `de`.
   * @param properties properties, e.g. `['de', 'form', 'newsletter', 'label']`
   * @param force Set this to true if you want to force the request also if the service is not ready, you should use this only one the time
   */


  createClass_default()(ALocalesService, [{
    key: "get",
    value: function () {
      var _get = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(properties, vars) {
        var _this = this;

        var force,
            _args = arguments;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                force = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;

                if (!(!this.ready && !force)) {
                  _context.next = 3;
                  break;
                }

                throw new Error("not ready");

              case 3:
                return _context.abrupt("return", this.getAll() // extract properties
                .then(function (locals) {
                  if (properties && properties.length) {
                    var local = (0,type/* clone */.d9)(true, locals);

                    var _iterator = _createForOfIteratorHelper(properties),
                        _step;

                    try {
                      for (_iterator.s(); !(_step = _iterator.n()).done;) {
                        var property = _step.value;

                        if (!property) {
                          return;
                        }

                        if (local[property]) {
                          local = local[property];
                        } else {
                          return null;
                        }
                      }
                    } catch (err) {
                      _iterator.e(err);
                    } finally {
                      _iterator.f();
                    }

                    return local;
                  }

                  return locals;
                }).then(function (local) {
                  if (local === null && properties) {
                    console.warn("WARNING translation missing: \"".concat(properties.join("."), "\""), local, properties);
                  }

                  return local;
                }) // Replace variables in local string if vars are set
                .then(function (local) {
                  if (vars) {
                    local = _this.setTranslateStringPluralization(local, vars);
                    local = _this.setTranslateStringVars(local, vars);
                  }

                  return local;
                })["catch"](function (error) {
                  console.error(error);
                  _this._ready = false;
                  return error;
                }));

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function get(_x, _x2) {
        return _get.apply(this, arguments);
      }

      return get;
    }()
    /**
     * Get translation by properties, e.g. `form.newsletter_label`
     * Properties object must not include the language code.
     * @param properties properties, e.g. `[form', 'newsletter', 'label']`
     */

  }, {
    key: "getByCurrentLang",
    value: function () {
      var _getByCurrentLang = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var properties,
            vars,
            langcode,
            _args2 = arguments;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                properties = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : [];
                vars = _args2.length > 1 ? _args2[1] : undefined;
                langcode = this.getLangcode();

                if (langcode) {
                  _context2.next = 5;
                  break;
                }

                throw new Error("Langcode not found in html tag");

              case 5:
                return _context2.abrupt("return", this.get([langcode].concat(toConsumableArray_default()(properties)), vars));

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function getByCurrentLang() {
        return _getByCurrentLang.apply(this, arguments);
      }

      return getByCurrentLang;
    }()
  }, {
    key: "getBrowserLangcode",
    value: function getBrowserLangcode() {
      var lang = navigator.language || navigator.userLanguage;
      var simplified = lang.split("-")[0].toLowerCase();
      return simplified;
    }
  }, {
    key: "getHTMLLangcode",
    value: function getHTMLLangcode() {
      var langcode = document.documentElement ? document.documentElement.lang : "en";
      return langcode;
    }
    /**
     * Get the current langcode,
     * if lang was not choosed this is the langcode of the lang attribute of the html element.
     * If the language was changed this returns the changed language
     */

  }, {
    key: "getLangcode",
    value: function getLangcode() {
      return this.currentLangcode;
    }
  }, {
    key: "getInitialLangcode",
    value: function getInitialLangcode() {
      return this.initalLangcode;
    }
  }, {
    key: "setLangcode",
    value: function setLangcode(langcode) {
      var initial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (this.currentLangcode !== langcode) {
        this.currentLangcode = langcode; // $('html').attr('lang', langcode);

        if (document.documentElement) {
          document.documentElement.lang = langcode;
        }

        this.event.trigger("changed", langcode, initial);
      }
    }
  }, {
    key: "getAvailableLangcodes",
    value: function () {
      var _getAvailableLangcodes = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        var activeCode;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                activeCode = this.getLangcode();
                return _context3.abrupt("return", this.get(undefined, undefined, true).then(function (locals) {
                  var langcodes = [];
                  Object.keys(locals).forEach(function (langcode) {
                    langcodes.push({
                      code: langcode,
                      active: langcode === activeCode
                    });
                  });
                  return langcodes;
                }));

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getAvailableLangcodes() {
        return _getAvailableLangcodes.apply(this, arguments);
      }

      return getAvailableLangcodes;
    }()
    /**
     * Parse templates wich can be used to set variables on language strings
     */

  }, {
    key: "parseTemplateVars",
    value: function parseTemplateVars(el) {
      var templates = el.querySelectorAll("template");
      var vars = {};
      templates.forEach(function (template) {
        var name = template.getAttribute("name");

        if (name !== null) {
          vars[name] = template.innerHTML.trim();
        }
      });
      return vars;
    }
    /**
     * Parse templates wich have his own translations
     */

  }, {
    key: "parseLocalVars",
    value: function parseLocalVars(el) {
      var templates = el.querySelectorAll("template");
      var vars = {};
      templates.forEach(function (template) {
        var lang = template.getAttribute("lang");

        if (lang !== null) {
          vars[lang] = template.innerHTML.trim();
        }
      });
      return vars;
    }
    /**
     * Replace variables on translated string
     * @param translateString
     * @param vars
     */

  }, {
    key: "setTranslateStringVars",
    value: function setTranslateStringVars(translateString, vars) {
      if (!translateString || Object.keys(vars).length === 0 || typeof translateString.match !== "function") {
        return translateString;
      }

      var matches = translateString.match(/{{\s*?[A-Za-z0-9_-]+\s*?}}/gm);

      if (matches) {
        var _iterator2 = _createForOfIteratorHelper(matches),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var match = _step2.value;

            if (match) {
              var varName = match.replace(/{{\s*|\s*}}/gm, "");

              if (typeof vars[varName] === "string" || typeof vars[varName] === "number") {
                translateString = translateString.replace(match, vars[varName]);
              }
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }

      return translateString;
    }
    /**
     * Get file with all languages
     */

  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var _this2 = this;

        var browserLangcode;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this.initalLangcode = this.getHTMLLangcode();
                this.currentLangcode = this.initalLangcode;

                if (this.initalLangcode) {
                  _context4.next = 4;
                  break;
                }

                throw new Error("The lang attribute on the html element is requred to detect the default theme language: ".concat(this.initalLangcode));

              case 4:
                // Detect browser language and switch to this language when available
                browserLangcode = this.getBrowserLangcode();
                return _context4.abrupt("return", this.getAvailableLangcodes().then(function (availableLangcodes) {
                  var browserLangFound = false;

                  var _iterator3 = _createForOfIteratorHelper(availableLangcodes),
                      _step3;

                  try {
                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                      var availableLangcodeObj = _step3.value;

                      if (availableLangcodeObj.code === browserLangcode) {
                        browserLangFound = true;
                      }
                    } // only switch language if the browser language is not the default language (if doNotTranslateDefaultLanguage is true)

                  } catch (err) {
                    _iterator3.e(err);
                  } finally {
                    _iterator3.f();
                  }

                  if (!_this2.doNotTranslateDefaultLanguage || browserLangFound && browserLangcode !== _this2.currentLangcode) {
                    _this2.setLangcode(browserLangcode, true);
                  }

                  return availableLangcodes;
                }).then(function ()
                /*availableLangcodes*/
                {
                  _this2._ready = true; // If the current langcode is not the inital langcode then translation is needed

                  var translationNeeded = _this2.currentLangcode !== _this2.initalLangcode || !_this2.doNotTranslateDefaultLanguage;

                  _this2.event.trigger("ready", _this2.currentLangcode, translationNeeded);
                })["catch"](function (error) {
                  console.error(error);
                  _this2._ready = false;
                  return error;
                }));

              case 6:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function init() {
        return _init.apply(this, arguments);
      }

      return init;
    }()
    /**
     * see https://help.shopify.com/en/themes/development/theme-store-requirements/internationalizing/translation-filter#pluralization-in-translation-keys
     * @param translateString
     * @param vars
     */

  }, {
    key: "setTranslateStringPluralization",
    value: function setTranslateStringPluralization(translateObj, vars) {
      if (vars.count && typeof_default()(translateObj) === "object" && translateObj !== null) {
        var count = Number(vars.count);

        if (count === 0) {
          if (translateObj.zero) {
            return translateObj.zero;
          }
        } else if (count === 1) {
          if (translateObj.one) {
            return translateObj.one;
          }
        } else if (count === 2) {
          if (translateObj.two) {
            return translateObj.two;
          }
        }
      }

      if (typeof_default()(translateObj) === "object" && translateObj !== null && translateObj.other) {
        return translateObj.other;
      }

      return translateObj;
    }
  }]);

  return ALocalesService;
}();
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// CONCATENATED MODULE: ../../riba/packages/i18n/src/services/locales-rest.service.ts










function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



/**
 * LocalesRestService get locales object from url
 */

var LocalesRestService = /*#__PURE__*/function (_ALocalesService) {
  inherits_default()(LocalesRestService, _ALocalesService);

  var _super = _createSuper(LocalesRestService);

  createClass_default()(LocalesRestService, null, [{
    key: "getInstance",
    value: function getInstance(url) {
      return LocalesRestService.instances[url];
    }
  }]);

  function LocalesRestService(url) {
    var _this;

    var doNotTranslateDefaultLanguage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var showMissingTranslation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    classCallCheck_default()(this, LocalesRestService);

    _this = _super.call(this, doNotTranslateDefaultLanguage, showMissingTranslation);

    defineProperty_default()(assertThisInitialized_default()(_this), "locales", {});

    defineProperty_default()(assertThisInitialized_default()(_this), "currentLangcode", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "initalLangcode", void 0);

    _this.url = url;

    if (!_this.url) {
      throw new Error("Url is requred!");
    }

    if (LocalesRestService.instances[_this.url]) {
      return possibleConstructorReturn_default()(_this, LocalesRestService.instances[_this.url]);
    }

    _this.init();

    LocalesRestService.instances[_this.url] = assertThisInitialized_default()(_this);
    return _this;
  }
  /**
   * Get file with all languages
   * @param themeID
   */


  createClass_default()(LocalesRestService, [{
    key: "getAll",
    value: function () {
      var _getAll = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(url) {
        var _this2 = this;

        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!url) {
                  url = this.url;
                }

                if (url) {
                  _context.next = 3;
                  break;
                }

                throw new Error("Url is requred!");

              case 3:
                if (window.Shopify.shop) {
                  url = url + "?shop=".concat(window.Shopify.shop);
                }

                if (!this.locales[url]) {
                  _context.next = 6;
                  break;
                }

                return _context.abrupt("return", this.locales[url]);

              case 6:
                return _context.abrupt("return", src.HttpService.getJSON(url).then(function (locales) {
                  _this2.locales[url] = locales;
                  return _this2.locales[url];
                }));

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getAll(_x) {
        return _getAll.apply(this, arguments);
      }

      return getAll;
    }()
  }]);

  return LocalesRestService;
}(ALocalesService);

defineProperty_default()(LocalesRestService, "instances", {});
// CONCATENATED MODULE: ../../riba/packages/i18n/src/services/locales-static.service.ts










function locales_static_service_createSuper(Derived) { var hasNativeReflectConstruct = locales_static_service_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function locales_static_service_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var LocalesStaticService = /*#__PURE__*/function (_ALocalesService) {
  inherits_default()(LocalesStaticService, _ALocalesService);

  var _super = locales_static_service_createSuper(LocalesStaticService);

  createClass_default()(LocalesStaticService, null, [{
    key: "getInstance",
    value: function getInstance() {
      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "main";
      return LocalesStaticService.instances[id];
    }
    /**
     * The current setted langcode
     */

  }]);

  function LocalesStaticService(locales, id) {
    var _this;

    var doNotTranslateDefaultLanguage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var showMissingTranslation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

    classCallCheck_default()(this, LocalesStaticService);

    _this = _super.call(this, doNotTranslateDefaultLanguage, showMissingTranslation);

    defineProperty_default()(assertThisInitialized_default()(_this), "currentLangcode", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "initalLangcode", void 0);

    if (!id) {
      id = "main";
    }

    _this.locales = locales;

    if (LocalesStaticService.instances[id]) {
      return possibleConstructorReturn_default()(_this, LocalesStaticService.instances[id]);
    }

    _this.init();

    LocalesStaticService.instances[id] = assertThisInitialized_default()(_this);
    return _this;
  }
  /**
   * Get file with all languages
   * @param themeID
   */


  createClass_default()(LocalesStaticService, [{
    key: "getAll",
    value: function () {
      var _getAll = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", this.locales);

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getAll() {
        return _getAll.apply(this, arguments);
      }

      return getAll;
    }()
  }]);

  return LocalesStaticService;
}(ALocalesService);

defineProperty_default()(LocalesStaticService, "instances", {});
// CONCATENATED MODULE: ../../riba/packages/i18n/src/services/index.ts




/***/ }),

/***/ 340:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "parentRouteClassStarBinder": () => /* reexport */ parentRouteClassStarBinder,
  "routeBackOnStarBinder": () => /* reexport */ routeBackOnStarBinder,
  "routeBinder": () => /* reexport */ routeBinder,
  "routeClassStarBinder": () => /* reexport */ routeClassStarBinder,
  "viewBinder": () => /* reexport */ viewBinder,
  "viewStaticBinder": () => /* reexport */ viewStaticBinder
});

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/router/src/services/index.ts + 12 modules
var services = __webpack_require__(1148);
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/view.binder.ts





/**
 * The main wrapper for the riba router
 * TODO convert this to a component
 *
 * ```
 *   <div rv-view='{"listenAllLinks": true}'>
 *     <div class="rv-view-container" {% include 'jumplink-utils-barba-container-attributes', parseCollection: true %}>
 *       {{ content_for_layout }}
 *     </div>
 *   </div>
 * ```
 */
var viewBinder = {
  name: "view",
  block: true,
  options: {},
  nested: null,
  bind: function bind(el) {
    var self = this.binder || this;
    self.nested = self.nested || null;
    self.wrapper = self.wrapper || el;
    /*
     * Make the dispatcher available in the model to register event handlers.
     *
     * I.e., if we have initialized rivets/riba with:
     *
     *  `rivets.bind(document.body, model)`,
     *
     * then we can register event handlers for the Barba router dispatcher like this:
     *
     *  `model.routerDispatcher.on('newPageReady', ...);`
     *  `model.routerDispatcher.on('transitionCompleted', ...);`
     * ...etc.
     *
     */
    // this.view.models.routerDispatcher = dispatcher;
  },
  routine: function routine(el, options) {
    var _self$wrapper;

    var self = this.binder || this; // Set default options

    self.options = options || {};
    self.options.viewId = self.options.viewId || el.getAttribute("id") || "main";
    self.options.action = self.options.action || "replace"; // replace / append

    if (self.options.viewId === "main") {
      self.options.containerSelector = self.options.containerSelector || "[data-namespace]";
      self.options.scrollToTop = (0,type/* isBoolean */.jn)(self.options.scrollToTop) ? self.options.scrollToTop : true;
      self.options.listenAllLinks = (0,type/* isBoolean */.jn)(self.options.listenAllLinks) ? self.options.listenAllLinks : true;
      self.options.listenPopstate = (0,type/* isBoolean */.jn)(self.options.listenPopstate) ? self.options.listenPopstate : true;
      self.options.scrollToAnchorHash = (0,type/* isBoolean */.jn)(self.options.scrollToAnchorHash) ? self.options.scrollToAnchorHash : true;
      self.options.datasetToModel = (0,type/* isBoolean */.jn)(self.options.datasetToModel) ? self.options.datasetToModel : true;
      self.options.parseTitle = (0,type/* isBoolean */.jn)(self.options.parseTitle) ? self.options.parseTitle : true;
      self.options.changeBrowserUrl = (0,type/* isBoolean */.jn)(self.options.changeBrowserUrl) ? self.options.changeBrowserUrl : true;
      self.options.prefetchLinks = (0,type/* isBoolean */.jn)(self.options.prefetchLinks) ? self.options.prefetchLinks : true;
    } else {
      self.options.containerSelector = self.options.containerSelector || "#".concat(self.options.viewId, " > *:first-child");
      self.options.scrollToTop = (0,type/* isBoolean */.jn)(self.options.scrollToTop) ? self.options.scrollToTop : false;
      self.options.listenAllLinks = (0,type/* isBoolean */.jn)(self.options.listenAllLinks) ? self.options.listenAllLinks : false;
      self.options.listenPopstate = (0,type/* isBoolean */.jn)(self.options.listenPopstate) ? self.options.listenPopstate : false;
      self.options.scrollToAnchorHash = (0,type/* isBoolean */.jn)(self.options.scrollToAnchorHash) ? self.options.scrollToAnchorHash : false;
      self.options.datasetToModel = (0,type/* isBoolean */.jn)(self.options.datasetToModel) ? self.options.datasetToModel : false;
      self.options.parseTitle = (0,type/* isBoolean */.jn)(self.options.parseTitle) ? self.options.parseTitle : false;
      self.options.changeBrowserUrl = (0,type/* isBoolean */.jn)(self.options.changeBrowserUrl) ? self.options.changeBrowserUrl : false;
      self.options.prefetchLinks = (0,type/* isBoolean */.jn)(self.options.prefetchLinks) ? self.options.prefetchLinks : false;
    }

    self.options.prefetchLinks = (0,type/* isBoolean */.jn)(self.options.prefetchLinks) ? self.options.prefetchLinks : true;
    self.options.transition = self.options.transition || new services.HideShowTransition(self.options.action, self.options.scrollToTop);
    self.dispatcher = new src.EventDispatcher(self.options.viewId);
    (_self$wrapper = self.wrapper) === null || _self$wrapper === void 0 ? void 0 : _self$wrapper.setAttribute("id", self.options.viewId);
    self.dispatcher.on("newPageReady", self.onPageReady.bind(this));
    self.dispatcher.on("transitionCompleted", self.onTransitionCompleted.bind(this));
    var pjaxOptions = {
      id: self.options.viewId,
      wrapper: self.wrapper,
      containerSelector: self.options.containerSelector,
      listenAllLinks: !!self.options.listenAllLinks,
      listenPopstate: !!self.options.listenPopstate,
      transition: self.options.transition,
      parseTitle: !!self.options.parseTitle,
      changeBrowserUrl: !!self.options.changeBrowserUrl,
      prefetchLinks: !!self.options.prefetchLinks
    };
    var pjax = new services.Pjax(pjaxOptions);
    self.prefetch = new services.Prefetch(self.options.viewId);
    self.prefetch.init(pjaxOptions.prefetchLinks);
    pjax.start();
  },
  unbind: function unbind()
  /*el: HTMLUnknownElement*/
  {
    var self = this.binder || this;

    if (self.dispatcher) {
      self.dispatcher.off("newPageReady", self.onPageReady.bind(this));
      self.dispatcher.off("transitionCompleted", self.onTransitionCompleted.bind(this));
    }

    if (self.nested !== null) {
      self.nested.unbind();
      self.nested = null;
    }
  },
  onPageReady: function onPageReady(viewId, currentStatus, prevStatus, container, newPageRawHTML, dataset)
  /*, isInit: boolean*/
  {
    var self = this.binder || this; // Only to anything if the viewID is eqal (in this way it is possible to have multiple views)

    if (viewId !== self.options.viewId) {
      console.warn("not the right view", self.options.viewId, viewId, dataset);
      return;
    } // unbind the old rivets view


    if (self.nested) {
      if (self.options.action === "replace") {// IMPORTANT ROUTE FIXME only unbind if cache is not enabled?
        // self.nested.unbind();
      }
    } // add the dateset to the model


    if (!(0,type/* isObject */.Kn)(this.view.models)) {
      this.view.models = {};
    }

    if (self.options.datasetToModel === true && (0,type/* isObject */.Kn)(dataset)) {
      this.view.models.dataset = dataset; // = container.data();
    } // TODO append on action "append"


    self.nested = new src.View(container, this.view.models, this.view.options);
    self.nested.bind();
  },
  onTransitionCompleted: function onTransitionCompleted(viewId) {
    var self = this.binder || this; // Only to anything if the viewID is eqal (in this way it is possible to have multiple views)

    if (viewId !== self.options.viewId) {
      return;
    } // scroll to Anchor of hash


    if (self.options.scrollToAnchorHash && window.location.hash) {
      var scrollToMe = document.getElementById(window.location.hash.substr(1));

      if (scrollToMe) {
        return new Promise(function (resolve) {
          resolve((0,dom/* scrollTo */.X5)(scrollToMe, 0, window));
        });
      }
    }

    return Promise.resolve();
  }
};
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/view-static.binder.ts



var handleize = src.handleizeFormatter.read;
/**
 * Loads a url with pjax and show them insite the element this binder is used on
 */

var viewStaticBinder = {
  name: "view-static",
  block: true,
  bind: function bind()
  /*el: HTMLElement*/
  {
    if (!this.customData) {
      this.customData = {
        nested: null
      };
    }
  },
  routine: function routine(el, options) {
    var _this = this;

    var wrapper = el; // Set default options

    options = options || {};
    options.listenAllLinks = false;
    options.listenPopstate = false;
    options.parseTitle = false;
    options.transition = options.transition || new services.HideShowTransition();
    options.viewId = options.viewId || el.getAttribute("id") || handleize(options.url);
    options.containerSelector = options.containerSelector || "[data-namespace]";
    options.changeBrowserUrl = false;
    var pjax = new services.Pjax(options); // TODO use prefetch.loadResponseCached to use the cache

    var response = pjax.loadResponseCached(options.url, false, false);
    response.then(function (_response) {
      wrapper.replaceWith(_response.container);
      _response.container.style.visibility = "visible"; // add the dateset to the model

      if (!(0,type/* isObject */.Kn)(_this.view.models)) {
        _this.view.models = {};
      } // this.view.models.dataset = container.data();


      if (_this.customData.nested) {
        _this.customData.nested.unbind();
      }

      _this.customData.nested = new src.View(_response.container, _this.view.models, _this.view.options);

      _this.customData.nested.bind();
    });
  },
  unbind: function unbind()
  /*el: HTMLUnknownElement*/
  {
    if (this.customData.nested) {
      this.customData.nested.unbind();
    }

    delete this.customData;
  }
};
// EXTERNAL MODULE: ../../riba/packages/utils/src/url.ts
var src_url = __webpack_require__(3190);
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/route.binder.ts





/**
 * Open link with pajax if the route is not the active route
 */
var routeBinder = {
  name: "route",
  bind: function bind(el) {
    el.classList.add("route");
    this.customData = {
      dispatcher: undefined,
      options: {
        removeAfterActivation: false,
        newTab: false
      },
      onClick: function onClick(event) {
        // console.log(this.customData.options.url);
        var pjax = services.Pjax.getInstance(this.customData.options.viewId);

        if ((0,src_url/* onRoute */.k9)(this.customData.options.url)) {
          console.debug("already on this site");
        } else if ((0,src_url/* isExternalUrl */.xf)(this.customData.options.url)) {
          // console.debug('check');
          if (!pjax) {
            return;
          }

          pjax.goTo(this.customData.options.url);
        } else {
          if (this.customData.options.url) {
            if (!pjax) {
              return;
            }

            pjax.onLinkClick(event, this.el, this.customData.options.url);
          }
        }

        if (this.customData.options.removeAfterActivation && this.el && this.el.parentNode) {
          // this.unbind(); TODO?
          this.el.parentNode.removeChild(this.el);
        }
      }
    };
    el.addEventListener("click", this.customData.onClick.bind(this));
  },
  routine: function routine(el, optionsOrUrl) {
    if ((0,type/* isString */.HD)(optionsOrUrl)) {
      this.customData.options.url = optionsOrUrl;
    } else if ((0,type/* isObject */.Kn)(optionsOrUrl)) {
      this.customData.options = optionsOrUrl;
    }

    this.customData.options.viewId = this.customData.options.viewId || "main";
    this.customData.prefetch = new services.Prefetch(this.customData.options.viewId), this.customData.options.removeAfterActivation = (0,type/* isBoolean */.jn)(this.customData.options.removeAfterActivation) ? this.customData.options.removeAfterActivation : false;
    this.customData.dispatcher = new src.EventDispatcher(this.customData.options.viewId);
    this.customData.options.newTab = false;
    var isAnkerHTMLElement = el.tagName === "A";

    if (!this.customData.options.url && isAnkerHTMLElement) {
      var url = el.getAttribute("href");

      if (url) {
        this.customData.options.url = url;
      }
    }

    if (el.getAttribute("target") === "_blank") {
      this.customData.options.newTab = true;
    } // normalize url


    this.customData.options.url = (0,src_url/* normalizeUrl */.D5)(this.customData.options.url); // set href if not set

    if (isAnkerHTMLElement && (!el.href || !el.getAttribute("href")) && this.customData.options.url) {
      el.setAttribute("href", this.customData.options.url);
      el.href = this.customData.options.url;
    }

    if (!this.customData.options.newTab) {
      this.customData.prefetch.initBinder(el, this.customData.options.url);
    } // this.customData.checkURL.call(this, this.customData.options.url);

  },
  unbind: function unbind(el) {
    this.customData.prefetch.deInitBinder(el, this.customData.options.url);
    el.removeEventListener("click", this.customData.onClick.bind(this));
  }
};
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/route-class-star.binder.ts


var routeClassStarBinder = {
  name: "route-class-*",
  bind: function bind()
  /*el: HTMLUnknownElement*/
  {
    this.customData = {
      dispatcher: new src.EventDispatcher("main")
    };
  },

  /**
   * Tests the url with the current location, if the url is equal to the current location this element gets the `[classname]` class
   * @param el Binder HTML Element
   * @param url Url to compare with the current location
   */
  routine: function routine(el, url) {
    var className = this.args[0].toString() || "active";
    var isAnkerHTMLElement = el.tagName === "A";

    if (!url && isAnkerHTMLElement) {
      var href = el.getAttribute("href");

      if (href) {
        url = href;
      }
    }

    var onUrlChange = function onUrlChange(urlToCheck) {
      if (urlToCheck) {
        if ((0,src_url/* onRoute */.k9)(urlToCheck)) {
          el.classList.add(className); // check if element is radio input

          if (el.getAttribute("type") === "radio") {
            el.checked = true;
          }

          return true;
        } else {
          el.classList.remove(className); // uncheck if element is radio input

          if (el.getAttribute("type") === "radio") {
            el.checked = false;
          }
        }
      }

      return false;
    };

    this.customData.dispatcher.on("newPageReady", function () {
      return onUrlChange(url);
    });
    onUrlChange(url);
  },
  unbind: function unbind()
  /*el: HTMLUnknownElement*/
  {// console.warn('routeClassStarBinder routine', el);
  }
};
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/parent-route-class-star.binder.ts


var parentRouteClassStarBinder = {
  name: "parent-route-class-*",
  bind: function bind()
  /*el: HTMLUnknownElement*/
  {
    this.customData = {
      dispatcher: new src.EventDispatcher("main")
    };
  },

  /**
   * Tests the url with the current location, if the current location starts with the url this element gets the `[classname]` class
   * @param el Binder HTML Element
   * @param url Url to compare with the current location
   */
  routine: function routine(el, url) {
    var className = this.args[0].toString() || "active";
    var isAnkerHTMLElement = el.tagName === "A";

    if (!url && isAnkerHTMLElement) {
      var href = el.getAttribute("href");

      if (href) {
        url = href;
      }
    }

    var onUrlChange = function onUrlChange(urlToCheck) {
      if (urlToCheck) {
        if ((0,src_url/* onParentRoute */.UZ)(urlToCheck)) {
          el.classList.add(className); // check if element is radio input

          if (el.getAttribute("type") === "radio") {
            el.checked = true;
          }

          return true;
        } else {
          el.classList.remove(className); // uncheck if element is radio input

          if (el.getAttribute("type") === "radio") {
            el.checked = false;
          }
        }
      }

      return false;
    };

    this.customData.dispatcher.on("newPageReady", function () {
      return onUrlChange(url);
    });
    onUrlChange(url);
  },
  unbind: function unbind()
  /*el: HTMLUnknownElement*/
  {// console.warn('routeClassStarBinder routine', el);
  }
};
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/route-back-on-star.binder.ts
var goBack = function goBack() {
  window.history.back();
};
/**
 * Calls `window.history.back()` an event.
 */

var routeBackOnStarBinder = {
  name: "route-back-on-*",
  priority: 3000,
  bind: function bind()
  /*el: HTMLElement*/
  {// noting
  },
  unbind: function unbind(el) {
    el.removeEventListener(this.args[0], goBack);
  },
  routine: function routine(el)
  /*, options: any*/
  {
    if (this.args === null) {
      throw new Error("args is null");
    } // const eventName = this.args[0] as string;


    el.removeEventListener(this.args[0], goBack);
    el.addEventListener(this.args[0], goBack);
  }
};
// CONCATENATED MODULE: ../../riba/packages/router/src/binders/index.ts







/***/ }),

/***/ 264:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "LoadScriptComponent": () => /* reexport */ LoadScriptComponent
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(7857);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// CONCATENATED MODULE: ../../riba/packages/router/src/components/load-script/load-script.component.ts











function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var LoadScriptComponent = /*#__PURE__*/function (_Component) {
  inherits_default()(LoadScriptComponent, _Component);

  var _super = _createSuper(LoadScriptComponent);

  createClass_default()(LoadScriptComponent, null, [{
    key: "observedAttributes",
    get: function get() {
      return ["src", "id", "async", "defer"];
    }
  }]);

  function LoadScriptComponent(element) {
    var _this;

    classCallCheck_default()(this, LoadScriptComponent);

    _this = _super.call(this, element);

    defineProperty_default()(assertThisInitialized_default()(_this), "autobind", false);

    defineProperty_default()(assertThisInitialized_default()(_this), "scope", {
      src: "",
      id: "",
      async: true,
      defer: true
    });

    return _this;
  }

  createClass_default()(LoadScriptComponent, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      get_default()(getPrototypeOf_default()(LoadScriptComponent.prototype), "connectedCallback", this).call(this);

      get_default()(getPrototypeOf_default()(LoadScriptComponent.prototype), "init", this).call(this, LoadScriptComponent.observedAttributes);
    }
  }, {
    key: "onReady",
    value: function () {
      var _onReady = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return get_default()(getPrototypeOf_default()(LoadScriptComponent.prototype), "onReady", this).call(this);

              case 2:
                if (!this.scope.id) {
                  this.scope.id = (0,dom/* getUID */.Kr)("script-");
                }

                (0,dom/* loadScript */.ve)(this.scope.src, this.scope.id, this.scope.async);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function onReady() {
        return _onReady.apply(this, arguments);
      }

      return onReady;
    }()
  }, {
    key: "requiredAttributes",
    value: function requiredAttributes() {
      return ["src"];
    }
  }, {
    key: "template",
    value: function template() {
      return null;
    }
  }]);

  return LoadScriptComponent;
}(src.Component);

defineProperty_default()(LoadScriptComponent, "tagName", "load-script");
// CONCATENATED MODULE: ../../riba/packages/router/src/components/index.ts


/***/ }),

/***/ 3289:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "routerModule": () => /* reexport safe */ _router_module__WEBPACK_IMPORTED_MODULE_5__.e
/* harmony export */ });
/* harmony import */ var _ribajs_history__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(681);
/* harmony reexport (checked) */ if(__webpack_require__.o(_ribajs_history__WEBPACK_IMPORTED_MODULE_0__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _ribajs_history__WEBPACK_IMPORTED_MODULE_0__.routerModule; } });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(340);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(264);
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3542);
/* harmony reexport (checked) */ if(__webpack_require__.o(_interfaces__WEBPACK_IMPORTED_MODULE_3__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _interfaces__WEBPACK_IMPORTED_MODULE_3__.routerModule; } });
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1148);
/* harmony import */ var _router_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(9241);








/***/ }),

/***/ 3542:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _pjax_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4006);
/* harmony import */ var _pjax_options__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pjax_options__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_pjax_options__WEBPACK_IMPORTED_MODULE_0__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _pjax_options__WEBPACK_IMPORTED_MODULE_0__.routerModule; } });
/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3024);
/* harmony import */ var _response__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_response__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_response__WEBPACK_IMPORTED_MODULE_1__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _response__WEBPACK_IMPORTED_MODULE_1__.routerModule; } });
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6832);
/* harmony import */ var _transition__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_transition__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_transition__WEBPACK_IMPORTED_MODULE_2__, "routerModule")) __webpack_require__.d(__webpack_exports__, { "routerModule": function() { return _transition__WEBPACK_IMPORTED_MODULE_2__.routerModule; } });




/***/ }),

/***/ 4006:
/***/ (() => {



/***/ }),

/***/ 3024:
/***/ (() => {



/***/ }),

/***/ 6832:
/***/ (() => {



/***/ }),

/***/ 9241:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "e": () => /* binding */ routerModule
/* harmony export */ });
/* harmony import */ var _binders__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(340);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(264);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1148);



var routerModule = {
  binders: _binders__WEBPACK_IMPORTED_MODULE_0__,
  components: _components__WEBPACK_IMPORTED_MODULE_1__,
  services: _services__WEBPACK_IMPORTED_MODULE_2__,
  formatters: {}
};


/***/ }),

/***/ 1148:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "BaseTransition": () => /* reexport */ BaseTransition,
  "BaseView": () => /* reexport */ BaseView,
  "CustomTransition": () => /* reexport */ CustomTransition,
  "Dom": () => /* reexport */ Dom,
  "HideShowTransition": () => /* reexport */ HideShowTransition,
  "Pjax": () => /* reexport */ Pjax,
  "Prefetch": () => /* reexport */ Prefetch
});

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(8656);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(1571);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(6648);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(5415);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(8097);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ../../riba/packages/utils/src/control.ts
var control = __webpack_require__(2416);
// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5011);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// CONCATENATED MODULE: ../../riba/packages/router/src/services/Transition/BaseTransition.ts





/**
 * BaseTransition to extend
 */
var BaseTransition = /*#__PURE__*/function () {
  // TODO type
  function BaseTransition() {
    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "replace";

    classCallCheck_default()(this, BaseTransition);

    defineProperty_default()(this, "oldContainer", void 0);

    defineProperty_default()(this, "newContainer", void 0);

    defineProperty_default()(this, "newContainerLoading", void 0);

    defineProperty_default()(this, "deferred", void 0);

    defineProperty_default()(this, "action", void 0);

    this.action = action;
  }
  /**
   * This function is called from Pjax module to initialize
   * the transition.
   *
   */


  createClass_default()(BaseTransition, [{
    key: "init",
    value: function init(oldContainer, newContainer) {
      var _this = this;

      this.oldContainer = oldContainer;
      this.deferred = (0,control/* deferred */.gX)();
      var newContainerReady = (0,control/* deferred */.gX)();
      this.newContainerLoading = newContainerReady.promise;
      this.start();
      newContainer.then(function (_newContainer) {
        _this.newContainer = _newContainer;
        newContainerReady.resolve();
      });
      return this.deferred.promise;
    }
    /**
     * This function needs to be called as soon the Transition is finished
     */

  }, {
    key: "done",
    value: function done() {
      // this.oldContainer[0].parentNode.removeChild(this.oldContainer[]);
      if (!this.oldContainer) {
        throw new Error("Can't remove old container");
      }

      if (this.action === "replace") {
        this.oldContainer.remove();
      } // this.newContainer.style.visibility = 'visible';


      if (!this.newContainer) {
        throw new Error("Can't show new container");
      }

      this.newContainer.style.visibility = "visible";
      this.deferred.resolve();
    }
    /**
     * Constructor for your Transition
     */

  }]);

  return BaseTransition;
}();
// CONCATENATED MODULE: ../../riba/packages/router/src/services/Transition/CustomTransition.ts






function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }




/**
 * Basic Transition object, wait for the new Container to be ready,
 * scroll top, and finish the transition (removing the old container and displaying the new one)
 *
 * @private
 */
var CustomTransition = /*#__PURE__*/function (_BaseTransition) {
  inherits_default()(CustomTransition, _BaseTransition);

  var _super = _createSuper(CustomTransition);

  function CustomTransition() {
    classCallCheck_default()(this, CustomTransition);

    return _super.apply(this, arguments);
  }

  createClass_default()(CustomTransition, [{
    key: "init",
    value: function init(oldContainer, newContainer) {
      var _this = this;

      this.oldContainer = oldContainer;
      this.deferred = (0,control/* deferred */.gX)();
      var newContainerReady = (0,control/* deferred */.gX)();
      this.newContainerLoading = newContainerReady.promise;
      this.start();
      newContainer.then(function (_newContainer) {
        _this.newContainer = _newContainer;
        newContainerReady.resolve();
      });
      return this.deferred.promise;
    }
  }, {
    key: "start",
    value: function start() {
      if (!this.newContainerLoading) {
        throw new Error("this.newContainerLoading is not set");
      }

      this.newContainerLoading.then(this.finish.bind(this));
    }
  }, {
    key: "finish",
    value: function finish()
    /*container: HTMLElement*/
    {
      document.body.scrollTop = 0;
      this.done();
    }
  }]);

  return CustomTransition;
}(BaseTransition);


// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(3317);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// CONCATENATED MODULE: ../../riba/packages/router/src/services/Transition/HideShowTransition.ts








function HideShowTransition_createSuper(Derived) { var hasNativeReflectConstruct = HideShowTransition_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }

function HideShowTransition_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



/**
 * Basic Transition object, wait for the new Container to be ready,
 * scroll top, and finish the transition (removing the old container and displaying the new one)
 *
 * @private
 */
var HideShowTransition = /*#__PURE__*/function (_BaseTransition) {
  inherits_default()(HideShowTransition, _BaseTransition);

  var _super = HideShowTransition_createSuper(HideShowTransition);

  function HideShowTransition() {
    var _this;

    var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "replace";
    var scrollToTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    classCallCheck_default()(this, HideShowTransition);

    _this = _super.call(this, action);

    defineProperty_default()(assertThisInitialized_default()(_this), "action", void 0);

    defineProperty_default()(assertThisInitialized_default()(_this), "scrollToTop", void 0);

    _this.action = action;
    _this.scrollToTop = scrollToTop;
    return _this;
  }

  createClass_default()(HideShowTransition, [{
    key: "doScrollToTop",
    value: function doScrollToTop() {
      return new Promise(function (resolve) {
        resolve(window.scrollTo({
          top: 0,
          behavior: "smooth"
        }));
      });
    }
  }, {
    key: "start",
    value: function start() {
      if (!this.newContainerLoading) {
        throw new Error("this.newContainerLoading is not set");
      }

      if (this.scrollToTop) {
        this.doScrollToTop();
      }

      this.newContainerLoading.then(this.finish.bind(this));
    }
  }, {
    key: "finish",
    value: function finish() {
      this.done();
    }
  }]);

  return HideShowTransition;
}(BaseTransition);
// CONCATENATED MODULE: ../../riba/packages/router/src/services/Transition/index.ts



// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2943);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ../../riba/packages/core/src/index.ts
var src = __webpack_require__(569);
// EXTERNAL MODULE: ../../riba/packages/utils/src/type.ts
var type = __webpack_require__(8310);
// CONCATENATED MODULE: ../../riba/packages/router/src/services/View.ts





/**
 * BaseView to be extended
 */

var BaseView = /*#__PURE__*/function () {
  function BaseView() {
    classCallCheck_default()(this, BaseView);

    defineProperty_default()(this, "namespace", void 0);

    defineProperty_default()(this, "container", void 0);

    defineProperty_default()(this, "dispatcher", new src.EventDispatcher());
  }

  createClass_default()(BaseView, [{
    key: "extend",

    /**
     * Helper to extend the object
     */
    value: function extend(obj) {
      return (0,type/* extend */.l7)(false, this, obj);
    }
    /**
     * Init the view.
     * P.S. Is suggested to init the view before starting Barba.Pjax.start(),
     * in this way .onEnter() and .onEnterCompleted() will be fired for the current
     * container when the page is loaded.
     */

  }, {
    key: "init",
    value: function init() {
      var _this = this;

      this.dispatcher.on("initStateChange", function (viewId, newStatus, oldStatus) {
        if (oldStatus && oldStatus.namespace === _this.namespace) {
          _this.onLeave();
        }
      });
      this.dispatcher.on("newPageReady", function (viewId, newStatus, oldStatus, container)
      /*, html: string, isInit: boolean*/
      {
        _this.container = container;

        if (newStatus.namespace === _this.namespace) {
          _this.onEnter();
        }
      });
      this.dispatcher.on("transitionCompleted", function (viewId, newStatus, oldStatus) {
        if (newStatus.namespace === _this.namespace) {
          _this.onEnterCompleted();
        }

        if (oldStatus && oldStatus.namespace === _this.namespace) {
          _this.onLeaveCompleted();
        }
      });
    }
    /**
     * This function will be fired when the container
     * is ready and attached to the DOM.
     */

  }]);

  return BaseView;
}();


// EXTERNAL MODULE: ./.yarn/cache/@babel-runtime-npm-7.11.2-f2cfabd212-1.zip/node_modules/@babel/runtime/helpers/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(8368);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);

// CONCATENATED MODULE: ../../riba/packages/router/src/services/Pjax/Dom.ts



/**
 * Object that is going to deal with DOM parsing/manipulation
 * TODO move to @ribajs/core dom utils
 */
var Dom = /*#__PURE__*/function () {
  function Dom() {
    classCallCheck_default()(this, Dom);
  }

  createClass_default()(Dom, null, [{
    key: "getPrefetchLinkElements",
    value: function getPrefetchLinkElements(content) {
      // router-preload is a custom preloader
      return content.querySelectorAll('link[href][rel="dns-prefetch"], link[href][rel="preconnect"], link[href][rel="prefetch"], link[href][rel="subresource"], link[href][rel="preload"], link[href][rel="router-preload"]');
    }
  }, {
    key: "parseTitle",
    value: function parseTitle(content) {
      var title = ""; // title = Dom.findHTMLTagContent('title', template.innerHTML) || '';

      var titleElement = content.querySelector("title");

      if (titleElement && titleElement.innerText) {
        title = titleElement.innerText;
      }

      return title;
    }
    /**
     * Parse the responseText obtained from the fetch call
     * @see https://stackoverflow.com/a/41038197/1465919
     */

  }, {
    key: "parseResponse",
    value: function parseResponse(responseText, parseTitle, containerSelector) {
      var prefetchLinks = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
      var title = "";
      var prefetchLinkElements = [];
      var template = document.createElement("template");
      template.innerHTML = responseText;

      if (parseTitle) {
        title = this.parseTitle(template.content);
      }

      if (prefetchLinks) {
        prefetchLinkElements = this.getPrefetchLinkElements(template.content);
      }

      var container = this.getContainer(template, containerSelector);
      return {
        container: container,
        title: title,
        prefetchLinks: prefetchLinkElements
      };
    }
    /**
     * Use this method only on the first page load
     */

  }, {
    key: "parseInitial",
    value: function parseInitial(parseTitle, containerSelector) {
      var prefetchLinks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var title = "";
      var prefetchLinkElements = [];
      var template = document.createElement("template");
      template.innerHTML = document.body.innerHTML;
      var container = this.getContainer(document, containerSelector);

      if (parseTitle) {
        title = this.parseTitle(document);
      }

      if (prefetchLinks) {
        prefetchLinkElements = this.getPrefetchLinkElements(document);
      }

      return {
        container: container,
        title: title,
        prefetchLinks: prefetchLinkElements
      };
    }
    /**
     * Get the container on the current DOM,
     * or from an Element passed via argument
     */

  }, {
    key: "getContainer",
    value: function getContainer(element, containerSelector) {
      if (!element) {
        throw new Error("Barba.js: [getContainer] No element to get container from, maybe the DOM is not ready!");
      }

      var container = this.parseContainer(element, containerSelector);

      if (!container) {
        throw new Error("[DOM] No container found");
      }

      return container;
    }
    /**
     * Get the namespace of the container
     */

  }, {
    key: "getNamespace",
    value: function getNamespace(element) {
      if (element && element.dataset && element.dataset.namespace) {
        return element.dataset.namespace;
      } else {
        return null;
      }
    }
    /**
     * Put the container on the page
     */

  }, {
    key: "putContainer",
    value: function putContainer(element, wrapper) {
      element = element;
      element.style.visibility = "hidden";
      wrapper.appendChild(element);
    }
    /**
     * Get container selector
     */

  }, {
    key: "parseContainer",
    value: function parseContainer(newPage, containerSelector) {
      if (!newPage) {
        var error = new Error("New page not loaded!");
        console.error(error, newPage);
        throw error;
      }

      var result;

      if (newPage.content) {
        result = newPage.content.querySelector(containerSelector);
      } else {
        result = newPage.querySelector(containerSelector);
      }

      if (!result) {
        var _error = new Error("No container with selector \"".concat(containerSelector, "\" found!"));

        console.error(_error, newPage);
        throw _error;
      }

      return result;
    }
  }]);

  return Dom;
}();


// EXTERNAL MODULE: ../../riba/packages/utils/src/dom.ts
var dom = __webpack_require__(4783);
// EXTERNAL MODULE: ../../riba/packages/utils/src/url.ts
var src_url = __webpack_require__(3190);
// CONCATENATED MODULE: ../../riba/packages/router/src/constants.ts
/**
 * Class append to links which have caused an error
 */
var ROUTE_ERROR_CLASS = "router-error";
/**
 * Class name used to ignore links
 */

var IGNORE_CLASS_LINK = "no-barba";
/**
 * Class name used to ignore prefetch on links
 */

var IGNORE_CLASS_PREFETCH = "no-barba-prefetch";
// CONCATENATED MODULE: ../../riba/packages/router/src/services/Pjax/Prefetch.ts








/**
 * Prefetch
 */
var Prefetch = /*#__PURE__*/function () {
  createClass_default()(Prefetch, null, [{
    key: "getInstance",
    value: function getInstance() {
      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "main";
      var result = Prefetch.instances[id];

      if (!result) {
        console.warn("No Pjax instance with id ".concat(id, " found!"));
      }

      return result;
    }
    /** singleton instance */

  }]);

  /**
   * Creates an singleton instance of Prefetch.
   */
  function Prefetch(viewId) {
    classCallCheck_default()(this, Prefetch);

    this.viewId = viewId;

    if (Prefetch.instances[this.viewId]) {
      return Prefetch.instances[this.viewId];
    }

    Prefetch.instances[this.viewId] = this;
  }
  /**
   * Init the event listener on mouseover and touchstart for all links on the document
   * for the prefetch
   *
   */


  createClass_default()(Prefetch, [{
    key: "init",
    value: function init() {
      var autobindLinks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (!window.history.pushState) {
        return false;
      }

      if (autobindLinks) {
        this.deInit();
        document.body.addEventListener("mouseover", this.onLinkEnterIntern.bind(this), {
          passive: true
        });
        document.body.addEventListener("touchstart", this.onLinkEnterIntern.bind(this), {
          passive: true
        });
      }
    }
  }, {
    key: "deInit",
    value: function deInit() {
      document.body.removeEventListener("mouseover", this.onLinkEnterIntern.bind(this));
      document.body.removeEventListener("touchstart", this.onLinkEnterIntern.bind(this));
    }
    /**
     * This method is used from the rv-route binder
     * @param el
     */

  }, {
    key: "initBinder",
    value: function initBinder(el, url) {
      if (!window.history.pushState) {
        return false;
      }

      this.deInitBinder(el, url);
      el.addEventListener("mouseover", this.onLinkEnter.bind(this, url, el), {
        passive: true
      });
      el.addEventListener("touchstart", this.onLinkEnter.bind(this, url, el), {
        passive: true
      });
    }
  }, {
    key: "deInitBinder",
    value: function deInitBinder(el, url) {
      el.removeEventListener("mouseover", this.onLinkEnter.bind(this, url, el));
      el.removeEventListener("touchstart", this.onLinkEnter.bind(this, url, el));
    }
  }, {
    key: "onLinkEnter",
    value: function onLinkEnter(url, el, evt) {
      if (el.classList && (el.classList.contains(IGNORE_CLASS_PREFETCH) || el.classList.contains(ROUTE_ERROR_CLASS))) {
        return;
      }

      url = (0,src_url/* normalizeUrl */.D5)(url);
      var preventCheck = Pjax.preventCheck(evt, el, url); // Check if the link is eligible for Pjax

      if (url && preventCheck) {
        var pjax = Pjax.getInstance(this.viewId);

        if (pjax) {
          pjax.loadResponseCached(url, false, false)["catch"](function (error) {
            el.classList.add(ROUTE_ERROR_CLASS);
            console.error(error);
          });
        } else {
          console.warn("No pjax instace for viewId \"".concat(this.viewId, "\" found!"));
          el.classList.add(ROUTE_ERROR_CLASS);
        }
      } else {
        if (!preventCheck) {// console.warn('preventCheck failed: ' + url, preventCheck);
        }
      }
    }
    /**
     * Callback for the mousehover/touchstart, please use the rv-route binder instead
     *
     */

  }, {
    key: "onLinkEnterIntern",
    value: function onLinkEnterIntern(evt) {
      var el = (0,dom/* getElementFromEvent */._f)(evt);

      if (!el) {
        throw new Error("HTML Element not set");
      }

      while (el && !Pjax.getHref(el)) {
        el = el.parentNode; // TODO testme
      }

      if (!el) {
        return;
      }

      if (el.nodeName !== "A") {
        return;
      }

      var href = Pjax.getHref(el); // Already managed by the rv-route binder

      if (el.classList.contains("route") || el.hasAttribute("rv-route")) {
        return;
      }

      if (!href) {
        console.warn("Url is not defined, you can't cache the link without the url. Please make shure your element has the href attribute or pass the url directly to this function.", el);
        return;
      }

      return this.onLinkEnter(href, el, evt);
    }
  }]);

  return Prefetch;
}();

defineProperty_default()(Prefetch, "instances", {});


// CONCATENATED MODULE: ../../riba/packages/cache/src/services/base-cache.service.ts




/**
 * BaseCache it's a simple static cache
 */
var BaseCache = /*#__PURE__*/function () {
  /**
   * The Object that keeps all the key value information
   */
  function BaseCache() {
    classCallCheck_default()(this, BaseCache);

    defineProperty_default()(this, "data", void 0);

    this.data = {};
  }
  /**
   * Set a key and value data, mainly Barba is going to save promises
   *
   */


  createClass_default()(BaseCache, [{
    key: "set",
    value: function set(key, val) {
      this.data[key] = val; // console.debug('SET key: ',key);

      return this.data[key];
    }
    /**
     * Retrieve the data using the key
     */

  }, {
    key: "get",
    value: function get(key) {
      // console.debug('GET key: ',key);
      return this.data[key];
    }
    /**
     * Flush the cache
     */

  }, {
    key: "reset",
    value: function reset() {
      this.data = {};
    }
  }]);

  return BaseCache;
}();


// CONCATENATED MODULE: ../../riba/packages/cache/src/services/index.ts

// CONCATENATED MODULE: ../../riba/packages/cache/src/index.ts

// EXTERNAL MODULE: ../../riba/packages/history/src/index.ts
var history_src = __webpack_require__(681);
// CONCATENATED MODULE: ../../riba/packages/router/src/services/Pjax/index.ts


















/**
 * Pjax is a static object with main function
 *
 * @borrows Dom as Dom
 */
var Pjax = /*#__PURE__*/function () {
  createClass_default()(Pjax, null, [{
    key: "getInstance",
    value: function getInstance() {
      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "main";
      var result = Pjax.instances[id];

      if (!result) {
        console.warn("No pjax instance for viewId \"".concat(id, "\" found!"));
      }

      return result;
    }
    /**
     * Determine if the link should be followed
     */

  }, {
    key: "preventCheckUrl",
    value: function preventCheckUrl(href) {
      /**
       * Create fake html element
       */
      var element = document.createElement("a");
      element.setAttribute("href", href);

      if (!element) {
        return false;
      }

      if (!href) {
        return false;
      } // Ignore case when a hash is being tacked on the current URL


      if (href.indexOf("#") > -1) {
        return false;
      } // In case you're trying to load the same page


      if ((0,src_url/* cleanLink */.Qu)(href) === (0,src_url/* cleanLink */.Qu)(location.href)) {
        return false;
      } // Check if it's the same domain


      if (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname) {
        return false;
      } // Check if the port is the same


      if ((0,src_url/* getPort */.EA)() !== (0,src_url/* getPort */.EA)(element.port)) {
        return false;
      }

      return true;
    }
    /**
     * Determine if the link should be followed
     */

  }, {
    key: "preventCheck",
    value: function preventCheck(evt, element, href) {
      if (!window.history.pushState) {
        return false;
      }

      if (!this.preventCheckUrl(href)) {
        return false;
      } // Middle click, cmd click, ctrl click or prefetch load event


      if (evt && evt.which && evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey) {
        return false;
      } // Ignore target with _blank target


      if (element.target && element.target === "_blank") {
        return false;
      } // Ignore case where there is download attribute


      if (element.getAttribute && typeof element.getAttribute("download") === "string") {
        return false;
      }

      if (element.classList.contains(IGNORE_CLASS_LINK)) {
        return false;
      }

      return true;
    }
    /**
     * Get the .href parameter out of an element
     * and handle special cases (like xlink:href)
     */

  }, {
    key: "getHref",
    value: function getHref(el) {
      if (!el) {
        return undefined;
      }

      if (el.getAttribute && typeof el.getAttribute("xlink:href") === "string") {
        return el.getAttribute("xlink:href") || undefined;
      }

      if (typeof el.href === "string" || el.hasAttribute && el.hasAttribute("href")) {
        var href = el.href || el.getAttribute("href");

        if (!href) {
          console.error("href attribute not found for element: ", el);
          throw new Error("href attribute not found!");
        }

        return href;
      }

      return undefined;
    }
  }]);

  /**
   * Creates an singleton instance of Pjax.
   */
  function Pjax(_ref) {
    var id = _ref.id,
        wrapper = _ref.wrapper,
        _ref$containerSelecto = _ref.containerSelector,
        containerSelector = _ref$containerSelecto === void 0 ? "[data-namespace]" : _ref$containerSelecto,
        _ref$listenAllLinks = _ref.listenAllLinks,
        listenAllLinks = _ref$listenAllLinks === void 0 ? false : _ref$listenAllLinks,
        _ref$listenPopstate = _ref.listenPopstate,
        listenPopstate = _ref$listenPopstate === void 0 ? true : _ref$listenPopstate,
        _ref$transition = _ref.transition,
        transition = _ref$transition === void 0 ? new HideShowTransition() : _ref$transition,
        _ref$parseTitle = _ref.parseTitle,
        parseTitle = _ref$parseTitle === void 0 ? true : _ref$parseTitle,
        _ref$changeBrowserUrl = _ref.changeBrowserUrl,
        changeBrowserUrl = _ref$changeBrowserUrl === void 0 ? true : _ref$changeBrowserUrl,
        _ref$prefetchLinks = _ref.prefetchLinks,
        prefetchLinks = _ref$prefetchLinks === void 0 ? true : _ref$prefetchLinks;

    classCallCheck_default()(this, Pjax);

    defineProperty_default()(this, "history", new history_src/* HistoryManager */.E());

    defineProperty_default()(this, "cacheEnabled", true);

    defineProperty_default()(this, "transitionProgress", false);

    defineProperty_default()(this, "listenAllLinks", void 0);

    defineProperty_default()(this, "listenPopstate", void 0);

    defineProperty_default()(this, "parseTitle", void 0);

    defineProperty_default()(this, "changeBrowserUrl", void 0);

    defineProperty_default()(this, "dispatcher", void 0);

    defineProperty_default()(this, "transition", void 0);

    defineProperty_default()(this, "wrapper", void 0);

    defineProperty_default()(this, "viewId", "main");

    defineProperty_default()(this, "containerSelector", void 0);

    defineProperty_default()(this, "prefetchLinks", void 0);

    if (id) {
      this.viewId = id;
    }

    var instance = this;
    this.dispatcher = new src.EventDispatcher(this.viewId);
    this.listenAllLinks = listenAllLinks;
    this.listenPopstate = listenPopstate;
    this.parseTitle = parseTitle;
    this.changeBrowserUrl = changeBrowserUrl;
    this.containerSelector = containerSelector;
    this.prefetchLinks = prefetchLinks;

    if (Pjax.instances[this.viewId]) {
      instance = Pjax.instances[this.viewId];
    }

    instance.transition = instance.transition || transition;
    instance.wrapper = instance.wrapper || wrapper;
    instance.containerSelector = instance.containerSelector || containerSelector;
    instance.listenAllLinks = (0,type/* isBoolean */.jn)(instance.listenAllLinks) ? instance.listenAllLinks : listenAllLinks;
    instance.listenPopstate = (0,type/* isBoolean */.jn)(instance.listenPopstate) ? instance.listenPopstate : listenPopstate;
    instance.parseTitle = (0,type/* isBoolean */.jn)(instance.parseTitle) ? instance.parseTitle : parseTitle;
    instance.changeBrowserUrl = (0,type/* isBoolean */.jn)(instance.changeBrowserUrl) ? instance.changeBrowserUrl : changeBrowserUrl;
    instance.prefetchLinks = (0,type/* isBoolean */.jn)(instance.prefetchLinks) ? instance.prefetchLinks : prefetchLinks;

    if (instance.wrapper) {
      instance.wrapper.setAttribute("aria-live", "polite");
    }

    Pjax.instances[this.viewId] = instance;
    return Pjax.instances[this.viewId];
  }
  /**
   * Function to be called to start Pjax
   */


  createClass_default()(Pjax, [{
    key: "start",
    value: function start() {
      if (this.wrapper) {
        this.init(this.wrapper, this.listenAllLinks, this.listenPopstate);
      } else {
        console.error("Can't init pjax without wrapper");
      }
    }
    /**
     * Return the currentURL cleaned
     */

  }, {
    key: "getCurrentUrl",
    value: function getCurrentUrl() {
      return (0,src_url/* cleanLink */.Qu)((0,src_url/* getUrl */.Gr)());
    }
    /**
     * Change the URL with pushstate and trigger the state change
     */

  }, {
    key: "goTo",
    value: function goTo(url) {
      var newTab = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (newTab) {
        var win = window.open(url, "_blank");

        if (win) {
          return win.focus();
        }

        return false;
      }

      if (url.indexOf("http") !== 0) {
        if (this.changeBrowserUrl) {
          window.history.pushState(null, "", url);
        }

        return this.onStateChange(undefined, url);
      } // fallback


      this.forceGoTo(url);
    }
    /**
     * Return a transition object
     */

  }, {
    key: "getTransition",
    value: function getTransition() {
      // User customizable
      return this.transition || new HideShowTransition();
    }
    /**
     * Appends a prefetch link to the head and caches the result
     */

  }, {
    key: "prefetchLinkElement",
    value: function prefetchLinkElement(linkElement, head) {
      var rel = linkElement.getAttribute("rel");
      var href = Pjax.getHref(linkElement);

      if (rel === "router-preload" && href && this.cacheEnabled && !linkElement.classList.contains(ROUTE_ERROR_CLASS)) {
        // normalize url, returns the relative url for internal urls and the full url for external urls
        href = (0,src_url/* normalizeUrl */.D5)(href);
        var follow = Pjax.preventCheckUrl(href);

        if (follow) {
          // TODO wait for idle because we do not want to block the user
          return this.loadResponseCached(href, true, false)["catch"](function (error) {
            linkElement.classList.add(ROUTE_ERROR_CLASS);
            console.error(error);
          });
        }
      } // Append The link elements to the head for native prefetching by the browser


      head.appendChild(linkElement);
    }
  }, {
    key: "removePrefetchLinks",
    value: function removePrefetchLinks(head) {
      var removePrefetchLinkElements = head.querySelectorAll('link[href][rel="dns-prefetch"], link[href][rel="preconnect"], link[href][rel="prefetch"], link[href][rel="subresource"], link[href][rel="preload"], link[href][rel="router-preload"]'); // Remove the old prefetch link elements

      removePrefetchLinkElements.forEach(function (linkElement) {
        if (linkElement && linkElement.parentNode) {
          linkElement.parentNode.removeChild(linkElement);
        }
      });
    }
    /**
     * Replaces the prefetch links in the head with the new one.
     * The custom link[href][rel="router-preload"] elements will be not readded to the head
     * because we preload them with javascript, the others are preloaded by the browser
     * because it has native support for them and for that they must exist in the head
     * @param prefetchLinks
     */

  }, {
    key: "replacePrefetchLinkElements",
    value: function replacePrefetchLinkElements(prefetchLinks) {
      var _this = this;

      var head = document.head || document.getElementsByTagName("head")[0];
      this.removePrefetchLinks(head);
      prefetchLinks.forEach(function (linkElement) {
        _this.prefetchLinkElement(linkElement, head);
      });
    }
    /**
     * Load an url, will start an fetch request or load the response from the cache and returns the container
     * Also puts the container to the DOM and sets the title (if this option is active)
     */

  }, {
    key: "loadCached",
    value: function () {
      var _loadCached = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(url) {
        var _this2 = this;

        var response;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                response = this.loadResponseCached(url, false, true);
                return _context.abrupt("return", response.then(function (_response) {
                  if (!_this2.wrapper) {
                    throw new Error("[Pjax] you need a wrapper!");
                  }

                  Dom.putContainer(_response.container, _this2.wrapper);

                  if (_this2.parseTitle === true && _response.title) {
                    document.title = _response.title;
                  }

                  if (_this2.prefetchLinks === true && _response.prefetchLinks) {
                    _this2.replacePrefetchLinkElements(_response.prefetchLinks);
                  }

                  return _response.container;
                })["catch"](function (error) {
                  console.error(error); // Something went wrong (timeout, 404, 505...)

                  _this2.forceGoTo(url);

                  throw error;
                }));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function loadCached(_x) {
        return _loadCached.apply(this, arguments);
      }

      return loadCached;
    }()
    /**
     * Load an url, will start an fetch request or load from the cache (and set it to the cache) and will return a `Response` object
     * @param url Url to get from cache or to make the request for
     * @param forceCache Foce to use the browser build in cache, for more information see `force-cache` on https://developer.mozilla.org/en-US/docs/Web/API/Request/cache
     * @param fallback If there is an error, make a normal browser request and reload the page you should not use this on prefetching urls
     */

  }, {
    key: "loadResponseCached",
    value: function () {
      var _loadResponseCached = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(url) {
        var _this3 = this;

        var forceCache,
            fallback,
            cachedResponse,
            options,
            response,
            _args2 = arguments;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                forceCache = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : false;
                fallback = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : true;

                if (!this.cacheEnabled) {
                  _context2.next = 6;
                  break;
                }

                cachedResponse = Pjax.cache.get(url);

                if (!(cachedResponse && cachedResponse.then)) {
                  _context2.next = 6;
                  break;
                }

                return _context2.abrupt("return", cachedResponse.then(function (response) {
                  // console.debug('cachedResponse', response);
                  return response;
                }));

              case 6:
                options = forceCache ? {
                  cache: "force-cache"
                } : {};
                response = src.HttpService.get(url, undefined, "html", {}, options).then(function (data) {
                  return Dom.parseResponse(data, _this3.parseTitle, _this3.containerSelector, _this3.prefetchLinks);
                })["catch"](function (error) {
                  console.error(error);

                  if (fallback) {
                    _this3.forceGoTo(url);
                  }

                  throw error;
                });

                if (this.cacheEnabled && response) {
                  Pjax.cache.set(url, response);
                } else {
                  Pjax.cache.reset();
                }

                return _context2.abrupt("return", response);

              case 10:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function loadResponseCached(_x2) {
        return _loadResponseCached.apply(this, arguments);
      }

      return loadResponseCached;
    }()
    /**
     * Attach the eventlisteners
     */

  }, {
    key: "bindEvents",
    value: function bindEvents(listenAllLinks, listenPopstate) {
      // you can also use the rv-router for this
      if (listenAllLinks) {
        document.addEventListener("click", this.onLinkClickIntern.bind(this));
      }

      if (listenPopstate) {
        window.addEventListener("popstate", this.onStateChange.bind(this));
      }
    }
    /**
     * Force the browser to go to a certain url
     */

  }, {
    key: "forceGoTo",
    value: function forceGoTo(url) {
      console.warn("forceGoTo", url);

      if (url && url.href) {
        window.location = url;
      }

      if (typeof url === "string") {
        window.location.href = url;
      }
    }
  }, {
    key: "onLinkClickIntern",
    value: function onLinkClickIntern(evt) {
      var el = (0,dom/* getElementFromEvent */._f)(evt);

      while (el && !Pjax.getHref(el)) {
        el = el.parentNode; // TODO testme
      }

      if (!el || el.nodeName !== "A") {
        return;
      }

      var href = Pjax.getHref(el); // Already managed by the rv-route binder

      if (el.classList.contains("route") || el.hasAttribute("rv-route")) {
        return;
      }

      if (!href) {
        throw new Error("Url is not defined, you can't cache the link without the url. Please make shure your element has the href attribute or pass the url directly to this function.");
      } // Already managed by the rv-route binder


      if (el.classList.contains("route") || el.hasAttribute("rv-route")) {
        return false;
      }

      return this.onLinkClick(evt, el, href);
    }
    /**
     * Callback called from click event
     */

  }, {
    key: "onLinkClick",
    value: function onLinkClick(evt, el, href) {
      // normalize url, returns the relative url for internal urls and the full url for external urls
      href = (0,src_url/* normalizeUrl */.D5)(href);

      if (!href) {
        throw new Error("href is falsy");
      }

      var follow = Pjax.preventCheck(evt, el, href);

      if (follow) {
        evt.stopPropagation();
        evt.preventDefault();
        this.dispatcher.trigger("linkClicked", el, evt);
        this.goTo(href);
      }
    }
    /**
     * Method called after a 'popstate' or from .goTo()
     */

  }, {
    key: "onStateChange",
    value: function onStateChange(event) {
      var newUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCurrentUrl();
      // normalize url, returns the relative url for internal urls and the full url for external urls
      newUrl = (0,src_url/* normalizeUrl */.D5)(newUrl);
      var oldUrl = (0,src_url/* normalizeUrl */.D5)(this.history.currentStatus().url);

      if (this.changeBrowserUrl && oldUrl === newUrl) {
        // console.debug('ignore');
        return false;
      }

      this.history.add(newUrl);
      var oldContainer = Dom.getContainer(document, this.containerSelector);
      var newContainer = this.loadCached(newUrl);
      var transition = this.getTransition();
      this.transitionProgress = true;
      this.dispatcher.trigger("initStateChange", this.viewId, this.history.currentStatus(), this.history.prevStatus());
      var transitionInstance = transition.init(oldContainer, newContainer);
      newContainer.then(this.onNewContainerLoaded.bind(this));
      transitionInstance.then(this.onTransitionEnd.bind(this));
    }
    /**
     * Function called as soon the new container is ready
     */

  }, {
    key: "onNewContainerLoaded",
    value: function onNewContainerLoaded(container) {
      var currentStatus = this.history.currentStatus();
      currentStatus.namespace = Dom.getNamespace(container);
      var dataset = (0,src.getDataset)(container);
      this.dispatcher.trigger("newPageReady", this.viewId, this.history.currentStatus(), this.history.prevStatus(), container, container.innerHTML, dataset, false // true if this is the first time newPageReady is tiggered / true on initialisation
      );
    }
    /**
     * Function called as soon the transition is finished
     */

  }, {
    key: "onTransitionEnd",
    value: function onTransitionEnd() {
      this.transitionProgress = false;
      this.dispatcher.trigger("transitionCompleted", this.viewId, this.history.currentStatus(), this.history.prevStatus());
    }
    /**
     * Init the events
     */

  }, {
    key: "init",
    value: function init(wrapper, listenAllLinks, listenPopstate) {
      var initalResponse = Dom.parseInitial(this.parseTitle, this.containerSelector, this.prefetchLinks);
      var url = window.location.pathname; // Reload the current site with pajax to cache the inital page

      if (this.cacheEnabled) {
        var currentUrl = (0,src_url/* normalizeUrl */.D5)(window.location.href);

        if (!Pjax.cache.get(url)) {
          this.loadResponseCached(currentUrl, false, false);
        }
      }

      this.replacePrefetchLinkElements(initalResponse.prefetchLinks);
      this.wrapper = wrapper;
      this.history.add(this.getCurrentUrl(), Dom.getNamespace(initalResponse.container)); // Fire for the current view.

      this.dispatcher.trigger("initStateChange", this.viewId, this.history.currentStatus());
      var dataset = (0,src.getDataset)(initalResponse.container);
      this.dispatcher.trigger("newPageReady", this.viewId, this.history.currentStatus(), {}, initalResponse.container, initalResponse.container.innerHTML, dataset, true // true if this is the first time newPageReady is tiggered / true on initialisation
      );
      this.dispatcher.trigger("transitionCompleted", this.viewId, this.history.currentStatus());
      this.bindEvents(listenAllLinks, listenPopstate);
    }
  }]);

  return Pjax;
}();

defineProperty_default()(Pjax, "cache", new BaseCache());

defineProperty_default()(Pjax, "instances", {});


// CONCATENATED MODULE: ../../riba/packages/router/src/services/index.ts




/***/ }),

/***/ 2416:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DZ": () => /* binding */ times,
/* harmony export */   "gX": () => /* binding */ deferred,
/* harmony export */   "Ds": () => /* binding */ debounce,
/* harmony export */   "P2": () => /* binding */ throttle
/* harmony export */ });
var times = function times(n, cb) {
  for (var i = 0; i < n; i++) {
    cb();
  }
};
/**
 * Return a new "Deferred" object
 * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred
 *
 * @return
 */

var deferred = function deferred() {
  var obj = {};
  var prom = new Promise(function (resolve, reject) {
    obj.resolve = resolve;
    obj.reject = reject;
  });
  obj.promise = prom;
  return obj;
};
/**
 * The debounce function receives our function as a parameter
 * It is recommended to use this method for scroll events, but the event should still be passive
 * This method uses uses internaly the requestAnimationFrame method
 * @see https://css-tricks.com/styling-based-on-scroll-position/
 * @see https://www.telerik.com/blogs/debouncing-and-throttling-in-javascript
 */

var debounce = function debounce(fn) {
  // This holds the requestAnimationFrame reference, so we can cancel it if we wish
  var frame; // The debounce function returns a new function that can receive a variable number of arguments

  return function () {
    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {
      params[_key] = arguments[_key];
    }

    // If the frame variable has been defined, clear it now, and queue for next frame
    if (frame) {
      cancelAnimationFrame(frame);
    } // Queue our function call for the next frame


    frame = requestAnimationFrame(function () {
      // Call our function and pass any params we received
      fn.apply(void 0, params);
    });
  };
};
/**
 * The throttle function receives our function as a parameter
 * It is recommended to use this method for resize events
 * Throttling is a technique in which, no matter how many times the user fires the event, the attached function will be executed only once in a given time interval.
 * @see https://www.telerik.com/blogs/debouncing-and-throttling-in-javascript
 * @see https://gist.github.com/peduarte/969217eac456538789e8fac8f45143b4
 */

var throttle = function throttle(fn) {
  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
  var timerId = null;
  return function () {
    for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      params[_key2] = arguments[_key2];
    }

    if (timerId === null) {
      timerId = window.setTimeout(function () {
        fn.apply(void 0, params);
        timerId = null;
      }, wait);
    }
  };
};

/***/ }),

/***/ 4783:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Np": () => /* binding */ hasChildNodesTrim,
/* harmony export */   "d9": () => /* binding */ getInputValue,
/* harmony export */   "X5": () => /* binding */ scrollTo,
/* harmony export */   "_f": () => /* binding */ getElementFromEvent,
/* harmony export */   "cc": () => /* binding */ getViewportDimensions,
/* harmony export */   "Cd": () => /* binding */ ready,
/* harmony export */   "ve": () => /* binding */ loadScript,
/* harmony export */   "Kr": () => /* binding */ getUID
/* harmony export */ });
/* unused harmony exports MAX_UID, elementIsHidden, elementIsVisable, selectAll */
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2943);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8368);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);


var MAX_UID = 1000;
/**
 * Calls el.hasChildNodes but ignores empty strings, the default hasChildNodes would return ture on `<div> </div>`.
 * Very useful to check within a component if the component has set child elements to load or overwrite the component template
 * @param el
 */

var hasChildNodesTrim = function hasChildNodesTrim(el) {
  if (!el.hasChildNodes()) {
    return false;
  }

  var childNodes = el.childNodes;

  if (childNodes.length === 1 && childNodes[0].nodeType === 3) {
    var _childNodes$0$nodeVal;

    if (!childNodes[0].nodeValue || ((_childNodes$0$nodeVal = childNodes[0].nodeValue) === null || _childNodes$0$nodeVal === void 0 ? void 0 : _childNodes$0$nodeVal.trim()) === "") {
      return false;
    }
  }

  return true;
};
/**
 *
 */

var getInputValue = function getInputValue(el) {
  var results = [];

  if (el.type === "checkbox") {
    return el.checked;
  } else if (el.type === "select-multiple") {
    var options = el.options;

    for (var key in options) {
      if (options[key]) {
        var option = options[key];

        if (option.selected) {
          results.push(option.value);
        }
      }
    }

    return results;
  } else if (el.hasAttribute("contenteditable")) {
    return el.innerHTML; // TODO write test for contenteditable
  } else {
    return el.value;
  }
};
var elementIsHidden = function elementIsHidden(el) {
  return el.hasAttribute("hidden") || el.style.display === "none" || el.style.visibility === "hidden" || window.getComputedStyle(el).display === "none" || window.getComputedStyle(el).visibility === "hidden";
};
var elementIsVisable = function elementIsVisable(el) {
  return !elementIsHidden(el);
};
/**
 * Scrolls to an element by event and selector
 *
 * Attributes:
 *  * scroll-element="query-selector"
 * @see https://stackoverflow.com/a/31987330
 * @param element
 * @param to
 * @param duration
 */

var scrollTo = function scrollTo(to, offset, scrollElement) {
  var angle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "vertical";
  var behavior = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "smooth";

  if (!scrollElement) {
    scrollElement = window;
  }

  var top = 0;
  var left = 0;

  if (typeof scrollElement.pageYOffset === "number") {
    if (angle === "vertical") {
      top = to.getBoundingClientRect().top + scrollElement.pageYOffset - offset;
    } else {
      left = to.getBoundingClientRect().left + scrollElement.pageXOffset - offset;
    }
  } else {
    if (angle === "vertical") {
      top = to.offsetTop - offset;
    } else {
      left = to.offsetLeft - offset;
    }
  } // if is is window to scroll


  scrollElement.scroll({
    behavior: behavior,
    left: left,
    top: top
  });
};
var getElementFromEvent = function getElementFromEvent(event) {
  var el = event.target || event.currentTarget || event.relatedTarget || // JQuery event
  event.delegateTarget || event.fromElement;
  return el;
};
var getViewportDimensions = function getViewportDimensions() {
  var w = Math.max(document.documentElement ? document.documentElement.clientWidth : 0, window.innerWidth || 0);
  var h = Math.max(document.documentElement ? document.documentElement.clientHeight : 0, window.innerHeight || 0);
  return {
    h: h,
    w: w
  };
};
/**
 * Select all of an contenteditable or input element
 * @param element The element you want to select
 */

var selectAll = function selectAll(element) {
  // need setTimeout for safari
  setTimeout(function () {
    if (typeof element.selectionStart !== "undefined") {
      element.selectionStart = 0;
      element.selectionEnd = 999;
    }

    if (typeof element.select === "function") {
      element.select();
    }

    if (typeof element.setSelectionRange === "function") {
      element.setSelectionRange(0, 999);
    }

    if (window.getSelection) {
      var range = document.createRange();
      range.selectNodeContents(element);
      var selection = window.getSelection();

      if (selection) {
        selection.removeAllRanges();
        selection.addRange(range);
        selection.selectAllChildren(element);
      }
    }

    if (document.body.createTextRange) {
      var _range = document.body.createTextRange(); // Creates TextRange object


      _range.moveToElementText(element); // sets Range


      _range.select(); // make selection.

    }

    if (document.execCommand) {
      document.execCommand("selectAll", false, undefined);
    }
  }, 0);
};
/**
 * Cross-browser Document Ready check
 * @see https://www.competa.com/blog/cross-browser-document-ready-with-vanilla-javascript/
 * @param callback
 */

var ready = function ready(callback) {
  if (!callback || typeof callback !== "function") {
    return new Error("The callback is required!");
  }

  var checkReady = function checkReady() {
    if (document.readyState !== "loading") {
      callback();

      if (document.attachEvent) {
        document.detachEvent("onreadystatechange", checkReady);
      }

      document.removeEventListener("DOMContentLoaded", checkReady);
    }
  };

  if (document.attachEvent) {
    document.attachEvent("onreadystatechange", checkReady);
  }

  if (document.addEventListener) {
    document.addEventListener("DOMContentLoaded", checkReady);
  }

  checkReady();
};
var loadScript = /*#__PURE__*/function () {
  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(src, id) {
    var async,
        defer,
        script,
        _args = arguments;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            async = _args.length > 2 && _args[2] !== undefined ? _args[2] : true;
            defer = _args.length > 3 && _args[3] !== undefined ? _args[3] : true;
            _context.next = 4;
            return new Promise(function (resolve, reject) {
              var script = document.getElementById(id);

              if (script) {
                console.warn("script already loaded, do nothing.");

                if (script.hasAttribute("loaded")) {
                  return resolve(script);
                }
              } else {
                script = document.createElement("script");
                script.type = "text/javascript";
                script.id = id;
                script.src = src;

                if (async) {
                  script.async = true;
                }

                if (defer) {
                  script.defer = true;
                }

                document.getElementsByTagName("head")[0].appendChild(script);
              } // IE


              if (script.readyState) {
                script.onreadystatechange = function () {
                  if (script.readyState === "loaded" || script.readyState === "complete") {
                    var _script;

                    script.onreadystatechange = null;
                    (_script = script) === null || _script === void 0 ? void 0 : _script.setAttribute("loaded", "true");
                    resolve(script);
                  }
                };
              } // Other browsers


              script.addEventListener("load", function () {
                var _script2;

                (_script2 = script) === null || _script2 === void 0 ? void 0 : _script2.setAttribute("loaded", "true");
                resolve(script);
              });
              script.addEventListener("error", function () {
                var _script3, _console;

                var error = new Error("Error on load script " + ((_script3 = script) === null || _script3 === void 0 ? void 0 : _script3.src));
                console.error(error);

                (_console = console).error.apply(_console, arguments);

                reject(error);
              });
            });

          case 4:
            script = _context.sent;
            return _context.abrupt("return", script);

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function loadScript(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var getUID = function getUID(prefix) {
  do {
    prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
  } while (document.getElementById(prefix));

  return prefix;
};

/***/ }),

/***/ 332:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getElementFromEvent": () => /* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_1__._f,
/* harmony export */   "getUID": () => /* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_1__.Kr,
/* harmony export */   "classOf": () => /* reexport safe */ _type__WEBPACK_IMPORTED_MODULE_2__.eD
/* harmony export */ });
/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1619);
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "classOf")) __webpack_require__.d(__webpack_exports__, { "classOf": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.classOf; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "getElementFromEvent")) __webpack_require__.d(__webpack_exports__, { "getElementFromEvent": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.getElementFromEvent; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_types__WEBPACK_IMPORTED_MODULE_0__, "getUID")) __webpack_require__.d(__webpack_exports__, { "getUID": function() { return _types__WEBPACK_IMPORTED_MODULE_0__.getUID; } });
/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4783);
/* harmony import */ var _type__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8310);







/***/ }),

/***/ 8310:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "o8": () => /* binding */ isUndefined,
/* harmony export */   "$K": () => /* binding */ isDefined,
/* harmony export */   "Kn": () => /* binding */ isObject,
/* harmony export */   "KF": () => /* binding */ getString,
/* harmony export */   "Dx": () => /* binding */ getNumber,
/* harmony export */   "uO": () => /* binding */ parseJsonString,
/* harmony export */   "kJ": () => /* binding */ isArray,
/* harmony export */   "hj": () => /* binding */ isNumber,
/* harmony export */   "jn": () => /* binding */ isBoolean,
/* harmony export */   "HD": () => /* binding */ isString,
/* harmony export */   "XM": () => /* binding */ justDigits,
/* harmony export */   "Vt": () => /* binding */ stripHtml,
/* harmony export */   "eV": () => /* binding */ camelCase,
/* harmony export */   "l7": () => /* binding */ extend,
/* harmony export */   "zo": () => /* binding */ concat,
/* harmony export */   "d9": () => /* binding */ clone,
/* harmony export */   "eD": () => /* binding */ classOf
/* harmony export */ });
/* unused harmony exports couldBeJson, isJson, isFunction, stringHasNumber, stringHasOnlyNumbers, stringIsPhoneNumber, escapeHtml */
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9948);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);

var couldBeJson = function couldBeJson(str) {
  if (!str || typeof str !== "string") {
    return false;
  }

  str = str.trim();
  return str.charAt(0) === "{" || str.charAt(0) === "[";
};
/**
 * Test if string is a json string
 * @param str
 */

var isJson = function isJson(str) {
  if (!str) {
    return false;
  }

  try {
    var val = JSON.parse(str);
    return Array.isArray(val) || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(val) === "object" ? true : false;
  } catch (error) {
    return false;
  }
};
/**
 * Check if value is undefined
 */

var isUndefined = function isUndefined(value) {
  return typeof value === "undefined";
};
/**
 * Check if value is undefined
 */

var isDefined = function isDefined(value) {
  return !isUndefined(value);
};
/**
 * Check if type is Object
 * @see https://stackoverflow.com/a/4775737/1465919
 */

var isObject = function isObject(obj) {
  return isDefined(obj) && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(obj) === "object" && obj !== null;
};
/**
 * Parse value to string or return undefined if value is null
 * @param value
 */

var getString = function getString(value) {
  return (value === null || value === void 0 ? void 0 : value.toString) ? value.toString() : undefined;
};
/**
 * Parse value to number or return 0 if value is null or undefined
 * @param value
 */

var getNumber = function getNumber(value) {
  return value ? parseFloat(value) : undefined;
};
/**
 * Parses a json string with the special feature that json strings
 * can also havesingle quotations for defining the properties and values
 */

var parseJsonString = function parseJsonString(value) {
  var object = null;

  if (couldBeJson(value)) {
    if (isJson(value)) {
      object = JSON.parse(value) || null;
    } else {
      try {
        // Transform an invalid json string with single quotation to a valid json string with double quotation
        object = JSON.parse(value.replace(/'/g, '"')) || null;
      } catch (error) {
        console.warn(error);
      }
    }
  }

  return object;
};
/**
 * Check if value is a function
 */

var isFunction = function isFunction(value) {
  return typeof value === "function";
};
/**
 * Check if variable is an Array
 * @see https://stackoverflow.com/a/4775737/1465919
 */

var isArray = function isArray(value) {
  return Object.prototype.toString.call(value) === "[object Array]";
};
/**
 * Check whether variable is number or a string with numbers in JavaScript
 * @see https://stackoverflow.com/a/1421988/1465919
 */

var isNumber = function isNumber(value) {
  return !isNaN(parseFloat(value)) && !isNaN(value - 0);
};
/**
 * Check if type is Boolean
 * @see https://stackoverflow.com/a/28814615/1465919
 */

var isBoolean = function isBoolean(value) {
  return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(true);
};
/**
 * Check if value is a string
 */

var isString = function isString(value) {
  return isDefined(value) && typeof value === "string";
};
/**
 * Check if string contains a number
 */

var stringHasNumber = function stringHasNumber(value) {
  return isString(value) && /\d/.test(value);
};
/**
 * Check if string contains only numbers
 */

var stringHasOnlyNumbers = function stringHasOnlyNumbers(value) {
  return /^\d+$/.test(value);
};
/**
 * Check if string contains only numbers, +, - and ()
 */

var stringIsPhoneNumber = function stringIsPhoneNumber(value) {
  return /^[0-9 ()+-]+$/.test(value);
};
/**
 * Just get the digits of a string, useful to remove px pixel from css value
 *
 * @see http://stackoverflow.com/a/1100653/1465919
 */

var justDigits = function justDigits(str) {
  var num = str.replace(/[^-\d.]/g, "");

  if (!isNumber(num)) {
    return 0;
  } else {
    return Number(num);
  }
};
var escapeHtml = function escapeHtml(str) {
  var tagsToReplace = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;"
  };
  return str.replace(/[&<>]/g, function (tag) {
    return tagsToReplace[tag] || tag;
  });
};
var stripHtml = function stripHtml(html) {
  var tmp = document.createElement("DIV");
  tmp.innerHTML = html;
  return tmp.textContent || tmp.innerText || "";
};
/**
 * Returns a camel-cased version of the string. Used when translating an
 * element's attribute name into a property name for the component's scope.
 * @param string
 */

var camelCase = function camelCase(str) {
  return str.replace(/-([a-z0-9])/g, function (grouped) {
    return grouped[1].toUpperCase();
  });
};
/**
 * Merge the contents of two or more objects together into the first object.
 * @param deep If true, the merge becomes recursive (aka. deep copy).
 * @param target An object that will receive the new properties
 * @param objects The objects containing additional properties to merge in.
 * @see http://www.damirscorner.com/blog/posts/20180216-VariableNumberOfArgumentsInTypescript.html
 * Copied from here:
 * @see https://gomakethings.com/merging-objects-with-vanilla-javascript/
 */

var extend = function extend(deep) {
  var extended = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // Merge the object into the extended object
  var merge = function merge(obj) {
    for (var prop in obj) {
      // eslint-disable-next-line no-prototype-builtins
      if (obj.hasOwnProperty(prop)) {
        if (deep && Object.prototype.toString.call(obj[prop]) === "[object Object]") {
          // If we're doing a deep merge and the property is an object
          extended[prop] = extend(true, extended[prop], obj[prop]);
        } else {
          // Otherwise, do a regular merge
          extended[prop] = obj[prop];
        }
      }
    }
  }; // Loop through each object and conduct a merge


  for (var i = 0; i < (arguments.length <= 2 ? 0 : arguments.length - 2); i++) {
    merge(i + 2 < 2 || arguments.length <= i + 2 ? undefined : arguments[i + 2]);
  }

  return extended;
};
/**
 * Concat the contents of two objects together into the first object and return the concatenated object.
 * @param deep If true, the merge becomes recursive (aka. deep copy).
 * @param object1 An first object containing properties to concat.
 * @param object2 The second object containing properties to concat.
 *
 * Note: This is actually just the same as extend with only two objects. Redundant.
 */

var concat = function concat(deep, object1, object2) {
  object1 = extend(deep, object1 || {}, object2 || {});
  return object1;
};
/**
 * Clone an object or array
 * @param deep If true, the merge becomes recursive (aka. deep copy).
 * @param val The value(s) to clone
 */

var clone = function clone(deep, val) {
  if (isArray(val)) {
    if (deep) {
      return val.map(function (x) {
        return clone(true, x);
      });
    } else {
      return val.slice();
    }
  }

  if (isObject(val)) {
    return extend(deep, {}, val);
  }

  if (isString(val)) {
    return val.repeat(1);
  }

  return val;
}; // Get the class "that"

/**
 *
 * @param that
 */

var classOf = function classOf(that) {
  return that.constructor;
};
/**
 * TODO: Would like to do it with class parameter T for the parent class:
 *
   export function classOf<T = any>(that: T) {
     return that.constructor as typeof T;
   };
 *
 * but getting TypeScript error:
 * Property 'constructor' does not exist on type 'T'.
 */

/***/ }),

/***/ 8625:
/***/ (() => {



/***/ }),

/***/ 1619:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony import */ var _deferred__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8625);
/* harmony import */ var _deferred__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_deferred__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (checked) */ if(__webpack_require__.o(_deferred__WEBPACK_IMPORTED_MODULE_0__, "classOf")) __webpack_require__.d(__webpack_exports__, { "classOf": function() { return _deferred__WEBPACK_IMPORTED_MODULE_0__.classOf; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_deferred__WEBPACK_IMPORTED_MODULE_0__, "getElementFromEvent")) __webpack_require__.d(__webpack_exports__, { "getElementFromEvent": function() { return _deferred__WEBPACK_IMPORTED_MODULE_0__.getElementFromEvent; } });
/* harmony reexport (checked) */ if(__webpack_require__.o(_deferred__WEBPACK_IMPORTED_MODULE_0__, "getUID")) __webpack_require__.d(__webpack_exports__, { "getUID": function() { return _deferred__WEBPACK_IMPORTED_MODULE_0__.getUID; } });


/***/ }),

/***/ 3190:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "D5": () => /* binding */ normalizeUrl,
/* harmony export */   "Gr": () => /* binding */ getUrl,
/* harmony export */   "k9": () => /* binding */ onRoute,
/* harmony export */   "UZ": () => /* binding */ onParentRoute,
/* harmony export */   "Qu": () => /* binding */ cleanLink,
/* harmony export */   "EA": () => /* binding */ getPort,
/* harmony export */   "xf": () => /* binding */ isExternalUrl
/* harmony export */ });
/* unused harmony exports getUrlParameter, getLocation, isAbsoluteUrl, isInternalUrl, getHash, updateHash, removeHash */
/**
 * get param from hash
 */
var getUrlParameter = function getUrlParameter(name, url) {
  if (!url) {
    url = window.location.href;
  }

  name = name.replace(/[[\]]/g, "\\$&");
  var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)");
  var results = regex.exec(url);

  if (!results) {
    return null;
  }

  if (!results[2]) {
    return "";
  }

  return decodeURIComponent(results[2].replace(/\+/g, " "));
};
/**
 * get location object ofpath or address bar
 * @see http://stackoverflow.com/a/736970/1465919
 *
 * @example
 * var l = getLocation("http://example.com:3000/pathname/?search=test#hash");
 * =>
 * l.protocol; // => "http:"
 * l.host;     // => "example.com:3000"
 * l.hostname; // => "example.com"
 * l.port;     // => "3000"
 * l.pathname; // => "/pathname/"
 * l.hash;     // => "#hash"
 * l.search;   // => "?search=test"
 * l.origin;   // => "http://example.com:3000"
 */

var getLocation = function getLocation(url) {
  if (!url) {
    return window.location;
  }

  var l = document.createElement("a");
  l.href = url;
  return l;
};
/**
 * If the webapps url is https://mysupersite.org and the url is https://mysupersite.org/subpage?search=test
 * this method will return /subpage?search=test
 * If the url is https://anothersite.org/subpage?search=test this method will return https://anothersite.org/subpage?search=test
 * @param url
 */

var normalizeUrl = function normalizeUrl(url) {
  var checkLocation = getLocation(url);
  var hostname = getLocation().hostname;

  if (checkLocation.hostname === hostname) {
    return checkLocation.pathname + checkLocation.search;
  } else {
    return getUrl(url);
  }
};
/**
 * Return the current full url
 *
 * @return {string} currentUrl
 */

var getUrl = function getUrl(url) {
  var location = getLocation(url);
  return location.protocol + "//" + location.host + location.pathname + location.search;
};
/**
 * Check if we are on the route
 */

var onRoute = function onRoute(checkUrl) {
  if (checkUrl) {
    var location = getLocation();
    var pathname = location.pathname;
    var hostname = location.hostname;
    var checkLocation = getLocation(checkUrl);
    var checkPathname = checkLocation.pathname;
    var checkHostname = checkLocation.hostname;
    return hostname === checkHostname && pathname === checkPathname;
  }

  return false;
};
/**
 * Check if the current location url stats with a url or is equal
 */

var onParentRoute = function onParentRoute(checkUrl) {
  if (checkUrl) {
    var location = getLocation();
    var pathname = location.pathname;
    var hostname = location.hostname;
    var checkLocation = getLocation(checkUrl);
    var checkPathname = checkLocation.pathname;
    var checkHostname = checkLocation.hostname;
    return hostname === checkHostname && pathname.startsWith(checkPathname);
  }

  return false;
};
/**
 * Given an url, return it without the hash
 *
 * @param url
 * @return newCleanUrl
 */

var cleanLink = function cleanLink(url) {
  return url.replace(/#.*/, "");
};
/**
 * Return the port number normalized, eventually you can pass a string to be normalized.
 *
 * @param p
 * @return port
 */

var getPort = function getPort(p, url) {
  var location = getLocation(url);
  var port = typeof p !== "undefined" ? p : location.port;
  var protocol = location.protocol;

  if (port !== "") {
    return Number(port);
  }

  if (protocol === "http:") {
    return 80;
  }

  if (protocol === "https:") {
    return 443;
  }
};
/**
 * Test if url is absolute or relative
 * @see https://stackoverflow.com/a/19709846/1465919
 */

var isAbsoluteUrl = function isAbsoluteUrl(url) {
  if (!url) {
    return false;
  }

  var isProtokoll = new RegExp("^(?:[a-z]+:)?//", "i");
  var isAbsolute = isProtokoll.test(url) || url.startsWith("mailto:") || url.startsWith("tel:") || url.startsWith("fax:");
  return isAbsolute;
};
var isExternalUrl = function isExternalUrl(absoluteUrl) {
  if (isAbsoluteUrl(absoluteUrl)) {
    var location = getLocation();
    var host = location.protocol + "//" + location.hostname;
    var isExternal = true;

    if (absoluteUrl.startsWith(host)) {
      isExternal = false;
    }

    return isExternal;
  }

  return false;
};
var isInternalUrl = function isInternalUrl(url) {
  return !isExternalUrl(url);
};
/**
 * Get hash from address bar or url if set
 */

var getHash = function getHash(url) {
  return getLocation(url).hash;
};
/**
 * Change hash from address bar
 */

var updateHash = function updateHash(hash) {
  return window.location.hash = hash;
};
/**
 * Remove hash from address bar
 */

var removeHash = function removeHash() {
  return history.pushState("", document.title, window.location.pathname + window.location.search);
};

/***/ }),

/***/ 7441:
/***/ ((module) => {

// Module
var code = "<p> Hier kannst du nachverfolgen wie die App Bestellungen bemerkt um sie anschließend an ParcelLab weiterzuleiten. Der Sinn dieser Ansicht bestehst darin die App zu debuggen.<br/> Bearbeite beispielsweise eine Bestellung um den <code>order/update</code> Webhook auszulösen den du hier dann sehen wirst. Sobald ein beobachteter Webhook ausgelöst wurde, erscheint eine neue Karte links neben dieser Karte.<br/> Bitte beachte, dass es einige Minuten dauern kann bis der Webhook hier erscheint. </p>";
// Exports
module.exports = code;

/***/ }),

/***/ 8028:
/***/ ((module) => {

// Module
var code = "<p> Here you can see how the app notices orders and forwards them to ParcelLab. The purpose of this view is to debug the app.<br/> For example, you can edit an order to trigger the <code>order/update</code> webhook which you will then see here. Once a supported webhook has been triggered, a new card will appear to the left of this card.<br/> Please note that it may take a few seconds for the webhook to appear here. </p>";
// Exports
module.exports = code;

/***/ }),

/***/ 1920:
/***/ ((module) => {

// Module
var code = "<p> Unterstütze Webhooks um diese in deinem Theme zu empfangen sind: </p><ul> <li><code>order/create</code>,</li> <li><code>order/update</code>,</li> <li><code>order/delete</code> und</li> <li><code>app/uninstalled</code>.</li> </ul> Weitere Webhooks werden aus Sicherheitsbedenken - oder weil der Bedarf bisher nicht da war - nicht unterstüzt.<br> Außerdem werden nur veröffentlichte Produkt-Webhooks an das Theme weitergeleitet. <p></p> <p> Solltest du weitere Webhooks benötigen, scheibe uns einfach eine Mail und wir werden schauen ob wir diese für dich einbauen können. </p>";
// Exports
module.exports = code;

/***/ }),

/***/ 2195:
/***/ ((module) => {

// Module
var code = "<p> Supported webhook topics you can receive in your theme are: </p><ul> <li><code>order/create</code>,</li> <li><code>order/update</code>,</li> <li><code>order/delete</code> and</li> <li><code>app/uninstalled</code>.</li> </ul> Currently more webhooks are not supported for security reasons or because the need for it was not there yet. In addition, only webhooks of published products will be redirected to the theme. <p></p> <p> If you need more webhooks write us an email and we will see if we can support this webhook for you. </p>";
// Exports
module.exports = code;

/***/ }),

/***/ 8985:
/***/ ((module) => {

// Module
var code = "<div class=\"accordion\"> <div class=\"card\" rv-each-item=\"items\"> <button type=\"button\" class=\"btn btn-link card-header d-flex\" rv-on-click=\"toggle | args item %item%\" rv-aria-expanded=\"item.show\"> <span class=\"card-header-text mr-auto\" rv-html=\"item.title\"></span> <bs4-icon class=\"ml-auto\" rv-show=\"collapseIconSrc\" rv-src=\"collapseIconSrc\" rv-size=\"collapseIconSize\" rv-direction=\"item.iconDirection\"></bs4-icon> </button> <div class=\"collapse\" rv-data-index=\"%item%\"> <div class=\"card-body\" rv-template=\"item.content\"></div> </div> </div> </div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 1740:
/***/ ((module) => {

// Module
var code = "<ul class=\"list-unstyled list-contents list-contents-level-1\"> <li class=\"nav-item nav-item-level-1\" rv-each-anachor=\"anchors\"> <a class=\"nav-link p-0\" rv-href=\"anachor.href\" rv-html=\"anachor.title\" rv-scroll-to-on-click=\"anachor.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"anachor.childs | size | gt 0\" class=\"list-unstyled list-contents list-contents-level-2\"> <li class=\"nav-item nav-item-level-2\" rv-each-child=\"anachor.childs\"> <a class=\"nav-link p-0\" rv-href=\"child.href\" rv-html=\"child.title\" rv-scroll-to-on-click=\"child.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"child.childs | size | gt 0\" class=\"list-unstyled list-contents list-contents-level-3\"> <li class=\"nav-item nav-item-level-3\" rv-each-childchild=\"child.childs\"> <a class=\"nav-link p-0\" rv-href=\"childchild.href\" rv-html=\"childchild.title\" rv-scroll-to-on-click=\"childchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchild.childs | size | gt 0\" class=\"list-unstyled list-contents list-contents-level-4\"> <li class=\"nav-item nav-item-level-4\" rv-each-childchildchild=\"childchild.childs\"> <a class=\"nav-link p-0\" rv-href=\"childchildchild.href\" rv-html=\"childchildchild.title\" rv-scroll-to-on-click=\"childchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchildchild.childs | size | gt 0\" class=\"list-unstyled list-contents list-contents-level-5\"> <li class=\"nav-item nav-item-level-5\" rv-each-childchildchildchild=\"childchildchild.childs\"> <a class=\"nav-link p-0\" rv-href=\"childchildchildchild.href\" rv-html=\"childchildchildchild.title\" rv-scroll-to-on-click=\"childchildchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchildchildchild.childs | size | gt 0\" class=\"list-unstyled list-contents list-contents-level-6\"> <li class=\"nav-item nav-item-level-6\" rv-each-childchildchildchildchild=\"childchildchildchild.childs\"> <a class=\"nav-link p-0\" rv-href=\"childchildchildchildchild.href\" rv-html=\"childchildchildchildchild.title\" rv-scroll-to-on-click=\"childchildchildchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>";
// Exports
module.exports = code;

/***/ }),

/***/ 5038:
/***/ ((module) => {

// Module
var code = "<form> </form>";
// Exports
module.exports = code;

/***/ }),

/***/ 3292:
/***/ ((module) => {

// Module
var code = "<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" rv-add-class=\"modal.contextualClass | prepend 'modal-'\"> <div class=\"modal-dialog\"> <div class=\"modal-content\"> <div class=\"modal-header\" rv-show=\"modal.title\"> <h5 class=\"modal-title\" rv-template=\"modal.title\"></h5> <button type=\"button\" class=\"close\" aria-label=\"Close\" rv-on-click=\"dismiss\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"modal-body\"> <p rv-template=\"modal.message\"></p> </div> <div class=\"modal-footer\" rv-show=\"modal.buttons | size | gt 0\"> <div rv-each-button=\"modal.buttons\"> <button type=\"button\" class=\"btn\" rv-add-class=\"button.class\" rv-on-click=\"button.action\" rv-template=\"modal.label\"></button> </div> </div> </div> </div> </div>";
// Exports
module.exports = code;

/***/ }),

/***/ 2818:
/***/ ((module) => {

// Module
var code = "<div class=\"toast-container\"> <div aria-live=\"polite\" aria-atomic=\"true\" class=\"toast-item-container\" rv-add-class=\"positionClass\"> <div rv-each-toast=\"notifications\"> <div rv-if=\"toast.type | eq 'toast'\"> <bs4-toast-item rv-index=\"%toast%\" rv-parent rv-icon-url=\"iconUrl\" rv-co-toast=\"toast\"></bs4-toast-item> </div> </div> </div> </div> <div rv-each-modal=\"notifications\"> <div rv-if=\"modal.type | eq 'modal'\"> <bs4-modal-item rv-index=\"%modal%\" rv-parent rv-icon-url=\"iconUrl\" rv-co-modal=\"modal\"></bs4-modal-item> </div> </div>";
// Exports
module.exports = code;

/***/ }),

/***/ 507:
/***/ ((module) => {

// Module
var code = "<ul class=\"list-unstyled list-scrollspy list-scrollspy-level-1\"> <li class=\"nav-item nav-item-level-1\" rv-each-anachor=\"anchors\" rv-bs4-scrollspy-active=\"anachor.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link\" rv-href=\"anachor.href\" rv-html=\"anachor.title\" rv-scroll-to-on-click=\"anachor.href\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"anachor.childs | size | gt 0\" class=\"list-unstyled list-scrollspy list-scrollspy-level-2\"> <li class=\"nav-item nav-item-level-2\" rv-each-child=\"anachor.childs\" rv-bs4-scrollspy-active=\"child.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link\" rv-href=\"child.href\" rv-html=\"child.title\" rv-scroll-to-on-click=\"child.href\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"child.childs | size | gt 0\" class=\"list-unstyled list-scrollspy list-scrollspy-level-3\"> <li class=\"nav-item nav-item-level-3\" rv-each-childchild=\"child.childs\" rv-bs4-scrollspy-active=\"childchild.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link p-0\" rv-href=\"childchild.href\" rv-html=\"childchild.title\" rv-scroll-to-on-click=\"childchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchild.childs | size | gt 0\" class=\"list-unstyled list-scrollspy list-scrollspy-level-4\"> <li class=\"nav-item nav-item-level-4\" rv-each-childchildchild=\"childchild.childs\" rv-bs4-scrollspy-active=\"childchildchild.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link p-0\" rv-href=\"childchildchild.href\" rv-html=\"childchildchild.title\" rv-scroll-to-on-click=\"childchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchildchild.childs | size | gt 0\" class=\"list-unstyled list-scrollspy list-scrollspy-level-5\"> <li class=\"nav-item nav-item-level-5\" rv-each-childchildchildchild=\"childchildchild.childs\" rv-bs4-scrollspy-active=\"childchildchildchild.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link p-0\" rv-href=\"childchildchildchild.href\" rv-html=\"childchildchildchild.title\" rv-scroll-to-on-click=\"childchildchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> <ul rv-if=\"childchildchildchild.childs | size | gt 0\" class=\"list-unstyled list-scrollspy list-scrollspy-level-6\"> <li class=\"nav-item nav-item-level-6\" rv-each-childchildchildchildchild=\"childchildchildchild.childs\" rv-bs4-scrollspy-active=\"childchildchildchildchild.href\" rv-data-offset=\"offset\" rv-data-offset-bottom=\"offsetBottom\"> <a class=\"nav-link p-0\" rv-href=\"childchildchildchildchild.href\" rv-html=\"childchildchildchildchild.title\" rv-scroll-to-on-click=\"childchildchildchildchild.href\" rv-data-scroll-element=\"scrollElement\" rv-data-offset=\"scrollOffset\"></a> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>";
// Exports
module.exports = code;

/***/ }),

/***/ 9775:
/***/ ((module) => {

// Module
var code = "<div rv-add-class=\"'drop' | append dropdownDirection\"> <div class=\"dropdown-toggle dropdown-toggle-share\" rv-id=\"dropdownId\" rv-template=\"labelTemplate\"></div> <div class=\"dropdown-menu\" rv-aria-labelledby=\"dropdownId\"> <a rv-each-item=\"shareItems\" rv-show=\"item.available\" rv-download=\"item.type | eq 'download'\" rv-type=\"item.type\" target=\"_blank\" rv-on-click=\"shareOnService\" class=\"dropdown-item\" rv-href=\"item.url\" rv-html=\"item.label\"></a> </div> </div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 3210:
/***/ ((module) => {

// Module
var code = "<div class=\"share-label\" rv-on-click=\"share\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" rv-text=\"label\"></div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 3499:
/***/ ((module) => {

// Module
var code = "<button rv-show=\"controls\" class=\"btn btn-link slideshow-controls slideshow-control-prev\" rv-add-class=\"controlsPositionClass\" role=\"button\" data-slide=\"prev\" rv-on-click=\"prev\"> <bs4-icon rv-if=\"controlPrevIconSrc\" rv-src=\"controlPrevIconSrc\" direction=\"left\" size=\"24\"></bs4-icon> <span rv-hide=\"controlPrevIconSrc\" class=\"btn btn-link slideshow-control-fallback-prev-icon\" aria-hidden=\"true\"></span> <span class=\"sr-only\">Previous</span> </button> <button rv-show=\"controls\" class=\"btn btn-link slideshow-controls slideshow-control-next\" rv-add-class=\"controlsPositionClass\" role=\"button\" data-slide=\"next\" rv-on-click=\"next\"> <bs4-icon rv-if=\"controlNextIconSrc\" rv-src=\"controlNextIconSrc\" direction=\"right\" size=\"24\"></bs4-icon> <span rv-hide=\"controlNextIconSrc\" class=\"slideshow-control-fallback-next-icon\" aria-hidden=\"true\"></span> <span class=\"sr-only\">Next</span> </button> ";
// Exports
module.exports = code;

/***/ }),

/***/ 1896:
/***/ ((module) => {

// Module
var code = "<ol rv-if=\"indicators\" class=\"slideshow-indicators\" rv-add-class=\"indicatorsPositionClass\"> <li rv-each-slide=\"items\" rv-class-active=\"slide.active\" rv-on-click=\"goTo | args slide.index\"> <bs4-icon rv-hide=\"slide.active\" rv-src=\"indicatorInactiveIconSrc\" size=\"16\"></bs4-icon> <bs4-icon rv-show=\"slide.active\" rv-src=\"indicatorActiveIconSrc\" size=\"16\"></bs4-icon> </li> </ol> ";
// Exports
module.exports = code;

/***/ }),

/***/ 3948:
/***/ ((module) => {

// Module
var code = "<div class=\"slideshow-inner\"> <div rv-each-slide=\"items\" rv-class=\"slide.class\" rv-class-active=\"slide.active\" rv-id=\"'slide-' | append slide.handle\" rv-index=\"slide.index\" rv-html=\"slide.content\"></div> </div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 5747:
/***/ ((module) => {

// Module
var code = "<ul rv-scrollbar-draggable rv-aria-orientation=\"optionTabsAngle\" role=\"tablist\" class=\"nav nav-tabs flex-scrollbar-x-auto scrollbar-y-hidden\"> <li class=\"nav-item\" rv-each-tab=\"items\"> <button role=\"tab\" class=\"btn btn-link nav-link\" rv-class-active=\"tab.active\" rv-id=\"'tab-title-' | append tab.handle\" rv-aria-controls=\"'tab-content-' | append tab.handle\" rv-on-click=\"activate | args tab\" rv-html=\"tab.title\"></button> </li> </ul> <div class=\"tab-content\"> <div rv-each-tab=\"items\" role=\"tabpanel\" class=\"tab-pane\" rv-class-show=\"tab.active\" rv-class-active=\"tab.active\" rv-id=\"'tab-content-' | append tab.handle\" rv-aria-labelledby=\"'tab-title-' | append tab.handle\" rv-template=\"tab.content\"></div> </div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 5510:
/***/ ((module) => {

// Module
var code = "<div class=\"row\"> <div class=\"col-auto\"> <div class=\"nav flex-column nav-pills\" role=\"tablist\" rv-aria-orientation=\"optionTabsAngle\"> <div class=\"nav-item\" rv-each-tab=\"items\"> <button class=\"btn btn-link nav-link\" role=\"tab\" rv-class-active=\"tab.active\" rv-id=\"'tab-title-' | append tab.handle\" rv-aria-controls=\"'tab-content-' | append tab.handle\" rv-on-click=\"activate | args tab\" rv-html=\"tab.title\"></button> </div> </div> </div> <div class=\"col-auto\"> <div class=\"tab-content\"> <div rv-each-tab=\"items\" role=\"tabpanel\" class=\"tab-pane\" rv-class-show=\"tab.active\" rv-class-active=\"tab.active\" rv-id=\"'tab-content-' | append tab.handle\" rv-aria-labelledby=\"'tab-title-' | append tab.handle\" rv-template=\"tab.content\"></div> </div> </div> </div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 8419:
/***/ ((module) => {

// Module
var code = "<div class=\"toast my-1\" rv-add-class=\"toast.contextualClass | prepend 'toast-'\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"> <div class=\"toast-header\" rv-show=\"toast.title\"> <img id=\"toastImage\" rv-if=\"iconUrl\" rv-src=\"iconUrl\" class=\"rounded mr-2\" alt=\"toast icon\"> <strong class=\"mr-auto\" rv-template=\"toast.title\"></strong> <button type=\"button\" class=\"ml-2 mb-1 close\" rv-on-click=\"dismiss\" aria-label=\"Close\"> <span aria-hidden=\"true\">&times;</span> </button> </div> <div class=\"toast-body\" rv-template=\"toast.message\"></div> </div>";
// Exports
module.exports = code;

/***/ }),

/***/ 9389:
/***/ ((module) => {

// Module
var code = "<div class=\"share-label\" rv-on-click=\"share\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\" rv-i18n-text=\"labelI18n\"></div> ";
// Exports
module.exports = code;

/***/ }),

/***/ 8463:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;;
    var locals_for_with = (locals || {});
    
    (function (type) {
      pug_html = pug_html + "\u003Csection class=\"row\"\u003E\u003Cdiv class=\"col-12 col-md-4\"\u003E\u003Ch2 class=\"my-3\" rv-i18n-text=\"locales.title\"\u003E\u003C\u002Fh2\u003E\u003Cp class=\"text-muted\" rv-i18n-text=\"locales.info\"\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"col-12 col-md-8\"\u003E\u003Cdiv class=\"card\"\u003E\u003Cdiv class=\"card-body\" rv-show=\"isConnected\"\u003E\u003Cdiv class=\"card-text\"\u003E\u003Cp class=\"d-flex align-items-center\"\u003E\u003Cbs4-icon class=\"mr-3\" rv-src=\"avatarUrl\" size=\"50\"\u003E\u003C\u002Fbs4-icon\u003E";
if (type === 'shopify') {
pug_html = pug_html + "{account.shop.name}";
}
else {
pug_html = pug_html + "{account.displayName} ({account.facebookID})";
}
pug_html = pug_html + "\u003C\u002Fp\u003E\u003Cp class=\"m-1 badge badge-primary\" rv-each-role=\"account.roles\" rv-text=\"role\"\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003Cbutton class=\"btn btn-link card-link\" rv-show=\"inIframe | not | and type | eq 'shopify'\" rv-on-click=\"logout\" rv-i18n-text=\"'components.accountConnects.logout'\"\u003E\u003C\u002Fbutton\u003E\u003Cbutton class=\"btn btn-link card-link\" rv-hide=\"type | eq 'shopify'\" rv-on-click=\"disconnect\" rv-i18n-text=\"'components.accountConnects.disconnect'\"\u003E\u003C\u002Fbutton\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"card-body\" rv-hide=\"isConnected\"\u003E\u003Cdiv class=\"card-text\"\u003E\u003Cp rv-i18n-text=\"locales.notConnected\"\u003E\u003C\u002Fp\u003E";
if (type === 'shopify') {
pug_html = pug_html + "\u003Cform action=\"\u002Fshopify\u002Fauth\"\u003E\u003Cdiv class=\"input-group\"\u003E\u003Cinput class=\"form-control\" type=\"text\" name=\"shop\" placeholder=\"your-shop.myshopify.com\" rv-value=\"myshopify_domain\"\u003E\u003Cdiv class=\"input-group-append\"\u003E\u003Cinput class=\"btn btn-outline-primary\" type=\"submit\" rv-i18n-value=\"'components.accountConnects.connect'\"\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fform\u003E";
}
pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003Cbutton class=\"btn btn-link card-link\" rv-on-click=\"connect\" rv-i18n-text=\"'components.accountConnects.connect'\"\u003E\u003C\u002Fbutton\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fsection\u003E";
    }.call(this, "type" in locals_for_with ?
        locals_for_with.type :
        typeof type !== 'undefined' ? type : undefined));
    ;;return pug_html;};
module.exports = template;

/***/ }),

/***/ 2618:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;pug_html = pug_html + "\u003Csection class=\"row\"\u003E\u003Cdiv class=\"col-12\"\u003E\u003Cdiv class=\"card\"\u003E\u003Cdiv class=\"cart-header\"\u003E\u003Ch2 class=\"my-3\" rv-i18n-text=\"'components.parcelLabListTracking.title'\"\u003E\u003C\u002Fh2\u003E\u003Cp class=\"text-muted\" rv-i18n-text=\"'components.parcelLabListTracking.info'\"\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"card-body\"\u003E\u003Cdiv class=\"card-text\"\u003E\u003Ctable class=\"table table-borderless table-hover\"\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003E#\u003C\u002Fth\u003E\u003Cth\u003ECourier\u003C\u002Fth\u003E\u003Cth\u003EStatus\u003C\u002Fth\u003E\u003Cth\u003EDate\u003C\u002Fth\u003E\u003Cth\u003ETracking number\u003C\u002Fth\u003E\u003Cth\u003EUpdates\u003C\u002Fth\u003E\u003Cth\u003EClient\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\u003Ctbody\u003E\u003Ctr rv-each-item=\"list\"\u003E\u003Cth scope=\"row\" rv-text=\"item.inf.orn\"\u003E \u003C\u002Fth\u003E\u003Ctd rv-text=\"item.co.p\"\u003E\u003C\u002Ftd\u003E\u003Ctd rv-text=\"item.lst.sta.status_details\"\u003E\u003C\u002Ftd\u003E\u003Ctd rv-text=\"item.lst.ago\"\u003E\u003C\u002Ftd\u003E\u003Ctd rv-text=\"item.tn\"\u003E\u003C\u002Ftd\u003E\u003Ctd rv-text=\"item.inf.imprtsrc.number_of_updates\"\u003E\u003C\u002Ftd\u003E\u003Ctd rv-text=\"item.oth.cli\"\u003E\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fsection\u003E";;return pug_html;};
module.exports = template;

/***/ }),

/***/ 6315:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;pug_html = pug_html + "\u003Csection class=\"row\"\u003E\u003Cdiv class=\"col-12 col-md-4\"\u003E\u003Ch2 class=\"my-3\" rv-i18n-text=\"'components.parcelLabSettings.title'\"\u003E\u003C\u002Fh2\u003E\u003Cp class=\"text-muted\" rv-i18n-text=\"'components.parcelLabSettings.info'\"\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"col-12 col-md-8\"\u003E\u003Cdiv class=\"card\"\u003E\u003Cdiv class=\"card-body\"\u003E\u003Cdiv class=\"card-text\"\u003E\u003Cform\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel for=\"parcel-lab-user-id\"\u003EUser-ID\u003C\u002Flabel\u003E\u003Cinput class=\"form-control\" id=\"parcel-lab-user-id\" type=\"number\" rv-value=\"settings.user\"\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"form-group\"\u003E\u003Clabel for=\"parcel-lab-token\"\u003EToken\u003C\u002Flabel\u003E\u003Cdiv class=\"input-group\"\u003E\u003Cinput class=\"form-control\" id=\"parcel-lab-token\" rv-type=\"passwortInputType\" aria-describedby=\"parcel-lab-token-help\" rv-value=\"settings.token\"\u003E\u003Cdiv class=\"input-group-append\"\u003E\u003Cdiv class=\"input-group-text cursor-pointer\" rv-hide=\"showPasswort\" rv-on-click=\"togglePassword\" rv-i18n-text=\"'components.parcelLabSettings.showPasswordLabel'\"\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"input-group-text cursor-pointer\" rv-show=\"showPasswort\" rv-on-click=\"togglePassword\" rv-i18n-text=\"'components.parcelLabSettings.hidePasswordLabel'\"\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Csmall class=\"form-text text-muted\" id=\"parcel-lab-token-help\" rv-i18n-text=\"'components.parcelLabSettings.tokenHelp'\"\u003E\u003C\u002Fsmall\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"form-group\"\u003E\u003Cdiv class=\"custom-control custom-checkbox\"\u003E\u003Cinput class=\"custom-control-input\" id=\"prefer_checkout_shipping_method\" type=\"checkbox\" rv-checked=\"settings.prefer_checkout_shipping_method\" aria-describedby=\"prefer-checkout-shipping-method-info\"\u003E\u003Clabel class=\"custom-control-label\" for=\"prefer_checkout_shipping_method\" rv-i18n-text=\"'components.parcelLabSettings.preferCheckoutShippingMethodLabel'\"\u003E\u003C\u002Flabel\u003E\u003C\u002Fdiv\u003E\u003Csmall class=\"form-text text-muted\" id=\"prefer-checkout-shipping-method-info\" rv-i18n-text=\"'components.parcelLabSettings.preferCheckoutShippingMethodInfo'\"\u003E\u003C\u002Fsmall\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"alert alert-danger\" role=\"alert\" rv-if=\"locales.error\" rv-i18n-text=\"locales.error\"\u003E\u003C\u002Fdiv\u003E\u003Cbutton class=\"btn btn-link card-link\" type=\"button\" rv-on-click=\"save\" rv-i18n-text=\"'components.parcelLabSettings.saveLabel'\"\u003E\u003C\u002Fbutton\u003E\u003C\u002Fform\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fsection\u003E";;return pug_html;};
module.exports = template;

/***/ }),

/***/ 5922:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;;
    var locals_for_with = (locals || {});
    
    (function (hasActive) {
      pug_html = pug_html + "\u003Csection class=\"row\"\u003E\u003Cdiv class=\"col-12 col-md-4\"\u003E\u003Ch2 class=\"my-3\" rv-i18n-text=\"'components.plans.title'\"\u003E\u003C\u002Fh2\u003E\u003Cp class=\"text-muted\" rv-i18n-text=\"'components.plans.info'\"\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"col-12 col-md-8\"\u003E";
if (hasActive) {
pug_html = pug_html + "\u003Cdiv class=\"card\"\u003E\u003Cdiv class=\"card-body\"\u003E\u003Cdiv class=\"card-title d-flex justify-content-between\"\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.plan'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-i18n-text=\"active.name | handleize | prepend 'components.plans.name.'\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.activated_on'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-text=\"active.activated_on\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.price'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-i18n-html=\"'components.plans.price_html'\" rv-data-price=\"active.price\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp class=\"card-text\"\u003E\u003Cspan rv-show=\"active.trial_days | gt 0\" rv-i18n-html=\"'components.plans.trial.ends_on'\" rv-data-date=\"active.trial_ends_on\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
}
else {
pug_html = pug_html + "\u003Cdiv class=\"row\"\u003E\u003Cdiv class=\"col-12\" rv-each-plan=\"plans\"\u003E\u003Cdiv class=\"card\"\u003E\u003Cdiv class=\"card-body\"\u003E\u003Cdiv class=\"card-title d-flex justify-content-between\"\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.plan'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-i18n-text=\"plan.name | handleize | prepend 'components.plans.name.'\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.trial.days'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-i18n-text=\"'components.plans.trial.days_html'\" rv-data-days=\"plan.trial_days\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv\u003E\u003Ch2 rv-i18n-text=\"'components.plans.price'\"\u003E\u003C\u002Fh2\u003E\u003Cspan rv-i18n-html=\"'components.plans.price_html'\" rv-data-price=\"plan.price\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003Cp class=\"card-text\"\u003E\u003C\u002Fp\u003E\u003Cbutton class=\"btn btn-link card-link\" rv-on-click=\"activate | args plan\" rv-i18n-text=\"'components.plans.activate'\"\u003E\u003C\u002Fbutton\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
}
pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fsection\u003E";
    }.call(this, "hasActive" in locals_for_with ?
        locals_for_with.hasActive :
        typeof hasActive !== 'undefined' ? hasActive : undefined));
    ;;return pug_html;};
module.exports = template;

/***/ }),

/***/ 2989:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;pug_html = pug_html + "\u003Cdiv class=\"toggler-button p-3 cursor-pointer\" rv-on-click=\"toggle\" rv-class-active=\"sidebarVisable\"\u003E\u003Cbs4-icon rv-hide=\"sidebarVisable\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_menu.svg\" size=\"32\"\u003E\u003C\u002Fbs4-icon\u003E\u003Cbs4-icon rv-show=\"sidebarVisable\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_close.svg\" size=\"32\"\u003E\u003C\u002Fbs4-icon\u003E\u003C\u002Fdiv\u003E";;return pug_html;};
module.exports = template;

/***/ }),

/***/ 5703:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;;
    var locals_for_with = (locals || {});
    
    (function (environment) {
      pug_html = pug_html + "\u003Cdiv class=\"sidebar-content list-group\"\u003E";
if (environment !== 'production') {
pug_html = pug_html + "\u003Cbutton class=\"btn-link list-group-item list-group-item-action d-flex align-items-center cursor-pointer\" rv-on-click=\"reload\"\u003E\u003Cbs4-icon class=\"mr-3\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_refresh.svg\" size=\"20\"\u003E\u003C\u002Fbs4-icon\u003EReload\u003C\u002Fbutton\u003E";
}
pug_html = pug_html + "\u003Ca class=\"list-group-item list-group-item-action d-flex align-items-center\" rv-route=\"'\u002Fview\u002Fsettings'\" rv-route-class-active=\"'\u002Fview\u002Fsettings'\"\u003E\u003Cbs4-icon class=\"mr-3\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_cog.svg\" size=\"20\"\u003E\u003C\u002Fbs4-icon\u003E\u003Cspan rv-i18n-text=\"'titles.settings'\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003Ca class=\"list-group-item list-group-item-action d-flex align-items-center\" rv-route=\"'\u002Fview\u002Forders'\" rv-route-class-active=\"'\u002Fview\u002Forders'\"\u003E\u003Cbs4-icon class=\"mr-3\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_cogs.svg\" size=\"20\"\u003E\u003C\u002Fbs4-icon\u003E\u003Cspan rv-i18n-text=\"'titles.orders'\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E\u003Cdiv class=\"list-group-item list-group-item-action\"\u003E\u003Crv-i18n-switcher\u003E\u003Cdiv class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\"\u003E\u003Clabel class=\"btn btn-outline-primary\" rv-each-langcode=\"langcodes\" rv-class-active=\"langcode.active\"\u003E\u003Cinput type=\"radio\" name=\"langs\" id=\"langcode.code\" autocomplete=\"off\" rv-on-click=\"switch | args langcode\" rv-checked=\"langcode.active\"\u003E\u003Cspan rv-text=\"langcode.code\"\u003E\u003C\u002Fspan\u003E\u003C\u002Flabel\u003E\u003C\u002Fdiv\u003E\u003C\u002Frv-i18n-switcher\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this, "environment" in locals_for_with ?
        locals_for_with.environment :
        typeof environment !== 'undefined' ? environment : undefined));
    ;;return pug_html;};
module.exports = template;

/***/ }),

/***/ 2406:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;pug_html = pug_html + "\u003Cdiv class=\"card monaco-editor-card\"\u003E\u003Cbs4-icon class=\"close m-2\" src=\"\u002Ficonset\u002Fsvg\u002Ficon_close.svg\" size=\"32\" rv-on-click=\"close\"\u003E\u003C\u002Fbs4-icon\u003E\u003Cdiv class=\"card-body pb-0\"\u003E\u003Cdiv class=\"card-title\"\u003ERecived webhook \u003Ccode rv-html=\"event\"\u003E\u003C\u002Fcode\u003E\u003Cspan class=\"badge badge-primary mx-1\" rv-show=\"role | filled\" rv-i18n-text=\"'components.socketEventCard.roles.' | append role | append '.label'\" rv-bs4-tooltip=\"'components.socketEventCard.roles.' | append role | append '.info' | t langcode\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003Cdiv class=\"card-text\"\u003E\u003Ccode rv-html=\"data | json\"\u003E\u003C\u002Fcode\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";;return pug_html;};
module.exports = template;

/***/ }),

/***/ 1239:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;;
    var locals_for_with = (locals || {});
    
    (function (environment) {
      if (environment !== 'production') {
pug_html = pug_html + "\u003Cdiv class=\"row flex-nowrap scrollbar-primary scrollbar-x-auto scrollbar-y-hidden card-container\"\u003E\u003Cdiv class=\"card monaco-editor-card placeholder-card col-auto\"\u003E\u003Cdiv class=\"card-body\"\u003E\u003Cdiv class=\"card-text\" rv-i18n-html=\"'components.webhookExplorer.placeholderCard.content_html'\"\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
}
    }.call(this, "environment" in locals_for_with ?
        locals_for_with.environment :
        typeof environment !== 'undefined' ? environment : undefined));
    ;;return pug_html;};
module.exports = template;

/***/ }),

/***/ 3128:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var pug = __webpack_require__(7164);

function template(locals) {var pug_html = "", pug_mixins = {}, pug_interp;;return pug_html;};
module.exports = template;

/***/ }),

/***/ 2993:
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ 418:
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// Promise = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			143: 0
/******/ 		};
/******/ 		
/******/ 		var deferredModules = [
/******/ 			[4525,216]
/******/ 		];
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		var checkDeferredModules = () => {
/******/ 		
/******/ 		};
/******/ 		function checkDeferredModulesImpl() {
/******/ 			var result;
/******/ 			for(var i = 0; i < deferredModules.length; i++) {
/******/ 				var deferredModule = deferredModules[i];
/******/ 				var fulfilled = true;
/******/ 				for(var j = 1; j < deferredModule.length; j++) {
/******/ 					var depId = deferredModule[j];
/******/ 					if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferredModules.splice(i--, 1);
/******/ 					result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 				}
/******/ 			}
/******/ 			if(deferredModules.length === 0) {
/******/ 				__webpack_require__.x();
/******/ 				__webpack_require__.x = () => {
/******/ 		
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		}
/******/ 		__webpack_require__.x = () => {
/******/ 			// reset startup function so it can be called again when more startup code is added
/******/ 			__webpack_require__.x = () => {
/******/ 		
/******/ 			}
/******/ 			chunkLoadingGlobal = chunkLoadingGlobal.slice();
/******/ 			for(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);
/******/ 			return (checkDeferredModules = checkDeferredModulesImpl)();
/******/ 		};
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (data) => {
/******/ 			var [chunkIds, moreModules, runtime, executeModules] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0, resolves = [];
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					resolves.push(installedChunks[chunkId][0]);
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			parentChunkLoadingFunction(data);
/******/ 			while(resolves.length) {
/******/ 				resolves.shift()();
/******/ 			}
/******/ 		
/******/ 			// add entry modules from loaded chunk to deferred list
/******/ 			if(executeModules) deferredModules.push.apply(deferredModules, executeModules);
/******/ 		
/******/ 			// run deferred modules when all chunks ready
/******/ 			return checkDeferredModules();
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkparcel_lab_shopify_app_frontend"] = self["webpackChunkparcel_lab_shopify_app_frontend"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// run startup
/******/ 	return __webpack_require__.x();
/******/ })()
;